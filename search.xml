<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux学习笔记_命令</title>
      <link href="/2019/11/14/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_Linux_%E5%91%BD%E4%BB%A4/"/>
      <url>/2019/11/14/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_Linux_%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<center>    正好赶上这门儿课程<br>    Linux主流的操作方式</center><a id="more"></a><h3 id="命令相关概念"><a href="#命令相关概念" class="headerlink" title="命令相关概念"></a>命令相关概念</h3><p>命令提示符：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]#     #/root</span><br><span class="line"></span><br><span class="line">[hahaha@localhost ~]$    #/home/chenzhe</span><br></pre></td></tr></table></figure><p>从上面两个命令提示符可以看的出来中括号后的符号不同，其中#表示超级权限(管理员/root)，$表示普通用户的权限</p><p>中括号中的内容分别是：</p><table><thead><tr><th align="center">内容</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">root |  hahaha</td><td align="center">登录的账户名称</td></tr><tr><td align="center">@localhost</td><td align="center">主机名</td></tr><tr><td align="center">~</td><td align="center">表示当前账户的家目录</td></tr></tbody></table><h4 id="命令格式："><a href="#命令格式：" class="headerlink" title="命令格式："></a>命令格式：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令 选项 参数</span><br></pre></td></tr></table></figure><blockquote><p>命令、选项、参数之间，<strong>必须有空格！</strong></p><p>执行的时候，命令本身必须存在，选项和参数可有可无。<br>选项和参数也可以有多个的存在。</p></blockquote><p>执行时，如果有多个选项，可以拼在一起写:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls -a -l 可以写成</span><br><span class="line">ls -al</span><br></pre></td></tr></table></figure><p>执行时，如果有多个参数，参数之间必须有空格隔开</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /root /etc</span><br></pre></td></tr></table></figure><p>执行时可以没有选项、参数的命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p>执行是有参数的命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifup eth0</span><br></pre></td></tr></table></figure><h5 id="获取命令帮助："><a href="#获取命令帮助：" class="headerlink" title="获取命令帮助："></a>获取命令帮助：</h5><table><thead><tr><th align="center">方法</th><th align="center">好处</th></tr></thead><tbody><tr><td align="center">man</td><td align="center">man 命令，优点是，内核自带，缺点，大部分的帮助都是英文</td></tr><tr><td align="center">–help</td><td align="center">命令 –help 优点是：部分命令提供中文，缺点：不是所有的命令都有这个帮助文件</td></tr><tr><td align="center">命令大全手册</td><td align="center"></td></tr><tr><td align="center">问度娘</td><td align="center"></td></tr></tbody></table><h4 id="和目录相关的命令"><a href="#和目录相关的命令" class="headerlink" title="和目录相关的命令:"></a>和目录相关的命令:</h4><table><thead><tr><th align="center">命令</th><th align="center">作用及参数</th></tr></thead><tbody><tr><td align="center">pwd</td><td align="center">用于显示当前所在的完整路径</td></tr><tr><td align="center">mkdir</td><td align="center">用于创建一个目录。  -p 该选项用于创建多级目录。</td></tr><tr><td align="center">cd</td><td align="center">用于切换目录 | 路径  . 表示当前目录  .. 表示上级(父级)目录  ~ 表示用户的家目录，如果在~跟用户名，就表示要去到该用户的家目录。  “-“  表示与上次所在目录进行切换。  相对路径：相对于当前所在位置而出发的路径。  绝对路径：以/(根目录)开始的路径。</td></tr><tr><td align="center">ls</td><td align="center">用于显示目录 | 文件的信息  -a：显示所有的文件夹内容(包括隐藏)  -l：用于显示文件/夹的详细信息  -h：与-l配合使用，可以显示文件的体积大小(自适应单位b,k,m,g …)  -d：跟上指定的目录时，就会显示该目录的信息，不会显示目录下的文件</td></tr></tbody></table><p><strong>mkdir案例</strong>：</p><p>​    mkdir 默认只能创建一个级别的目录，如果想要创建多级目录时，需要配合-p选项来使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /root/1/2/3/4/5</span><br></pre></td></tr></table></figure><p>此命令必然失败，因为mkdir默认不支持多级目录,需要这样:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /root/1/2/3/4/5</span><br></pre></td></tr></table></figure><p><strong>cd 案例：</strong></p><p>进入指定用户(zhangssan)的家目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~zhangsan</span><br></pre></td></tr></table></figure><p>去到/root/目录下(说明：当前在/etc/sysconfig/network-scripts/)</p><p>相对路径：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ../../../root</span><br></pre></td></tr></table></figure><p>绝对路径：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /root</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">命令</th><th align="center">作用即参数</th></tr></thead><tbody><tr><td align="center">cp</td><td align="center">语法：cp [path]/file1 [path]/file2  用于copy(拷贝)文件/夹的命令  如果<strong>拷贝的是一个文件夹</strong>时，需要配合选项<strong>-r</strong>来使用</td></tr><tr><td align="center">mv</td><td align="center">语法：mv [path]/file [path]/  改名：mv fileName1 fileName2</td></tr><tr><td align="center">touch</td><td align="center">用于创建一个空白的文本文件，也可以修改文件/夹的时间戳</td></tr><tr><td align="center">rm</td><td align="center">-r 表示递归处理  -f 表示强制执行</td></tr><tr><td align="center">rmdir</td><td align="center">用于删除目录使用，但只能删除空目录。</td></tr></tbody></table><p><strong>案例：</strong></p><p>拷贝一个文件到别的目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /root/install.log /home</span><br></pre></td></tr></table></figure><p>拷贝整个目录到其它目录下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -r /root/ /home/  # 将root目录拷贝到home目录下</span><br><span class="line">cp -r /root/* /home  # 将root目录下的所有内容拷贝到/home目录下</span><br></pre></td></tr></table></figure><p>移动文件和修改名称</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv /home/install.log /tmp  # 移动了文件到/tmp目录下</span><br><span class="line">mv /tmp/install.log /home/1 # 移动/tmp目录下的install文件到/home目录下，并同时修改文件名为"1"</span><br></pre></td></tr></table></figure><table><thead><tr><th>命令</th><th>用法及参数</th></tr></thead><tbody><tr><td>rename</td><td>语法：rename 修改谁 改成啥样 谁符合条件  批量改名  ? 代表一个字符  ?? 代表两个字符</td></tr></tbody></table><p><strong>案例：</strong></p><p>通过修改文件名称让文件可以得到一个正确的排序(升序)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch foo&#123;1..199&#125;</span><br></pre></td></tr></table></figure><p><strong>语法：</strong>rename 修改谁 改成是样 谁符合条件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rename foo foo0 foo?</span><br></pre></td></tr></table></figure><blockquote><p> 修改之后文件名foo1..foo9就变成foo01..foo09</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rename foo foo0 foo??</span><br></pre></td></tr></table></figure><blockquote><p> 修改之后文件名foo01..foo99就变成了foo001..foo099</p></blockquote><p>此时就完成了文件的排序</p><h4 id="运行级别"><a href="#运行级别" class="headerlink" title="运行级别:"></a>运行级别:</h4><p><strong>级别：</strong></p><table><thead><tr><th align="center">代码</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">关机</td></tr><tr><td align="center">1</td><td align="center">单用户 # 注意该模式下不提供网络连接，所以无法使用超级终端进行连接。</td></tr><tr><td align="center">2</td><td align="center">无网络多用户</td></tr><tr><td align="center">3</td><td align="center">命令行模式</td></tr><tr><td align="center">4</td><td align="center">官方预留，未定义内容</td></tr><tr><td align="center">5</td><td align="center">图形化模式</td></tr><tr><td align="center">6</td><td align="center">重启</td></tr></tbody></table><p><strong>如何进行运行级别的切换：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">init 运行级别的数字</span><br></pre></td></tr></table></figure><p><strong>修改默认的运行级别：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/inittab</span><br></pre></td></tr></table></figure><blockquote><p> 在文件的最后一行内容中，将默认的5修改为3，就表示以后开机时以命令行模式运行。 </p><p> <strong>注：</strong></p><p> 默认运行级别不要设置为0或6，因为Linux系统启动是，执行的第一个进程就是init。默认会去读取inittab配置文件</p></blockquote><p> <strong>如何进入单用户模式</strong></p><ol><li>在系统启动,进入 4 秒等待时,敲击回车或方向键</li><li>出现CentOS…..,按字母e</li><li>然后选择kernel打头的,接着按e</li><li>进入有KEYTABLE=us的界面, 请输入 <code>空格 1</code>，输入完毕之后按一下 <code>Enter</code> 键 </li><li>此时回回到步骤三的界面,按b</li></ol><p><strong>忘记root密码后怎么办?</strong></p><p>可以通过上面的案例进入单用户模式：</p><p>进入单用户模式的步骤省略~</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd    # 修改root账户的密码</span><br></pre></td></tr></table></figure><h4 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理:"></a>用户管理:</h4><p>在Linux的系统中有如下几个概念:</p><p><strong>用户,用户组,其他人</strong></p><p>用我们家庭的关系比喻可以这样理解:</p><table><thead><tr><th align="center">概念</th><th align="center">比喻</th></tr></thead><tbody><tr><td align="center">用户</td><td align="center">一个户口本中的每一个成员</td></tr><tr><td align="center">用户组</td><td align="center">户口本中的所有成员组成的一个组</td></tr><tr><td align="center">其他人</td><td align="center">除用户本人(户主)和用户组(户口本中的成员)外的成员都是其他人</td></tr></tbody></table><blockquote><p><strong>注:</strong></p><p>每一个用户都可以拥有多个用户组。</p><p>每一个用户组都可以容纳多个用户。</p></blockquote><h5 id="用户及UID"><a href="#用户及UID" class="headerlink" title="用户及UID"></a>用户及UID</h5><p>在Linux系统中，每一个用户默认都对应了一个UID，而这个UID可以理解是用户的身份证号。</p><p>CentOS系统中：</p><table><thead><tr><th align="center">UID</th><th align="center">用户</th></tr></thead><tbody><tr><td align="center">UID 0</td><td align="center">root</td></tr><tr><td align="center">UID 1-499</td><td align="center">系统预留，作为系统用户来使用</td></tr><tr><td align="center">UID 500 -  65535</td><td align="center">自定义账户 (注意，此处仅指的是CentOS6.5系统，其他系统的自定义账户则不一定是从500开始，例如Ubuntu系统是从1000开始。)</td></tr></tbody></table><h5 id="用户信息存储的位置："><a href="#用户信息存储的位置：" class="headerlink" title="用户信息存储的位置："></a>用户信息存储的位置：</h5><table><thead><tr><th align="center">信息</th><th align="center">路径</th></tr></thead><tbody><tr><td align="center">用户信息</td><td align="center">/etc/passwd</td></tr><tr><td align="center">密码信息</td><td align="center">/etc/shadow</td></tr><tr><td align="center">用户组信息</td><td align="center">/etc/group</td></tr></tbody></table><blockquote><p><strong>注:</strong></p><p>passwd、shadows、group这三个文件不要随意的进行修改，如果想要进行文件内容的查看，建议大家copy出一份，对copy的文件进行修改。</p><p>或</p><p>把文件copy出来之后，进行保存，再去修改原文件。这样做即便是写错了文件也可以通过单用户的方式将文件恢复。</p></blockquote><h5 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令:"></a>相关命令:</h5><blockquote><p>就是用于对passwd,shadow,group三个文件的增删改.</p></blockquote><p>新建的用户，默认的情况下是无法登录的。</p><p>创建一个用户的时候，默认情况下，会为其创建一个同名的用户组</p><h6 id="创建："><a href="#创建：" class="headerlink" title="创建："></a><strong>创建：</strong></h6><p><strong>语法：</strong><code>useradd [选项] {UserName}</code></p><p>选项：</p><table><thead><tr><th>-c comment</th><th>指定一段注释性描述</th></tr></thead><tbody><tr><td>-d 目录</td><td>指定用户主目录，如果目录不存在，则同时使用-m选项，可以创建主目录。</td></tr><tr><td>-g 用户组</td><td>指定用户所属的主用户组。</td></tr><tr><td>-G 用户组,用户组</td><td>指定用户所属的附加组。</td></tr><tr><td>-s Shell文件</td><td>指定用户的登录Shell。有一个特殊的shell程序叫nologin，如果某帐号使用此shell，就表示用户不允许登录，该用户通常成为<strong>伪用户</strong>。</td></tr><tr><td>-u 用户号</td><td>指定用户的用户号</td></tr></tbody></table><p><strong>案例:</strong></p><p>创建一个普通用户，使用默认值即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd tom</span><br></pre></td></tr></table></figure><blockquote><p> 说明：该账户被创建完之后，会有哪些信息</p><ol><li><p>UID，由于是当前系统的第一个账户，那么它的UID是500。</p></li><li><p>家目录(主目录)，因为是默认创建，所以它的家目录所在位置是/home/tom</p></li><li><p>用户组，创建用户的同时，会为其创建一个同名的用户组，tom组</p></li></ol></blockquote><p>创建一个普通用户，其家目录是在/tedu/jerry，主组root,附加组tom,adm。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -d /tedu/jerry -m -g root -G tom,adm jerry</span><br></pre></td></tr></table></figure><p>执行用户的shell程序为/bin/sh，UID为80000</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -s /bin/sh -u 80000 test1</span><br></pre></td></tr></table></figure><blockquote><p>说明：虽然CentOS系统中默认的UID是65536个(0-65535)，但是可以手动指定它的UID超出此范围。</p></blockquote><p>测试再创建账户是UID会不会延续上案例的UID。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd test2</span><br></pre></td></tr></table></figure><p>正常来应该按照上次创建用户的UID往后+1。但是80000已超过系统默认的范围，所以不会根据超出范围后UID进行+1延续。</p><p>创建伪用户：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -s /sbin/nologin test3</span><br></pre></td></tr></table></figure><h6 id="修改："><a href="#修改：" class="headerlink" title="修改："></a>修改：</h6><p><strong>语法：</strong><code>usermod [选项] {UserName}</code></p><table><thead><tr><th align="center">选项</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">-c comment</td><td align="center">指定一段注释性描述</td></tr><tr><td align="center">-d</td><td align="center">目录  指定用户主目录，如果目录不存在，则同时使用-m选项，可以创建主目录。</td></tr><tr><td align="center">-g 用户组</td><td align="center">指定用户所属的用户组。</td></tr><tr><td align="center">-G 用户组,用户组</td><td align="center">指定用户所属的附加组。如果想要在原有的基础上追加附加组，使用-aG的方式。</td></tr><tr><td align="center">-s Shell文件</td><td align="center">指定用户的登录Shell。有一个特殊的shell程序叫nologin，如果某帐号使用此shell，就表示用户不允许登录，该用户通常成为伪用户。</td></tr><tr><td align="center">-u 用户号</td><td align="center">指定用户的用户号</td></tr></tbody></table><p><strong>案例：</strong></p><p>修改test账户的UID。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -u 9000 test1</span><br></pre></td></tr></table></figure><p>修改账户的附加组为test、test1：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -G test,test1 jerry</span><br></pre></td></tr></table></figure><p>为账户追加附加组件root、adm</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -aG root,adm jerry</span><br></pre></td></tr></table></figure><p>将test5的伪用户状态修改为正常普通用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -s /bin/bash test5</span><br></pre></td></tr></table></figure><blockquote><p>说明：test5之前的shell程序是/sbin/nologin</p></blockquote><h6 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h6><p><strong>语法</strong>：<code>userdel [选项] {UserName}</code></p><p>选项：</p><table><thead><tr><th align="center">选项</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">-r</td><td align="center">删除账户的同时删除该账户的家目录</td></tr></tbody></table><p><strong>案例：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userdel zhangsan</span><br></pre></td></tr></table></figure><blockquote><p> 说明：该命令执行完成之后，在home目录下依然保留了zhangsan的家目录。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userdel -r lisi</span><br></pre></td></tr></table></figure><blockquote><p> 说明：该命令之后之后，home目录中的lisi目录会被一并删除，且不保留它的工作文件。</p></blockquote><p>一般来说，公司中删除账户的操作比较少，就算删除账户时，一般也不用-r的选项，因为人虽然离职，但是有可能此人还会回来继续任职~</p><p>如果员工离职，完全没有必要删除账户，可以使账户无法登录即可，比如nologin，锁定账户，删除密码等手段都是可以防止资料泄漏。</p><blockquote><p><strong>注：</strong></p><p>Windows和Linux系统(其他系统没测试)，没有密码的账户都是不允许通过远程的方式进行访问的。</p></blockquote><h6 id="密码管理"><a href="#密码管理" class="headerlink" title="密码管理"></a>密码管理</h6><p><strong>语法</strong>：<code>passwd [选项] {UserName}</code></p><p>选项：</p><table><thead><tr><th align="center">选项</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">-l</td><td align="center">锁定账户</td></tr><tr><td align="center">-u</td><td align="center">解锁账户</td></tr><tr><td align="center">-d</td><td align="center">删除密码</td></tr></tbody></table><p>passwd 可以不跟选项、用户名，默认是修改自己的帐号密码。</p><p>修改他人密码，必须具备管理员权限(并不一定非要是root账户)</p><blockquote><p>普通账户，只能修改自己的密码。</p></blockquote><blockquote><p>管理员修改他人的密码，不需要满足密码策略。</p></blockquote><blockquote><p>普通账户修改密码时，必须满足密码安全策略。</p></blockquote><p>管理员修改他人密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd &#123;UserName&#125;</span><br></pre></td></tr></table></figure><p>修改自己的密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure><p><strong>案例：</strong></p><p>锁定zhangsan账户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd -l zhangsan</span><br></pre></td></tr></table></figure><p>解锁zhangsan账户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd -u zhangsan</span><br></pre></td></tr></table></figure><p>删除zhangsan账户密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd -d zhangsan</span><br></pre></td></tr></table></figure><p>案例中，锁定账户和删除账户密码都是可以达到不允许账户远程登录的效果。</p><h6 id="用户身份切换"><a href="#用户身份切换" class="headerlink" title="用户身份切换"></a><strong>用户身份切换</strong></h6><table><thead><tr><th align="center">命令</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">su  {UserName}</td><td align="center">表示切换用户之后，依然停留在当前目录</td></tr><tr><td align="center">su -  {UserName}</td><td align="center">表示切换用户之后，去到该用户的家目录</td></tr></tbody></table><blockquote><p>普通用户切换root时，书写格式不需要写成su - root，直接su即可。</p></blockquote><p><strong>案例：</strong></p><p>当前位置，在/root下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su zhangsan</span><br></pre></td></tr></table></figure><p>该命令执行过后，切换到zhangsan账户，但是路径依然停留在/root目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su - zhangsan</span><br></pre></td></tr></table></figure><p>该命令执行过后，切换到zhangsan账户，同时会去到zhangsan账户的家目录下。</p><p><strong>小总结</strong>，su与账户名之间加不加”-“区别在于路径。</p><h4 id><a href="#" class="headerlink" title=" "></a> </h4><h4 id="用户组的增删改"><a href="#用户组的增删改" class="headerlink" title="用户组的增删改"></a>用户组的增删改</h4><h5 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h5><p><strong>语法</strong>：<code>groupadd [选项] {groupName}</code></p><table><thead><tr><th align="center">选项</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">-g GID</td><td align="center">指定新用户组的GID</td></tr><tr><td align="center">-o</td><td align="center">通常与-g同时使用，使新用户组可以与系统已有的组ID系统。</td></tr></tbody></table><p>系统底层会将两个GID相同用户组识别为同一个用户组，这样做的目的是让两个用户组的权限相同。识别规则，后者遵循前者。</p><p><strong>案例：</strong></p><p>新建一个用户组</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd group1</span><br></pre></td></tr></table></figure><blockquote><p> 此命令向系统中增加了一个新组group1，新组的组标识号，在当前已有的最大组标识号的基础上加1</p></blockquote> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd -g 101 group2</span><br></pre></td></tr></table></figure><blockquote><p>此命令向系统中增加了一个新组group2，同时指定新组的组标识号是101。</p></blockquote><p>创建一个普通的用户组，并将该组添加为tom账户的附加组</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -aG group1 tom</span><br></pre></td></tr></table></figure><p>创建一个与上面案例GID相同的用户组</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd -g 1000 -o group2</span><br></pre></td></tr></table></figure><h5 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h5><p><strong>语法</strong>：<code>groupmod [选项] {groupName}</code></p><p>选项：</p><table><thead><tr><th>-g GID</th><th>指定新用户组的GID</th></tr></thead><tbody><tr><td>-o</td><td>通常与-g同时使用，使新用户组可以与系统已有的组ID系统。</td></tr><tr><td>-n</td><td>用来修改组ID  group -n newGroupName  oldGroupName</td></tr></tbody></table><p><strong>案例：</strong></p><p>将组group2的组标识号修改为102。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupmod -g 102 group2</span><br></pre></td></tr></table></figure><p>新建一个group3，并将其组名修改成big1902</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groupadd group3</span><br><span class="line">groupmod -n big1902 group3</span><br></pre></td></tr></table></figure><h5 id="删除-1"><a href="#删除-1" class="headerlink" title="删除"></a><strong>删除</strong></h5><p><strong>语法</strong>：<code>groupdel {groupName}</code></p><p><strong>案例：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupdel big1902</span><br></pre></td></tr></table></figure><blockquote><p> 注：</p><p>如果删除的用户组，已经被用户追加为附件组，对应的所有用户的该附件组会被撤销掉。</p><p>如果被删除的用户组，已经被用户指定为主组，则该用户组无法被删除。(可以理解为像Windows中文件被占用时不能被删除。)</p></blockquote><h5 id="用户组的切换"><a href="#用户组的切换" class="headerlink" title="用户组的切换"></a>用户组的切换</h5><p>某用户属于多个用户组时，想要访问其他用户组中的内容时，必须切换用户组才行。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">newgrp &#123;GroupName&#125;</span><br></pre></td></tr></table></figure><blockquote><p>前提是该账户确实是拥有多个用户组。</p></blockquote><h4 id="权限相关"><a href="#权限相关" class="headerlink" title="权限相关"></a>权限相关</h4><p><strong>权限</strong></p><p>在Linux系统对于权限的设定非常的敏感，如果某个用户执行一个操作时，提示权限不足，那么根据Linux系统的权限设定的思想(没有权限绝对不会睁一只眼闭一只眼)，就能够判断出该用户不具备此文件的执行权限。</p><p>在Linux系统中，有以下的权限表示。业内人士称之为：</p><ul><li><p>逻辑权限</p></li><li><p>物理权限</p></li><li><p>普通用户的root的权限。</p></li></ul><p><strong>逻辑权限：</strong></p><p>在Linux系统中不管是文件还是目录。(在Linux系统中，将所有的东西都视为文件。)都有固定权限表示。</p><p>例：</p><p><code>drwxr-xr-x. 2 root root 4096 5月 13 15:27 home</code></p><p><code>-rw-r--r--. 1 root root 45537 5月 13 11:15 install.log</code></p><p>两个文件分别是：第一个是目录，第二个是普通文件</p><p>根据信息的<strong>第一个字母(文件类型)</strong>来查看，d表示该文件是一个目录文件，-表示该文件是一个普通文件。</p><p>后面每三个权限成为一组，每组中分别有三个权限：</p><table><thead><tr><th align="center">字符</th><th align="center">权限</th><th align="center">数字</th></tr></thead><tbody><tr><td align="center">r</td><td align="center">读</td><td align="center">4</td></tr><tr><td align="center">w</td><td align="center">写</td><td align="center">2</td></tr><tr><td align="center">x</td><td align="center">执行</td><td align="center">1</td></tr></tbody></table><p>除了第一个字母不参与权限的表示，其他的都为权限标识符。</p><p>每三个为一组，共有三组：</p><table><thead><tr><th align="center">第几组</th><th align="center">什么人</th><th align="center">前面的英语</th></tr></thead><tbody><tr><td align="center">第一组</td><td align="center">用户</td><td align="center">user</td></tr><tr><td align="center">第二组</td><td align="center">用户组</td><td align="center">group</td></tr><tr><td align="center">第三组</td><td align="center">其他人</td><td align="center">other</td></tr></tbody></table><blockquote><p><strong>说明：Linux系统中，不管是什么系统，权限的标识符号的位置是不会发生任何的改变，也就是说，</strong></p><p><strong>第1个永远是文件类型，</strong></p><p><strong>第2-4(第一组)永远是读、写、执行，用户的权限，</strong></p><p><strong>第5-7(第二组)永远是读、写、执行，用户组的权限，</strong></p><p><strong>第8-10(第三组)永远是读、写、执行，其他人的权限。</strong></p><p><strong>如果某个文件权限标识为———-，那么则说明此文件不允许任何的读取、写入、执行</strong></p></blockquote><h5 id="修改文件-夹的权限："><a href="#修改文件-夹的权限：" class="headerlink" title="修改文件/夹的权限："></a>修改文件/夹的权限：</h5><p>chmod命令可以用来修改某个文件或文件夹的权限。</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-R</td><td>递归处理</td></tr></tbody></table><blockquote><p><strong>修改文件/夹的权限时，可以使用字符权限，也可以使用数字权限。</strong></p></blockquote><p><strong>案例：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch test_1 # 当前文件的权限是-rw-r--r--</span><br></pre></td></tr></table></figure><p>将此文件的权限修改为———-</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 000 test_1</span><br></pre></td></tr></table></figure><p>为此文件，每组都增加一个读的权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod 444 test_1</span><br><span class="line">or</span><br><span class="line">chmod +r test_1</span><br></pre></td></tr></table></figure><blockquote><p>a=all,u=user,g=group,o=other</p></blockquote><p>为此文件的用户增加一个rw-，组增加一个r-x，其他人—。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod u+rw,g+rx test_1</span><br><span class="line">or</span><br><span class="line">chmod 650 test_1</span><br></pre></td></tr></table></figure><blockquote><p>0表示没有权限</p></blockquote><p><strong>chmod在修改文件权限的时候，哪个便捷用哪个方法。</strong></p><blockquote><p><strong>比如：</strong></p><p>如果要是给三组增加执行权限的时候，+x就数字计算要快。字符权限就比数字要便捷(不需要计算)如果是为每组增加不同权限的时候，用数字比较便捷(书写便捷)。</p></blockquote><p><strong>物理权限：</strong></p><p>修饰某个文件/夹不允许被修改。注意：不能给/ p/tm /dev /var 加保护</p><p>即便是root权限也不一定所有的文件都可以删</p><p><code>chattr [选项] file/dir</code></p><table><thead><tr><th align="center">选项</th><th>功能</th></tr></thead><tbody><tr><td align="center">i</td><td>表示不能以任何方式进行文件/夹的修改，增加，删除</td></tr><tr><td align="center">S</td><td>即时更新文件或 目录</td></tr><tr><td align="center">s</td><td>保密性删除文件或目录</td></tr><tr><td align="center">a</td><td>表示文件/夹只能追加，不能修改，删除</td></tr><tr><td align="center">+  &lt;属性&gt;</td><td>表示开启某文件/夹的权限</td></tr><tr><td align="center">&lt;属性&gt;</td><td>表示关闭某文件/夹的权限</td></tr><tr><td align="center">R</td><td>表示递归处理。</td></tr></tbody></table><p><strong>案例：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">touch big1902</span><br><span class="line">chattr +i big1902  # 表示该文件不允许修改，删除，增加。</span><br><span class="line">touch big 1902_1 </span><br><span class="line">chattr +a big1902_1 # 表示该文件只允许追加内容，不允许删除和修改。</span><br></pre></td></tr></table></figure><p><strong>a、i的使用场景：</strong></p><p>通常情况，log文件用a的属性。如果是cfg（配置文件）文件用i的属性。</p><p><strong>lsattr查看文件的物理权限(属性)</strong></p><p><code>lsattr [选项] 文件/夹</code></p><table><thead><tr><th align="center">选项</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">R</td><td align="center">表示递归处理</td></tr><tr><td align="center">a</td><td align="center">表示查看所有文件的属性，包括隐藏</td></tr><tr><td align="center">d</td><td align="center">显示目录的属性，而不是目录下的文件的属性</td></tr></tbody></table><p><strong>普通用户的超级权限：</strong></p><p>sudo(SuperUser Do)，它可以让普通用户执行root的权限。sudo可以限制用户执行部分root的权限。</p><p>sudo会记录用户执行过的每一条命令，便于查阅服务起出事之前的状态。</p><p><strong>好处：</strong></p><p>使用自己配置好的用户环境</p><p>不需要知道root密码，保证root的密码安全</p><p>可以限制用户执行有限的root权限</p><p>sudo执行的每条命令都会被记录，便于日后的日志审计，例如用户执行过高危操作命令。</p><h4 id="网络相关"><a href="#网络相关" class="headerlink" title="网络相关"></a>网络相关</h4><h5 id="通过主机名查看IP："><a href="#通过主机名查看IP：" class="headerlink" title="通过主机名查看IP："></a>通过主机名查看IP：</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">host www.baidu.com</span><br></pre></td></tr></table></figure><p>返回的结果中有该域名的IP地址。</p><h5 id="远程拷贝："><a href="#远程拷贝：" class="headerlink" title="远程拷贝："></a>远程拷贝：</h5><p>从本机拷贝数据到远程的服务器上</p><p><strong>要求</strong>：必须知道对方的账户和密码，且具备相应的权限。</p><p><strong>语法</strong>：<code>scp [-r] [path]/fie | dir {UserName}@Host_IP:/[path]</code></p><table><thead><tr><th align="center">选项</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">-r</td><td align="center">该选项用于传输文件夹的时候使用。</td></tr></tbody></table><p><strong>案例</strong>：</p><p><strong>将本机的文件拷贝到远程服务器上</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp /root/install.log root@192.168.89.128:/home</span><br></pre></td></tr></table></figure><blockquote><p>注意， 如果是第一次访问该服务器，那么会询问，是否要继续连接。每次访问都需要输入远程服务器的密码。</p></blockquote><p><strong>从远程服务器上拷贝数据到本机：</strong></p><p><strong>要求</strong>：必须知道对方的账户和密码，且具备相应的权限。</p><p><strong>语法</strong>：<code>scp {UserName}@Host_IP:/[path]/file /[path]</code></p><h5 id="登录远程服务器："><a href="#登录远程服务器：" class="headerlink" title="登录远程服务器："></a>登录远程服务器：</h5><p><strong>语法</strong>：<code>ssh {UserName}@Host_IP</code></p><p>回车之后，如果首次访问，会提示是否继续连接。接下来要求输入远程服务器的密码。</p><p><strong>案例：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@192.168.89.128</span><br></pre></td></tr></table></figure><p>如果想退出当前登录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure><p>Linux系统下，ssh服务的默认端口是22。如果在访问是没有指明端口，默认按照22端口访问，如果远程服务器，提供的端口不是22，那么就需要在访问的时候指定远程服务器的端口：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh [-p port] &#123;UserName&#125;@Host_IP</span><br></pre></td></tr></table></figure><h4 id="进程相关"><a href="#进程相关" class="headerlink" title="进程相关"></a>进程相关</h4><p><strong>如何查看进程：</strong></p><p>在Linux系统中，不像windows那样方便，可以通过快捷键调出图形化的任务管理器来管理进程。</p><h5 id="静态查询："><a href="#静态查询：" class="headerlink" title="静态查询："></a>静态查询：</h5><p><code>ps:</code></p><blockquote><p>将某个时间点的程序运作情况截取下来 </p></blockquote><p><strong>常用组合选项 -aux</strong></p><table><thead><tr><th align="center">选项</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">a</td><td align="center">关联的所有  process，通常与x一起使用，列出完整信息。</td></tr><tr><td align="center">x</td><td align="center">后台进程</td></tr><tr><td align="center">u</td><td align="center">有效使用者的相关联的进程</td></tr><tr><td align="center">ajxf</td><td align="center">可以让ps的结果以树状的格式显示出来。</td></tr></tbody></table><blockquote><p>举例：当我们新开一个通道编辑一个文件的时候，我们通过ps -aux可以查看到</p></blockquote><h6 id="查询特定进程用"><a href="#查询特定进程用" class="headerlink" title="查询特定进程用"></a>查询特定进程用</h6><p>查询sshd服务:</p><p><code>ps -aux | grep sshd</code></p><table><thead><tr><th align="center">查询结果</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center">USER</td><td align="center">用户</td></tr><tr><td align="center">PID</td><td align="center">进程ID</td></tr><tr><td align="center">%CPU</td><td align="center">cpu占用率</td></tr><tr><td align="center">%MEM</td><td align="center">内存使用率</td></tr><tr><td align="center">VSS</td><td align="center">虚拟内存使用量</td></tr><tr><td align="center">RSS</td><td align="center">物理内存使用量</td></tr><tr><td align="center">TTY</td><td align="center">tty1-tty6  是本机上面的登入者程序。  pts/0  等等的,则表示为由网络连接进主机的程序。  如果显示？则表示与终端机无关。</td></tr><tr><td align="center">STAT</td><td align="center">进程的状态</td></tr><tr><td align="center">START</td><td align="center">进程启动的时间</td></tr><tr><td align="center">TIME</td><td align="center">累计消耗CPU的时间</td></tr><tr><td align="center">COMMAND</td><td align="center">表示哪个命令/程序运行的该进程</td></tr></tbody></table><table><thead><tr><th align="center">状态标识</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">R</td><td align="center">正在运行，或在队列中的进程</td></tr><tr><td align="center">S</td><td align="center">处于休眠状态</td></tr><tr><td align="center">l</td><td align="center">多进程</td></tr><tr><td align="center">Z</td><td align="center">僵尸进程</td></tr><tr><td align="center">T</td><td align="center">停止或者被追踪</td></tr><tr><td align="center">&lt;</td><td align="center">高优先级</td></tr><tr><td align="center">N</td><td align="center">低优先级</td></tr><tr><td align="center">s</td><td align="center">包含子进程</td></tr><tr><td align="center">+</td><td align="center">位于后台的进程组</td></tr></tbody></table><p><strong><em>僵尸进程：</em></strong></p><p>由于该进程已经执行完毕，但是父进程没有终止或其他原因导致该进程并没有真正的结束，所形成的进程称之为僵尸进程。</p><p>此进程对服务器的危害在于它会持续的消耗服务器资源，消耗量会越来越大。最终导致其他的进程无资源可用，服务器崩溃。</p><p><code>pstree</code></p><table><thead><tr><th align="center">选项</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center">A</td><td align="center">各程序之间的连接以ASCII字符来连接</td></tr><tr><td align="center">U</td><td align="center">各程序之间的连接以UTF-8的字符来连接</td></tr><tr><td align="center">u</td><td align="center">列出每个process的所属账号名称</td></tr><tr><td align="center">p</td><td align="center">同时列出每个程序的进程的ID</td></tr></tbody></table><p>举例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pstree -up</span><br></pre></td></tr></table></figure><blockquote><p><strong>注：使用哪个账户运行此命令，那么与其相关的进程则不会显示用户名</strong></p></blockquote><h5 id="动态查询："><a href="#动态查询：" class="headerlink" title="动态查询："></a>动态查询：</h5><p><code>top：</code></p><p>动态查询系统的进程状态。默认是3秒一更新。</p><table><thead><tr><th align="center">选项</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">-d</td><td align="center">跟时间，可以修改top默认更新(刷新)的时间</td></tr><tr><td align="center">-b :</td><td align="center">以批次的方式执行 top  ,还有更多的参数可以使用,通常会搭配数据流 重导向来将批次的结果输出成为档案;</td></tr><tr><td align="center">-n Number：</td><td align="center">与 -b 搭配,意义是需要进行几次 top  的输出结果;</td></tr><tr><td align="center">-p :</td><td align="center">指定某些个 PID 来进行观察监测而已;</td></tr></tbody></table><p><strong>案例：</strong></p><p>每秒刷新一次top</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top -d 1</span><br></pre></td></tr></table></figure><p>每2秒刷新一次top，以批次输出2次。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top -d 2 -n 2</span><br></pre></td></tr></table></figure><p>每秒刷新一次top，以批次输出5次。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top -d 1 -b -n 5 &gt;&gt; top.log   # &gt;&gt;表示以追加的方式输出，&gt;表示以覆盖的方式输出</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">交互式按键：(并不常用)</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">? :</td><td align="center">显示在 top 当中可以输入的按键指令</td></tr><tr><td align="center">P :</td><td align="center">以CPU的使用资源排序显示</td></tr><tr><td align="center">M :</td><td align="center">以Memory的使用资源排序显示</td></tr><tr><td align="center">N :</td><td align="center">以PID来排序</td></tr><tr><td align="center">T :</td><td align="center">由该Process使用的CPU时间累积  (TIME+) 排序</td></tr><tr><td align="center">q :</td><td align="center">离开top软件的按键</td></tr></tbody></table><h5 id="进程的管理："><a href="#进程的管理：" class="headerlink" title="进程的管理："></a>进程的管理：</h5><h6 id="单进程的管理："><a href="#单进程的管理：" class="headerlink" title="单进程的管理："></a>单进程的管理：</h6><p>kill：结束某个进程</p><p><strong>语法</strong>：<code>kill 信号量 PID</code></p><table><thead><tr><th align="center">信号量</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">-15:</td><td align="center">以正常的程序方式终止一个进程！！！</td></tr><tr><td align="center">-9 :</td><td align="center">立刻强制终止一个进程！！！（！！不能强制结束系统级别的进程）</td></tr><tr><td align="center">-2 :</td><td align="center">代表由键盘输入 [ctrl] + c  同样的动作;</td></tr><tr><td align="center">-1 :</td><td align="center">对于sshd这样的守护进程，重新读取一次参数的配置文件      (类似 reload)，如果进程为非守护进程，默认为终止进程; ！！</td></tr></tbody></table><h6 id="多进程的管理："><a href="#多进程的管理：" class="headerlink" title="多进程的管理："></a>多进程的管理：</h6><p>killall：结束基于某个程序运行进程。</p><p>语法：<code>killall 信号量 程序名/命令名</code></p><table><thead><tr><th align="center">信号源</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">-15:</td><td align="center">以正常的程序方式终止一个进程！！！</td></tr><tr><td align="center">-9 :</td><td align="center">立刻强制终止一个进程！！！（！！不能强制结束系统级别的进程）</td></tr><tr><td align="center">-2 :</td><td align="center">代表由键盘输入 [ctrl] + c  同样的动作;</td></tr><tr><td align="center">-1 :</td><td align="center">对于sshd这样的守护进程，重新读取一次参数的配置文件      (类似 reload)，如果进程为非守护进程，默认为终止进程; ！！</td></tr></tbody></table><p><strong>案例：</strong></p><p>结束所有httpd的进程（如果没有可以先安装一下yum install -y httpd）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">killall -9 httpd</span><br></pre></td></tr></table></figure><p>结束所有java的进程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">killall -9 java</span><br></pre></td></tr></table></figure><h4 id="任务管理"><a href="#任务管理" class="headerlink" title="任务管理"></a>任务管理</h4><h5 id="概念："><a href="#概念：" class="headerlink" title="概念："></a>概念：</h5><p><strong>前台任务：</strong>可以控制与执行命令的bash环境称为前台。</p><p><strong>后台任务：</strong>在操作系统中自行运行,你无法使用[ctrl]+c终止称为后台。</p><h5 id="管理："><a href="#管理：" class="headerlink" title="管理："></a>管理：</h5><h6 id="将前台任务放置后台暂停："><a href="#将前台任务放置后台暂停：" class="headerlink" title="将前台任务放置后台暂停："></a>将前台任务放置后台暂停：</h6><p>Ctrl + z就可以将前台的任务放置后台</p><p><strong>如何运行任务时，使其在后台运行：</strong></p><p>在运行命令之前加上”&amp;”</p><p>例如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp file1 file2 &amp;</span><br></pre></td></tr></table></figure><blockquote><p>不是所有的任务都能够在后台运行的，比如需要与用户进行交互的程序或命令就不允许在后台运行， 比如vi文本编辑器</p></blockquote><h6 id="用来查看后台任务："><a href="#用来查看后台任务：" class="headerlink" title="用来查看后台任务："></a>用来查看<strong>后台任务</strong>：</h6><p><code>jobs</code></p><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-r</td><td>仅查看后台运行的任务</td></tr><tr><td>-s</td><td>仅查看后台暂停的任务</td></tr><tr><td>-l</td><td>查看后台的任务，并显示其PID</td></tr></tbody></table><h6 id="将后台任务调至前台："><a href="#将后台任务调至前台：" class="headerlink" title="将后台任务调至前台："></a>将后台任务调至前台：</h6><p><code>fg命令+jobnumber</code>来把后台任务调至前台。(无论在后台是暂停还是运行)</p><blockquote><p>fg命令不加jobnumber也是可以调后台的任务，但是默认就会调取后台带有+号的那个任务。最后放置后台的任务就会带有+号。</p></blockquote><blockquote><p>+ 表示最近一次防止在后台的任务</p></blockquote><p><strong>案例：</strong></p><p>调取2号任务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fg 2</span><br></pre></td></tr></table></figure><p><strong>将后台任务修改为运行状态：</strong></p><p><code>bg命令 + jobnumber</code>可以将后台任务的暂停状态修改为运行状态。(交互式的应用无法修改为运行状态)</p><blockquote><p>bg命令不加jobnumber也是可以调后台的任务，但是默认就会调取后台带有+号的那个任务。（最后放置后台的任务就会带有+号。）</p></blockquote><p><strong>案例：</strong></p><p>修改2号任务的后台状态：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bg 2</span><br></pre></td></tr></table></figure><h4 id="打包-解包"><a href="#打包-解包" class="headerlink" title="打包,解包"></a>打包,解包</h4><h5 id="tar："><a href="#tar：" class="headerlink" title="tar："></a>tar：</h5><p>可以将一个文件/夹打包成一个文件。可以结合gzip、bzip2的算法对包文件进行相应的压缩和解压。</p><h6 id="语法："><a href="#语法：" class="headerlink" title="语法："></a><strong>语法：</strong></h6><p><strong>压缩</strong>： <code>tar [选项] newFileName.tar.gz sourceFileName</code></p><p><strong>解压</strong>：<code>tar [选项] fileName.tar.gz [-C /path]</code></p><p>选项：</p><table><thead><tr><th align="center">选项</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">-c :</td><td align="center">建立打包文件,</td></tr><tr><td align="center">-t :</td><td align="center">查看打包文件的内容含有哪些文件</td></tr><tr><td align="center">-x :</td><td align="center">解打包或解压缩的功能,可以搭配-C(大写)在指定目录解开</td></tr><tr><td align="center">-j :</td><td align="center">通过bzip2的支持进行压缩/解压缩:此时文件最好为  *.tar.bz2</td></tr><tr><td align="center">-z :</td><td align="center">通过gzip的支持进行压缩/解压缩:此时文件最好为  *.tar.gz</td></tr><tr><td align="center">-v :</td><td align="center">在压缩/解压缩的过程中,将正在处理的文件名显示出来</td></tr><tr><td align="center">-f filename:</td><td align="center">-f 后面跟处理文件的全名称（路径+文件名+后缀名）</td></tr><tr><td align="center">-C 目录:</td><td align="center">这个选项用在<strong>解压的时候</strong>,若要在特定目录解压,可以使用这个选项</td></tr></tbody></table><blockquote><p>注：使用命令进行打包、压缩的时候，使用了什么算法，文件后缀名就一定要与其对应。</p></blockquote><p><strong>案例：</strong></p><p><strong>压缩：</strong></p><ol><li>使用gzip的算法进行打包压缩。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zcvf install.log.tar.gz install.log</span><br></pre></td></tr></table></figure><p>注意tar的语法，<code>tar -zcvf    newFile   sourceFile</code></p><ol start="2"><li>使用bzip2的算法进行打包压缩。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -jcvf install.log.tar.bz2 install.log</span><br></pre></td></tr></table></figure><ol start="3"><li>如果想要压缩指定目录中的内容是，可以考虑使用绝对路径。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zcvf [path]/newFileName.tar.gz [path]/sourceFile</span><br></pre></td></tr></table></figure><p><strong>解压：</strong></p><ol><li>将一个压缩包文件解压到当前目录下</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf install.log.tar.gz</span><br></pre></td></tr></table></figure><blockquote><p>执行完成之后，文件会在当前的目录下。</p></blockquote><p>tar -zxvf install.log.tar.gz </p><ol start="2"><li>将一个压缩包文件解压到指定目录下</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf install.log.tar.gz -C /</span><br></pre></td></tr></table></figure><ol start="3"><li>只解压包中的某个文件</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf etc.tar.gz etc/shells</span><br></pre></td></tr></table></figure><ol start="4"><li>配置jdk环境变量：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf jdk-8u131-linux-x64.tar.gz</span><br><span class="line">pwd  # 复制路径</span><br><span class="line">vim /etc/profile   # profile文件是系统环境变量的配置文件</span><br></pre></td></tr></table></figure><p>在该文件的最后一行添加内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=[path]</span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br></pre></td></tr></table></figure><p>保存退出</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>使环境变量生效</p>]]></content>
      
      
      <categories>
          
          <category> 大数据学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ssh免密登录复制密钥时没反应</title>
      <link href="/2019/11/14/%E9%87%87%E5%9D%91%E6%8C%87%E5%8D%97_linux_1/"/>
      <url>/2019/11/14/%E9%87%87%E5%9D%91%E6%8C%87%E5%8D%97_linux_1/</url>
      
        <content type="html"><![CDATA[<center>ssh免密登录复制密钥时没反应</center><a id="more"></a><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>ssh免密登录复制密钥时没反应</p><h4 id="错误信息"><a href="#错误信息" class="headerlink" title="错误信息:"></a>错误信息:</h4><p>今天在配置免密登录时,执行<code>ssh-copy-id 主机地址</code>时没有反应,检查了半天,原因如下</p><h3 id="主要原因"><a href="#主要原因" class="headerlink" title="主要原因"></a>主要原因</h3><p>静态地址和默认网关不匹配</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>在控制台(Xshell)中输入setup,打开工具选项=&gt;网路配置=&gt;设备配置,选择你使用的设备.</p><p>将默认网关IP的前三位置为和静态IP一样的数值.</p><p>最后一位置为2.</p><p>保存并退出.</p><p><strong>重启网络</strong><code>service network restart</code></p><blockquote><p><strong>注意:</strong>一定要重启!!!!!,否则还是连不上</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 异常处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>读书笔记_数量繁多的JVM垃圾收集器</title>
      <link href="/2019/11/13/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0_java%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
      <url>/2019/11/13/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0_java%E8%99%9A%E6%8B%9F%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<center>读书总结<br>JVM的垃圾收集器好多,总结一下,以便记忆</center><a id="more"></a><h3 id="垃圾收集器"><a href="#垃圾收集器" class="headerlink" title="垃圾收集器"></a>垃圾收集器</h3><h4 id="按新老年代可以分为"><a href="#按新老年代可以分为" class="headerlink" title="按新老年代可以分为:"></a>按新老年代可以分为:</h4><table><thead><tr><th align="center">分类</th><th align="center">收集器</th></tr></thead><tbody><tr><td align="center">Young generation(新生代)</td><td align="center">Serial<br>ParNew<br>Parallel Scavenge</td></tr><tr><td align="center">横跨上下</td><td align="center">G1</td></tr><tr><td align="center">Tenured generation(老年代)</td><td align="center">CMS<br>Serial Old(MSC)<br>Parallel Old</td></tr></tbody></table><blockquote><p>注意:没有最好的收集器,只有最适合的收集器</p></blockquote><h4 id="Serial收集器"><a href="#Serial收集器" class="headerlink" title="Serial收集器"></a>Serial收集器</h4><p>最基本,发展历史最悠久的收集器,JDK1.3.1之前新生代唯一选择.</p><ul><li><p><strong>单线程收集器</strong></p><blockquote><p>在进行垃圾收集时,必须暂停其他所有的工作线程,知道它收集结束.(Stop The World)</p></blockquote></li><li><p>虚拟机运行在Client模式下的默认新生代收集器</p></li></ul><p><strong>优点:</strong>简单而高效(以其他收集器的单线程比)</p><p><strong>算法:</strong> 新生代使用复制算法</p><h4 id="ParNew收集器"><a href="#ParNew收集器" class="headerlink" title="ParNew收集器"></a>ParNew收集器</h4><p>Serial收集器的多线程版本</p><ul><li><p>采用多条线程进行垃圾收集</p></li><li><p>其余行为与Serial收集器完全一致</p></li><li><p>许多运行在Server模式下的虚拟机首选的新生代收集器</p><blockquote><ul><li><strong>原因:</strong>目前除了Serial收集器,目前只有它能与CMS配合工作</li></ul></blockquote></li></ul><p><strong>缺点:</strong></p><ul><li>在单CPU的环境下绝对不会有比Serial收集器更好的效果,甚至在双CPU情况下有时候也超不了</li></ul><p><strong>参数:</strong></p><p><code>-XX:ParallelGCThreads</code>:限制垃圾收集线程数</p><h4 id="Parallel-Scavenge-收集器"><a href="#Parallel-Scavenge-收集器" class="headerlink" title="Parallel Scavenge 收集器"></a>Parallel Scavenge 收集器</h4><ul><li><p>新生代收集器</p></li><li><p>并行,多线程</p></li><li><p><strong>目标:</strong>达到一个可以控制的吞吐量(Throughput)</p><blockquote><p><strong>吞吐量:</strong>CPU用于运行用户代码的时间与CPU运行总消耗的时间的比值</p><p>吞吐量=运行用户代码的时间/( 运行用户代码的时间 +垃圾回收时间)</p><p>高吞吐量 =&gt; 高效利用CPU时间 =&gt; 尽快完成程序运行任务 =&gt; 适合后台计算不需要太多交互的任务</p></blockquote></li></ul><p><strong>算法:</strong>复制算法</p><p><strong>参数:</strong></p><ul><li><p><code>-XX:MaxGCPauseMillis</code>:控制最大垃圾停顿时间</p><blockquote><p>数值为大于0的毫秒数</p><p>GC停顿时间的缩短是以牺牲吞吐量和新生代空间来换取的</p></blockquote></li><li><p><code>-XX:GCTimeRatio</code>:直接设置吞吐量大小</p><blockquote><p>数值为大于0且小于100的整数(垃圾收集时间占用总时间比)</p></blockquote></li><li><p><code>-XX:+UseAdaptiveSizePolicy</code>:开关参数:GC自适应调节策略</p><blockquote><p>动态调整相关参数以提供最合适的停顿时间或者最带的吞吐量</p><p>与ParNew的重要区别</p></blockquote></li></ul><h4 id="Serial-Old-收集器"><a href="#Serial-Old-收集器" class="headerlink" title="Serial Old 收集器"></a>Serial Old 收集器</h4><ul><li><p>Serial的老年代版本</p></li><li><p>单线程</p></li><li><p><strong>算法:</strong>标记-整理算法</p></li><li><p>主要意义在于给Client模式下的虚拟机使用</p><blockquote><p>在Server模式下的两大用途:</p><ol><li><p>在JDK1.5之前与Scavenge收集器搭配使用</p></li><li><p>CMS的后备预案,在并发收集发生Concurrent Mode Failure时使用</p></li></ol></blockquote></li></ul><h4 id="Parallel-Old-收集器"><a href="#Parallel-Old-收集器" class="headerlink" title="Parallel Old 收集器"></a>Parallel Old 收集器</h4><ul><li>Parallel Scavenge的老年代版本</li><li>多线程</li><li><strong>算法:</strong>标记-整理算法</li><li>JDK1.6中才开始提供</li><li>在注重吞吐量以及CUO资源敏感的场合,优先考虑Parallel Scavenge+Parallel Old的组合</li></ul><h4 id="CMS收集器"><a href="#CMS收集器" class="headerlink" title="CMS收集器"></a>CMS收集器</h4><ul><li><p>以获取最短回收停顿时间为目标的收集器</p></li><li><p>符合需要服务相应速度的收集器</p></li><li><p><strong>算法:</strong>标记-清除算法</p><blockquote><p>分为四个步骤:</p><ul><li>初始标记 (CMS initial mark)                        需要Stop The World(很短)</li><li>并发标记(CMS concurrent mark)</li><li>重新标记(CMS remark)                                需要Stop The World(很短)</li><li>并发标记(CMS concurrent sweep)</li></ul></blockquote></li><li><p><strong>优点:</strong>(Concurrent Mark Sweep)</p><ul><li>并发收集</li><li>低停顿</li></ul></li><li><p><strong>缺点:</strong></p><ul><li><p>CMS收集器对CPU资源非常敏感</p></li><li><p>无法出路浮动垃圾(Floating Garbage)</p><blockquote><p>浮动垃圾:</p><p>CMS并发清理阶段 用户线程产生的新垃圾,这些垃圾在本次收集过程中无法处理,称之为浮动垃圾.</p><ul><li><p>Concurrent Mode Failure</p><blockquote><p><strong>原因:</strong>CMS预留内存无法满足用户线程使用</p><p><strong>系统备案方法:</strong>临时启动Serial Old收集器重新进行老年代的垃圾收集</p><p><strong>根本解决方案:</strong>调整<code>-XX:CMSInitiatingOccupancyFraction</code>,这个参数太高容易导致大量Concurrent Mode Failure,太低性能降低</p></blockquote></li></ul></blockquote></li><li><p>收集结束时会有大量空间碎片产生(标记-清除算法导致的)</p><blockquote><p>解决方案:</p><p>​    <code>+UseCMSCompactAtFullCollection</code>开关参数(默认开启),用于在CMS收集器顶不住要进行FullGC时,开启内存碎片整理合并</p><p>​    <code>-XX:CMSFullGCsBeforeCompaction</code>用于设置执行多少次不压缩的Full GC跟一次带压缩的(默认为0)</p></blockquote></li></ul></li></ul><h4 id="G1收集器"><a href="#G1收集器" class="headerlink" title="G1收集器"></a>G1收集器</h4><p>未完待续……</p>]]></content>
      
      
      <categories>
          
          <category> java学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JVM </tag>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java中的enum类</title>
      <link href="/2019/11/13/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_SpringBoot_%E7%BB%83%E6%89%8B%E9%A1%B9%E7%9B%AE_1/"/>
      <url>/2019/11/13/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_SpringBoot_%E7%BB%83%E6%89%8B%E9%A1%B9%E7%9B%AE_1/</url>
      
        <content type="html"><![CDATA[<center>    SpringBootの实战笔记<br>所谓实践出真知<br>学习学习<br></center><a id="more"></a><p>​        今天在做实战项目时,发现了一个以前没见过的点,视频作者将向前端传递错误信息封装成了<code>enum</code>类型,这是我之前没用过的(之前就直接返回了) .</p><p>​        于是就百度了一下:</p><p>​        这种方法是在前后端分离的项目中使用的,用于向前端传递错误信息的设置,将常量封装到一个类中，并且要提供相应的构造器，还可以提供更多的方法，这是常量所没有的性质。 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> CommentTypeEnum &#123;</span><br><span class="line">    QUESTION(<span class="number">1</span>),</span><br><span class="line">    COMMENT(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">private</span> Integer type;</span><br><span class="line"></span><br><span class="line">    CommentTypeEnum(Integer type) &#123;<span class="comment">//构造方法</span></span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//其他方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isExist</span><span class="params">(Integer type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (CommentTypeEnum commentTypeEnum : CommentTypeEnum.values()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (commentTypeEnum.getType() == type) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用场景:<ol><li>在web 开发项目中实体类型使用枚举类型</li></ol></li></ul><blockquote><p>在项目中使用枚举 的地方不是很多，将常量封装成类，其实还可以封装成静态的 <code>public static final</code></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> SpringBoot学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习笔记_Linux_初试Linux</title>
      <link href="/2019/11/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_Linux_%E5%88%9D%E8%AF%95Linux/"/>
      <url>/2019/11/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_Linux_%E5%88%9D%E8%AF%95Linux/</url>
      
        <content type="html"><![CDATA[<center>    正好赶上这门儿课程<br>    学习学习</center><a id="more"></a><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><h4 id="特点"><a href="#特点" class="headerlink" title="特点:"></a>特点:</h4><ul><li>免费开源</li><li>基于UNIX</li><li>多用户</li><li>多任务</li><li>支持多线程和多CPU</li><li>支持多平台</li></ul><h4 id="学习原因"><a href="#学习原因" class="headerlink" title="学习原因:"></a>学习原因:</h4><ul><li>企业里服务器多用Linux</li><li>大数据基础运行平台</li></ul><h4 id="发行版本"><a href="#发行版本" class="headerlink" title="发行版本:"></a>发行版本:</h4><table><thead><tr><th align="center"></th><th></th></tr></thead><tbody><tr><td align="center">CentOS</td><td>它诞生于RedHat企业Linux系统中的免费源代码，简单的说就是把RedHat系统中的收费软件卸载之后重新发布。后加入Red Hat</td></tr><tr><td align="center">Red Hat</td><td>红帽子操作系统，非常不错的企业级Linux，但是由于该系统收费，很多中小型企业都弃用了</td></tr><tr><td align="center">其他版本</td><td>Ubuntu、Debian、等</td></tr></tbody></table><h4 id="与CentOS的第一面"><a href="#与CentOS的第一面" class="headerlink" title="与CentOS的第一面"></a>与CentOS的第一面</h4><p><strong>CentOS系统的一个小特点</strong>：</p><p>​        安装完成之后，系统启动时，默认不会启动网络连接，需要手动开启。</p><h5 id="启动网卡"><a href="#启动网卡" class="headerlink" title="启动网卡"></a><strong>启动网卡</strong></h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifup eth0</span><br></pre></td></tr></table></figure><blockquote><p>表示启动CentOS系统中名为eth0的网卡。</p></blockquote><h5 id="设置CentOS的网卡开机自启"><a href="#设置CentOS的网卡开机自启" class="headerlink" title="设置CentOS的网卡开机自启"></a><strong>设置CentOS的网卡开机自启</strong></h5><ul><li>打开配置文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-eth0</span><br></pre></td></tr></table></figure><p>注释：</p><table><thead><tr><th align="center">字段</th><th align="center">意义</th></tr></thead><tbody><tr><td align="center">vi</td><td align="center">linux系统内核自带的文本编辑器</td></tr><tr><td align="center">etc</td><td align="center">Linux系统中所有的配置文件存放目录</td></tr><tr><td align="center">sysconfig</td><td align="center">系统配置文件的存放目录</td></tr><tr><td align="center">network-scripts</td><td align="center">网络配置文件的存放目录</td></tr><tr><td align="center">ifcfg-eth0</td><td align="center">具体的网卡配置文件  ifconfig:用来查看当前系统的网络连接，类似于Windows的ipconfig</td></tr></tbody></table><ul><li><p>修改文件内容:</p><p>按下键盘的”i”，进入到了编辑模式，通过方向键移动到该行，将内容修改：</p><p>ONBOOT=no ==&gt; ONBOOT=yes</p><p>按键盘esc键，退出编辑模式。输入”<strong>:wq</strong>“，保存退出。如果不想保存，可以输入q!，来强制退出。</p></li></ul><h4 id="CentOS作为服务器使用"><a href="#CentOS作为服务器使用" class="headerlink" title="CentOS作为服务器使用"></a>CentOS作为服务器使用</h4><h5 id="如何设置一个静态IP"><a href="#如何设置一个静态IP" class="headerlink" title="如何设置一个静态IP"></a>如何设置一个静态IP</h5><p>​    <strong>为什么要设置一个静态IP：</strong></p><p>​    服务器拥有一个静态IP是因为方便客户端的访问和提供服务，企业中的所有服务器都是一个固定IP(静态IP)地址。</p><p>​    <strong>设置静态IP</strong>：</p><ol><li><p>setup</p></li><li><p>选择”网络”</p></li><li><p>选择”设备”</p></li><li><p>选择”eth0 <strong>*****</strong>“</p></li><li><p>使用方向键将光标移动到”使用DHCP”，敲击”空格”取消它的勾选。</p><ol><li><p>静态IP：与服务器当前所使用的IP地址保持相同（192.168.89.128）</p></li><li><p>子网掩码：255.255.255.0</p></li><li><p>网关IP：192.168.89.2 与静态IP地址的前三段保持一致，最后一位改为2。</p></li><li><p>两个DNS：114.114.114.114          8.8.8.8</p></li></ol></li></ol><p>接下来，使用tab键选择：</p><ul><li>确定 =&gt; 保存 =&gt; 保存并退出 =&gt; 退出</li></ul><p><strong>完成了静态IP地址的配置,为了兼容性，重启网络服务：(很重要,我就栽了)</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service network restart</span><br><span class="line">或</span><br><span class="line">/etc/init.d/network restart</span><br></pre></td></tr></table></figure><p>上述两条命令都能实现网络服务的重启。需要注意当前账户是否有执行权限。</p><h4 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h4><p>Linux的目录结构为树状结构，最顶级的目录为根目录 /。</p><p>其他目录通过挂载可以将它们添加到树中，通过解除挂载可以移除它们。</p><ol><li><p>绝对路径：</p><p>路径的写法，由根目录 / 写起，例如： /usr/share/doc 这个目录。</p></li><li><p>相对路径：</p><p>路径的写法，不是由 / 写起，例如由 /usr/share/doc 要到 /usr/share/man 底下时，可以写成： cd ../man 这就是相对路径的写法啦.</p></li></ol><p><strong>Linux系统目录中的一些重要的目录:</strong></p><table><thead><tr><th>(家)目录</th><th>/root,/home/{UserName}</th></tr></thead><tbody><tr><td>普通用户可执行文件</td><td>/bin,/usr/bin,/usr/local/bin</td></tr><tr><td>系统管理员可执行文件</td><td>/sbin,/usr/sbin,/usr/local/sbin</td></tr><tr><td>配置文件目录</td><td>/etc</td></tr><tr><td>临时文件目录</td><td>/tmp</td></tr><tr><td>存放应用程序和文件</td><td>/usr</td></tr><tr><td>启动linux的核心文件</td><td>/boot</td></tr><tr><td>额外安装软件（mysql）默认为空</td><td>/opt</td></tr><tr><td>服务器数据</td><td>/var  , /srv</td></tr><tr><td>系统信息</td><td>/proc，/sys</td></tr><tr><td>共享库</td><td>/lib,/usr/lib,/usr/local/lib</td></tr><tr><td>其它挂载点</td><td>/media,/mnt</td></tr></tbody></table><blockquote><p><strong>注意：文件或目录名：&lt;=255个字符、区分大小写、不能使用“/”，不允许创建与系统已有的相同名字的目录。因为不好区分，第二点，防止某些软件无法自动进行识别。</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 大数据学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql连接失败HikariPool错误</title>
      <link href="/2019/10/13/%E9%87%87%E5%9D%91%E6%8C%87%E5%8D%97_mysql_1/"/>
      <url>/2019/10/13/%E9%87%87%E5%9D%91%E6%8C%87%E5%8D%97_mysql_1/</url>
      
        <content type="html"><![CDATA[<center>mysql连接失败HikariPool错误</center><a id="more"></a><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>连接mysql时HikariPool初始化失败.</p><h4 id="错误信息"><a href="#错误信息" class="headerlink" title="错误信息:"></a>错误信息:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java.sql.SQLException: The server time zone value &apos;ÖÐ¹ú±ê×¼Ê±¼ä&apos; is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.</span><br></pre></td></tr></table></figure><h3 id="主要原因"><a href="#主要原因" class="headerlink" title="主要原因"></a>主要原因</h3><p> 时区配置的有歧义 </p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p> 在 jdbc url 后加上 &amp;serverTimezone=Asia/Shanghai 这样无歧义的值。 </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="attr">jdbc:MySQL://localhost:3306/testdata?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 异常处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lombok相关注解失效</title>
      <link href="/2019/10/10/%E9%87%87%E5%9D%91%E6%8C%87%E5%8D%97_lombok_1/"/>
      <url>/2019/10/10/%E9%87%87%E5%9D%91%E6%8C%87%E5%8D%97_lombok_1/</url>
      
        <content type="html"><![CDATA[<center>@AllArgsConstructor @NoArgsConstructor @Data注解失效，没有作用</center><a id="more"></a><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p><code>@AllArgsConstructor @NoArgsConstructor @Data</code>注解失效，没有作用</p><h3 id="主要原因"><a href="#主要原因" class="headerlink" title="主要原因"></a>主要原因</h3><p>lombok不仅需要导包还需要安装</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><h4 id="安装lombok插件-IDEA"><a href="#安装lombok插件-IDEA" class="headerlink" title="安装lombok插件(IDEA)"></a>安装lombok插件(IDEA)</h4><p>第一步：</p><p>添加jar包或maven依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.16.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第二步：</p><p>1、外网可直接通过搜索获取<br><img src="https://i.loli.net/2019/10/10/tIyZbjiGaHYEcVJ.jpg" alt="QQ截图20191010150719.jpg"></p><p>2.下载安装重新启动即可</p>]]></content>
      
      
      <categories>
          
          <category> 异常处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> IDEA </tag>
            
            <tag> lombok </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习笔记_Java_线程相关</title>
      <link href="/2019/10/09/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_Java_%E7%BA%BF%E7%A8%8B%E7%9B%B8%E5%85%B3/"/>
      <url>/2019/10/09/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_Java_%E7%BA%BF%E7%A8%8B%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<center>一些常见的关于线程的笔记</center><a id="more"></a><h1 id="关于线程"><a href="#关于线程" class="headerlink" title="关于线程"></a>关于线程</h1><h4 id="简述线程、程序、进程的基本概念。以及他们之间关系是什么"><a href="#简述线程、程序、进程的基本概念。以及他们之间关系是什么" class="headerlink" title="简述线程、程序、进程的基本概念。以及他们之间关系是什么?"></a>简述线程、程序、进程的基本概念。以及他们之间关系是什么?</h4><p><strong>线程</strong>与进程相似，但线程是一个比进程更小的执行单位。一个进程在其执行的过程中可以产生多个线程。与进程不同的是同类的多个线程共享同一块内存空间和一组系统资源，所以系统在产生一个线程，或是在各个线程之间作切换工作时，负担要比进程小得多，也正因为如此，线程也被称为轻量级进程。</p><p><strong>程序</strong>是含有指令和数据的文件，被存储在磁盘或其他的数据存储设备中，也就是说程序是静态的代码。</p><p><strong>进程</strong>是程序的一次执行过程，是系统运行程序的基本单位，因此进程是动态的。系统运行一个程序即是一个进程从创建，运行到消亡的过程。简单来说，一个进程就是一个执行中的程序，它在计算机中一个指令接着一个指令地执行着，同时，每个进程还占有某些系统资源如CPU时间，内存空间，文件，输入输出设备的使用权等等。换句话说，当程序在执行时，将会被操作系统载入内存中。 线程是进程划分成的更小的运行单位。线程和进程最大的不同在于基本上各进程是独立的，而各线程则不一定，因为同一进程中的线程极有可能会相互影响。从另一角度来说，进程属于操作系统的范畴，主要是同一段时间内，可以同时执行一个以上的程序，而线程则是在同一程序内几乎同时执行一个以上的程序段。</p><h4 id="线程有哪些基本状态"><a href="#线程有哪些基本状态" class="headerlink" title="线程有哪些基本状态?"></a>线程有哪些基本状态?</h4><p>Java 线程在运行的生命周期中的指定时刻只可能处于下面6种不同状态的其中一个状态</p><table><thead><tr><th align="center">状态名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">NEW</td><td align="center">初始状态,线程被构建,但还没有调用start(0方法</td></tr><tr><td align="center">RUNNABLE</td><td align="center">运行状态,Java线程将操作系统中就绪和运行两种状态笼统恶的称作”运行中”</td></tr><tr><td align="center">BLOCKED</td><td align="center">阻塞状态,表示线程阻塞于锁</td></tr><tr><td align="center">WAITING</td><td align="center">等待状态,表示线程进入等待状态,进入该状态比那是当前线程需要等待其他线程做出一些特定动作(通知或中断)</td></tr><tr><td align="center">TIME_WAITING</td><td align="center">超时等待状态,该状态不同于WAITING,它是可以在指定的时间自行返回的</td></tr><tr><td align="center">TERMINATED</td><td align="center">终止状态,表示当前线程已经执行完毕</td></tr></tbody></table><p>线程创建之后它将处于 <strong>NEW（新建）</strong> 状态，调用 <code>start()</code> 方法后开始运行，线程这时候处于 <strong>READY（可运行）</strong> 状态。可运行状态的线程获得了 cpu 时间片（timeslice）后就处于 <strong>RUNNING（运行）</strong> 状态。</p><blockquote><p>操作系统隐藏 Java虚拟机（JVM）中的 RUNNABLE 和 RUNNING 状态，它只能看到 RUNNABLE 状态,所以 Java 系统一般将这两个状态统称为 <strong>RUNNABLE（运行中）</strong> 状态 。</p></blockquote><p>当线程执行 <code>wait()</code>方法之后，线程进入 <strong>WAITING（等待）</strong>状态。进入等待状态的线程需要依靠其他线程的通知才能够返回到运行状态，而 <strong>TIME_WAITING(超时等待)</strong> 状态相当于在等待状态的基础上增加了超时限制，比如通过 <code>sleep（long millis）</code>方法或 <code>wait（long millis）</code>方法可以将 Java 线程置于 TIMED WAITING 状态。当超时时间到达后 Java 线程将会返回到 RUNNABLE 状态。当线程调用同步方法时，在没有获取到锁的情况下，线程将会进入到 <strong>BLOCKED（阻塞）</strong> 状态。线程在执行 Runnable 的<code>run()</code>方法之后将会进入到 <strong>TERMINATED（终止）</strong> 状态。</p>]]></content>
      
      
      <categories>
          
          <category> java学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> 线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习笔记_Java_关于JVM JDK和JRE</title>
      <link href="/2019/09/26/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_Java_JVMJDK%E5%92%8CJRE/"/>
      <url>/2019/09/26/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_Java_JVMJDK%E5%92%8CJRE/</url>
      
        <content type="html"><![CDATA[<center>Javaの笔记<br></center><a id="more"></a><h2 id="关于JVM-JDK-和-JRE的通俗解答"><a href="#关于JVM-JDK-和-JRE的通俗解答" class="headerlink" title="关于JVM JDK 和 JRE的通俗解答"></a>关于JVM JDK 和 JRE的通俗解答</h2><h3 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a><strong>JVM</strong></h3><p>Java虚拟机(JVM)是运行Java字节码的虚拟机.JVM有针对不同系统的特定实现（Windows，Linux，macOS），目的是使用相同的字节码，它们都会给出相同的结果。</p><p><strong>什么是字节码?采用字节码的好处是什么?</strong></p><blockquote><p>在 Java 中，JVM可以理解的代码就叫做<code>字节码</code>（即扩展名为 <code>.class</code> 的文件），它不面向任何特定的处理器，只面向虚拟机。Java 语言通过字节码的方式，在一定程度上解决了传统解释型语言执行效率低的问题，同时又保留了解释型语言可移植的特点。所以 Java 程序运行时比较高效，而且，由于字节码并不针对一种特定的机器，因此，Java程序无须重新编译便可在多种不同操作系统的计算机上运行。</p></blockquote><blockquote><p>我们需要格外注意的是 .class-&gt;机器码 这一步。在这一步 JVM 类加载器首先加载字节码文件，然后通过解释器逐行解释执行，这种方式的执行速度会相对比较慢。而且，有些方法和代码块是经常需要被调用的(也就是所谓的热点代码)，所以后面引进了 JIT 编译器，而JIT 属于运行时编译。当 JIT 编译器完成第一次编译后，其会将字节码对应的机器码保存下来，下次可以直接使用。而我们知道，机器码的运行效率肯定是高于 Java 解释器的。这也解释了我们为什么经常会说 Java 是编译与解释共存的语言。</p></blockquote><blockquote><p><strong>HotSpot采用了惰性评估(Lazy Evaluation)的做法，根据二八定律，消耗大部分系统资源的只有那一小部分的代码（热点代码），而这也就是JIT所需要编译的部分。JVM会根据代码每次被执行的情况收集信息并相应地做出一些优化，因此执行的次数越多，它的速度就越快。JDK 9引入了一种新的编译模式AOT(Ahead of Time Compilation)，它是直接将字节码编译成机器码，这样就避免了JIT预热等各方面的开销。JDK支持分层编译和AOT协作使用。但是 ，AOT 编译器的编译质量是肯定比不上 JIT 编译器的。</strong></p></blockquote><p><strong>总结：</strong></p><p>Java虚拟机（JVM）是运行 Java 字节码的虚拟机。JVM有针对不同系统的特定实现（Windows，Linux，macOS），目的是使用相同的字节码，它们都会给出相同的结果。字节码和不同系统的 JVM 实现是 Java 语言“一次编译，随处可以运行”的关键所在。</p><h3 id="JDK和JRE"><a href="#JDK和JRE" class="headerlink" title="JDK和JRE"></a><strong>JDK和JRE</strong></h3><p>JDK是Java Development Kit，它是功能齐全的Java SDK。它拥有JRE所拥有的一切，还有编译器（javac）和工具（如javadoc和jdb）。它能够创建和编译程序。</p><p>JRE 是 Java运行时环境。它是运行已编译 Java 程序所需的所有内容的集合，包括 Java虚拟机（JVM），Java类库，java命令和其他的一些基础构件。但是，它不能用于创建新程序。</p><p>如果你只是为了运行一下 Java 程序的话，那么你只需要安装 JRE 就可以了。如果你需要进行一些 Java 编程方面的工作，那么你就需要安装JDK了。但是，这不是绝对的。有时，即使您不打算在计算机上进行任何Java开发，仍然需要安装JDK。例如，如果要使用JSP部署Web应用程序，那么从技术上讲，您只是在应用程序服务器中运行Java程序。那你为什么需要JDK呢？因为应用程序服务器会将 JSP 转换为 Java servlet，并且需要使用 JDK 来编译 servlet。</p>]]></content>
      
      
      <categories>
          
          <category> java学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> JVM </tag>
            
            <tag> JDK </tag>
            
            <tag> JRE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>那些年我被面试吊打的问题_servlet篇</title>
      <link href="/2019/09/25/%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93_%E9%82%A3%E4%BA%9B%E5%B9%B4%E6%88%91%E8%A2%AB%E9%9D%A2%E8%AF%95%E5%90%8A%E6%89%93%E7%9A%84%E9%97%AE%E9%A2%98_Servlet%E7%AF%87/"/>
      <url>/2019/09/25/%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93_%E9%82%A3%E4%BA%9B%E5%B9%B4%E6%88%91%E8%A2%AB%E9%9D%A2%E8%AF%95%E5%90%8A%E6%89%93%E7%9A%84%E9%97%AE%E9%A2%98_Servlet%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<center>面试虐我千百遍<br>我待面试如初恋</center><a id="more"></a><h3 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h3><p><strong>开发一个servlet的步骤:</strong></p><ol><li>创建web应用项目</li><li>编写servlet代码</li><li>部署到tomcat中</li></ol><h4 id="Servlet总结"><a href="#Servlet总结" class="headerlink" title="Servlet总结"></a>Servlet总结</h4><p>在Java Web程序中,<strong>Servlet</strong>主要负责接收用户请求<code>HttpServletRequest</code>,在<code>doGet()</code>,<code>doPost()</code>中 做相应的处理，并将回应<code>HttpServletResponse</code>反馈给用户。<strong>Servlet</strong> 可以设置初始化参数，供Servlet内部使用。一个Servlet类只会有一个实例，在它初始化时调用<code>init()</code>方法，销毁时调用<code>destroy()</code>方法<strong>。</strong>Servlet需要在web.xml中配置（MyEclipse中创建Servlet会自动配置），<strong>一个Servlet可以设置多个URL访问</strong>。<strong>Servlet不是线程安全</strong>，因此要谨慎使用类变量。 </p><h4 id="Servlet接口中有哪些方法及Servlet生命周期探秘"><a href="#Servlet接口中有哪些方法及Servlet生命周期探秘" class="headerlink" title="Servlet接口中有哪些方法及Servlet生命周期探秘"></a>Servlet接口中有哪些方法及Servlet生命周期探秘</h4><p>Servlet接口定义了5个方法，其中<strong>前三个方法与Servlet生命周期相关</strong>：</p><ul><li><code>void init(ServletConfig config) throws ServletException</code></li><li><code>void service(ServletRequest req, ServletResponse resp) throws ServletException, java.io.IOException</code></li><li><code>void destroy()</code></li><li><code>java.lang.String getServletInfo()</code></li><li><code>ServletConfig getServletConfig()</code></li></ul><p><strong>生命周期：</strong> <strong>Web容器加载Servlet并将其实例化后，Servlet生命周期开始</strong>，容器运行其<strong>init()方法</strong>进行Servlet的初始化；请求到达时调用Servlet的<strong>service()方法</strong>，service()方法会根据需要调用与请求对应的<strong>doGet或doPost</strong>等方法；当服务器关闭或项目被卸载时服务器会将Servlet实例销毁，此时会调用Servlet的<strong>destroy()方法</strong>。<strong>init方法和destroy方法只会执行一次，service方法客户端每次请求Servlet都会执行</strong>。Servlet中有时会用到一些需要初始化与销毁的资源，因此可以把初始化资源的代码放入init方法中，销毁资源的代码放入destroy方法中，这样就不需要每次处理客户端的请求都要初始化与销毁资源。</p><h4 id="Get和Post请求的区别"><a href="#Get和Post请求的区别" class="headerlink" title="Get和Post请求的区别"></a>Get和Post请求的区别</h4><ol><li><p>get请求用来从服务器上获得资源，而post是用来向服务器提交数据；</p></li><li><p>get将表单中数据按照name=value的形式，添加到action 所指向的URL 后面，并且两者使用”?”连接，而各个变量之间使用”&amp;”连接；post是将表单中的数据放在HTTP协议的请求头或消息体中，传递到action所指向URL；</p></li><li><p>get传输的数据要受到URL长度限制（最大长度是 2048 个字符）；而post可以传输大量的数据，上传文件通常要使用post方式；</p></li><li><p>使用get时参数会显示在地址栏上，如果这些数据不是敏感数据，那么可以使用get；对于敏感数据还是应用使用post；</p></li><li><p>get使用MIME类型application/x-www-form-urlencoded的URL编码（也叫百分号编码）文本的格式传递参数，保证被传送的参数由遵循规范的文本组成，例如一个空格的编码是”%20”。</p></li></ol><p>补充：GET方式提交表单的典型应用是搜索引擎。GET方式就是被设计为查询用的。</p><blockquote><p>另外一种答案:</p><p>​    GET和POST是什么？HTTP协议中的两种发送请求的方法。</p><p>​    HTTP是什么？HTTP是基于TCP/IP的关于数据如何在万维网中如何通信的协议。</p><p>​    HTTP的底层是TCP/IP。所以GET和POST的底层也是TCP/IP，也就是说，GET/POST都是TCP链接。GET和POST能做的事情是一样一样的。你要给GET加上request body，给POST带上url参数，技术上是完全行的通的。 </p><pre><code>GET和POST本质上就是TCP链接，并无差别。但是由于HTTP的规定和浏览器/服务器的限制，导致他们在应用过程中体现出一些不同。  </code></pre><p>GET和POST还有一个重大区别，简单的说：</p><p>GET产生一个TCP数据包；POST产生两个TCP数据包。</p><p>长的说：</p><p>对于GET方式的请求，浏览器会把http header和data一并发送出去，服务器响应200（返回数据）；</p><p>而对于POST，浏览器先发送header，服务器响应100 continue，浏览器再发送data，服务器响应200 ok（返回数据）。</p><p>也就是说，GET只需要汽车跑一趟就把货送到了，而POST得跑两趟，第一趟，先去和服务器打个招呼“嗨，我等下要送一批货来，你们打开门迎接我”，然后再回头把货送过去。</p><p>因为POST需要两步，时间上消耗的要多一点，看起来GET比POST更有效。因此Yahoo团队有推荐用GET替换POST来优化网站性能。但这是一个坑！跳入需谨慎。为什么？</p><ol><li><p>GET与POST都有自己的语义，不能随便混用。</p></li><li><p>据研究，在网络环境好的情况下，发一次包的时间和发两次包的时间差别基本可以无视。而在网络环境差的情况下，两次包的TCP在验证数据包完整性上，有非常大的优点。</p></li><li><p>并不是所有浏览器都会在POST中发送两次包，Firefox就只发送一次。</p></li></ol></blockquote><h4 id="什么情况下调用doGet-和doPost"><a href="#什么情况下调用doGet-和doPost" class="headerlink" title="什么情况下调用doGet()和doPost()"></a>什么情况下调用doGet()和doPost()</h4><p> Form标签里的method的属性为get时调用doGet()，为post时调用doPost()。 </p><h4 id="转发-Forward-和重定向-Redirect-的区别"><a href="#转发-Forward-和重定向-Redirect-的区别" class="headerlink" title="转发(Forward)和重定向(Redirect)的区别"></a>转发(Forward)和重定向(Redirect)的区别</h4><p><strong>转发是服务器行为，重定向是客户端行为。</strong></p><p><strong>转发（Forward）</strong> 通过RequestDispatcher对象的forward（HttpServletRequest request,HttpServletResponse response）方法实现的。RequestDispatcher可以通过HttpServletRequest 的getRequestDispatcher()方法获得。例如下面的代码就是跳转到login_success.jsp页面。</p><p><code>request.getRequestDispatcher(&quot;login_success.jsp&quot;).forward(request, response);</code></p><p> <strong>重定向（Redirect）</strong> 是利用服务器返回的状态码来实现的。客户端浏览器请求服务器的时候，服务器会返回一个状态码。服务器通过 <code>HttpServletResponse</code> 的 <code>setStatus(int status)</code> 方法设置状态码。如果服务器返回301或者302，则浏览器会到新的网址重新请求该资源。 </p><ol><li><strong>从地址栏显示来说</strong></li></ol><p>forward是服务器请求资源,服务器直接访问目标地址的URL,把那个URL的响应内容读取过来,然后把这些内容再发给浏览器.浏览器根本不知道服务器发送的内容从哪里来的,所以它的地址栏还是原来的地址. redirect是服务端根据逻辑,发送一个状态码,告诉浏览器重新去请求那个地址.所以地址栏显示的是新的URL.</p><ol start="2"><li><strong>从数据共享来说</strong></li></ol><p>forward:转发页面和转发到的页面可以共享request里面的数据. redirect:不能共享数据.</p><ol start="3"><li><strong>从运用地方来说</strong></li></ol><p>forward:一般用于用户登陆的时候,根据角色转发到相应的模块. redirect:一般用于用户注销登陆时返回主页面和跳转到其它的网站等</p><ol><li>从效率来说</li></ol><p>forward:高. redirect:低.</p><h4 id="自动刷新-Refresh"><a href="#自动刷新-Refresh" class="headerlink" title="自动刷新(Refresh)"></a>自动刷新(Refresh)</h4><p> 自动刷新不仅可以实现一段时间之后自动跳转到另一个页面，还可以实现一段时间之后自动刷新本页面。Servlet中通过HttpServletResponse对象设置Header属性实现自动刷新例如： </p><p><code>Response.setHeader(&quot;Refresh&quot;,&quot;5;URL=http://localhost:8080/servlet/example.htm&quot;);</code></p><p> 其中5为时间，单位为秒。URL指定就是要跳转的页面（如果设置自己的路径，就会实现每过5秒自动刷新本页面一次） </p><h4 id="Servlet与线程安全"><a href="#Servlet与线程安全" class="headerlink" title="Servlet与线程安全"></a>Servlet与线程安全</h4><p> <strong>Servlet不是线程安全的，多线程并发的读写会导致数据不同步的问题。</strong> 解决的办法是尽量不要定义name属性，而是要把name变量分别定义在doGet()和doPost()方法内。虽然使用synchronized(name){}语句块可以解决问题，但是会造成线程的等待，不是很科学的办法。 注意：多线程的并发的读写Servlet类属性会导致数据不同步。但是如果只是并发地读取属性而不写入，则不存在数据不同步的问题。因此Servlet里的只读属性最好定义为final类型的。 </p><h4 id="JSP和Servlet是什么关系"><a href="#JSP和Servlet是什么关系" class="headerlink" title="JSP和Servlet是什么关系"></a>JSP和Servlet是什么关系</h4><p>其实这个问题在上面已经阐述过了，Servlet是一个特殊的Java程序，它运行于服务器的JVM中，能够依靠服务器的支持向浏览器提供显示内容。JSP本质上是Servlet的一种简易形式，JSP会被服务器处理成一个类似于Servlet的Java程序，可以简化页面内容的生成。Servlet和JSP最主要的不同点在于，Servlet的应用逻辑是在Java文件中，并且完全从表示层中的HTML分离开来。而JSP的情况是Java和HTML可以组合成一个扩展名为.jsp的文件。有人说，Servlet就是在Java中写HTML，而JSP就是在HTML中写Java代码，当然这个说法是很片面且不够准确的。JSP侧重于视图，Servlet更侧重于控制逻辑，在MVC架构模式中，JSP适合充当视图（view）而Servlet适合充当控制器（controller）。</p><h4 id="JSP工作原理"><a href="#JSP工作原理" class="headerlink" title="JSP工作原理"></a>JSP工作原理</h4><p>JSP是一种Servlet，但是与HttpServlet的工作方式不太一样。HttpServlet是先由源代码编译为class文件后部署到服务器下，为先编译后部署。而JSP则是先部署后编译。JSP会在客户端第一次请求JSP文件时被编译为HttpJspPage类（接口Servlet的一个子类）。该类会被服务器临时存放在服务器工作目录里面。下面通过实例给大家介绍。 工程JspLoginDemo下有一个名为login.jsp的Jsp文件，把工程第一次部署到服务器上后访问这个Jsp文件，我们发现这个目录下多了下图这两个东东。 .class文件便是JSP对应的Servlet。编译完毕后再运行class文件来响应客户端请求。以后客户端访问login.jsp的时候，Tomcat将不再重新编译JSP文件，而是直接调用class文件来响应客户端请求。 <a href="https://camo.githubusercontent.com/5b077d70058831d1e226f188c245f262684fc434/68747470733a2f2f6d792d626c6f672d746f2d7573652e6f73732d636e2d6265696a696e672e616c6979756e63732e636f6d2f323031392d362f312e706e67" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/5b077d70058831d1e226f188c245f262684fc434/68747470733a2f2f6d792d626c6f672d746f2d7573652e6f73732d636e2d6265696a696e672e616c6979756e63732e636f6d2f323031392d362f312e706e67" alt="JSP工作原理"></a> 由于JSP只会在客户端第一次请求的时候被编译 ，因此第一次请求JSP时会感觉比较慢，之后就会感觉快很多。如果把服务器保存的class文件删除，服务器也会重新编译JSP。</p><p>开发Web程序时经常需要修改JSP。Tomcat能够自动检测到JSP程序的改动。如果检测到JSP源代码发生了改动。Tomcat会在下次客户端请求JSP时重新编译JSP，而不需要重启Tomcat。这种自动检测功能是默认开启的，检测改动会消耗少量的时间，在部署Web应用的时候可以在web.xml中将它关掉。</p><h4 id="JSP有哪些内置对象-作用分别是什么"><a href="#JSP有哪些内置对象-作用分别是什么" class="headerlink" title="JSP有哪些内置对象,作用分别是什么"></a>JSP有哪些内置对象,作用分别是什么</h4><p>JSP有9个内置对象：</p><ul><li>request：封装客户端的请求，其中包含来自GET或POST请求的参数；</li><li>response：封装服务器对客户端的响应；</li><li>pageContext：通过该对象可以获取其他对象；</li><li>session：封装用户会话的对象；</li><li>application：封装服务器运行环境的对象；</li><li>out：输出服务器响应的输出流对象；</li><li>config：Web应用的配置对象；</li><li>page：JSP页面本身（相当于Java程序中的this）；</li><li>exception：封装页面抛出异常的对象。</li></ul><h4 id="request-getAttribute-和-request-getParameter-有何区别"><a href="#request-getAttribute-和-request-getParameter-有何区别" class="headerlink" title="request.getAttribute()和 request.getParameter()有何区别"></a>request.getAttribute()和 request.getParameter()有何区别</h4><p><strong>从获取方向来看：</strong></p><p><code>getParameter()</code>是获取 POST/GET 传递的参数值；</p><p><code>getAttribute()</code>是获取对象容器中的数据值；</p><p><strong>从用途来看：</strong></p><p><code>getParameter()</code>用于客户端重定向时，即点击了链接或提交按扭时传值用，即用于在用表单或url重定向传值时接收数据用。</p><p><code>getAttribute()</code> 用于服务器端重定向时，即在 sevlet 中使用了 forward 函数,或 struts 中使用了 mapping.findForward。 getAttribute 只能收到程序用 setAttribute 传过来的值。</p><p>另外，可以用 <code>setAttribute()</code>,<code>getAttribute()</code> 发送接收对象.而 <code>getParameter()</code> 显然只能传字符串。 <code>setAttribute()</code> 是应用服务器把这个对象放在该页面所对应的一块内存中去，当你的页面服务器重定向到另一个页面时，应用服务器会把这块内存拷贝另一个页面所对应的内存中。这样<code>getAttribute()</code>就能取得你所设下的值，当然这种方法可以传对象。session也一样，只是对象在内存中的生命周期不一样而已。<code>getParameter()</code>只是应用服务器在分析你送上来的 request页面的文本时，取得你设在表单或 url 重定向时的值。</p><p><strong>总结：</strong></p><p><code>getParameter()</code>返回的是String,用于读取提交的表单中的值;（获取之后会根据实际需要转换为自己需要的相应类型，比如整型，日期类型啊等等）</p><p><code>getAttribute()</code>返回的是Object，需进行转换,可用<code>setAttribute()</code>设置成任意对象，使用很灵活，可随时用</p><h4 id="include指令include的行为的区别"><a href="#include指令include的行为的区别" class="headerlink" title="include指令include的行为的区别"></a>include指令include的行为的区别</h4><p><strong>include指令：</strong> JSP可以通过include指令来包含其他文件。被包含的文件可以是JSP文件、HTML文件或文本文件。包含的文件就好像是该JSP文件的一部分，会被同时编译执行。 语法格式如下： &lt;%@ include file=”文件相对 url 地址” %&gt;</p><p><strong>include动作：</strong> ``动作元素用来包含静态和动态的文件。该动作把指定文件插入正在生成的页面。语法格式如下： &lt;jsp:include page=”相对 URL 地址” flush=”true” /&gt;</p><h4 id="JSP的九大内置对象-七大动作-三大指令"><a href="#JSP的九大内置对象-七大动作-三大指令" class="headerlink" title="JSP的九大内置对象,七大动作,三大指令"></a>JSP的九大内置对象,七大动作,三大指令</h4><p><strong>out输出流对象</strong><br>　　隐藏对象out是javax.servlet.jsp.JspWriter类的实例服务器向客户输出的字符内容可以通过out对象输出。获取方法： PrintWriter out = response.getWriter();out对象常用的方法如下： </p><ol><li>void clear() 　　清除缓冲区的内容</li><li>void clearBuffer() 　　清除缓冲区的当前内容 </li><li>void flush() 　　将缓冲内容flush到客户端浏览器 </li><li>int getBufferSize() 　　返回缓冲大小，单位KB </li><li>int getRemaining() 　　返回缓冲剩余大小，单位KB </li><li>isAutoFlush() 　　返回缓冲区满时,是自动清空还是抛出异常 </li><li>void close() 　　 关闭输出流</li></ol><p><strong>request请求对象</strong><br>　　隐藏对象request是javax.servlet.ServletRequest类的实例，代表客户端的请求。request包含客户端的信息以及请求的信息，如请求那个文件，附带的地址参数等。每次客户端的请求都会产生一个request实例。request对象的常用方法如下： </p><ol><li>object getAttribute(String name) 　　返回指定属性的属性值 </li><li>Enumeration getAttributeNames() 　　 返回所有可用属性名的枚举</li><li>String getCharacterEncoding() 　　返回字符编码方式</li><li>int getContentLength() 　　返回请求体的长度(以字节数)</li><li>String getContentType() 　　得到请求体的MIME类型</li><li>ServletInputStream getInputStream()　　 得到请求体中一行的二进制流</li><li>String getParameter(String name) 　　返回name指定参数的参数值</li><li>Enumeration getParameterNames()　　 返回可用参数名的枚举 </li><li>String[] getparameterValues(String name) 　　 返回包含参数name的所有值的数组</li><li>String getProtocol() 　　返回请求用的协议类型及版本号 </li><li>String getScheme() 　　返回请求用的计划名,如:http https及ftp等 </li><li>int getServerPort() 　　返回服务器接受此请求所用的端口号</li><li>String getServerName() 　　 返回接受请求的服务器主机名</li><li>BufferedReader getReader() 　　 返回解码过了的请求体</li><li>String getRemoteAddr() 　　 返回发送此请求的客户端IP地址</li><li>String getRemoteHost() 　　返回发送此请求的客户端主机名</li><li>void setAttribute(String key Object obj) 　　设置属性的属性值</li><li>String getRealPath(String path) 　　返回一虚拟路径的真实路径</li><li>void setCharacterEncoding(“gb2312”) 　　设置接受参数的字符集</li></ol><p><strong>response响应对象</strong><br>　　隐藏对象response是javax.servlet.ServletResponse类的实例，代表客户端的响应。服务器端的任何输出都通过response对象发送到客户端浏览器。每次服务器端都会响应一个response实例。response对象的常用方法如下： </p><ol><li>String getCharacterEncoding() 　　 返回响应用的是何种字符编码</li><li>ServletOutputStream getOutputStream() 　　返回响应的一个二进制输出流</li><li>PrintWriter getWriter() 　　返回可以向客户端输出字符的一个对象</li><li>void setContentLength(int len) 　　设置响应头长度</li><li>void setContentType(String type) 　　设置响应的MIME类型</li><li>sendRedirect(java.lang.String location) 　　重新定向客户端的请求</li><li>void setCharacterEncoding(“gb2312”) 　　设置响应头的字符集</li></ol><p><strong>config配置对象</strong><br>　　隐藏对象config是javax.servlet.ServletConfig类的实例，ServletConfig封装了配置在web.xml中初始化JSP的参数。JSP中通过config获取这些参数。每个JSP文件中共有一个config对象。config对象的常用方法如表： </p><ol><li>String getInitParameter(String name)　　返回配置在web.xml中初始化参数</li><li>Enumeration getInitParameterNames() 　　返回所有的初始化参数名称</li><li>ServletContext getServletContext()　　返回ServletContext对象</li><li>String getServletName　　返回Servlet对象</li></ol><p><strong>session会话对象</strong><br>　　隐藏对象session是javax.servlet.http.HttpSession类的实例。session与cookie是记录客户访问信息的两种机制，session是用于服务器端保存用户信息，cookie用于在客户端保存用户信息。Servlet中通过request.getSession()来获取session对象，而JSP中可以直接使用。如果JSP中配置了&lt;%@page session=”false”%&gt;,则隐藏对象session不可用。每个用户对应一个session对象。session对象的常用方法如下: </p><ol><li>long getCreationTime() 　　返回Session创建时间</li><li>public String getId() 　　返回Session创建时JSP引擎为它设的唯一ID号</li><li>long getLastAccessedTime() 　　返回此Session里客户端最近一次请求时间</li><li>int getMaxInactiveInterval()　　 返回两次请求间隔多长时间此Session被取消(ms)</li><li>String[] getValueNames() 　　返回一个包含此Session中所有可用属性的数组</li><li>void invalidate() 　取消Session,使Session不可用</li><li>boolean isNew() 　　返回服务器创建的一个Session,客户端是否已经加入</li><li>void removeValue(String name) 　　删除Session中指定的属性</li><li>void setAttribute(String key,Object obj) 　　设置Session的属性</li><li>Object getAttribute(String name)　　 返回session中属性名为name的对象</li></ol><p><strong>application应用程序对象</strong><br>　　隐藏对象application是javax.servlet.ServletContext类的对象。application封装JSP所在Web应用程序的信息，例如web.xml中配置的全局的初始化信息。Servlet中application对象需要通过ServletConfig.getServletContext()来获取。整个Web应用程序对应一个application对象。application对象常用的方法如下： </p><ol><li>Object getAttribute(String name)　　返回application中属性为name的对象</li><li>Enumeration getAttributeNames() 　　返回application中的所有属性名</li><li>void setAttribute(String name,Object value)　　设置application属性</li><li>void removeAttribute(String name) 　　移除application属性</li><li>String getInitParameter(String name)　　返回全局初始话函数</li><li>Enumeration getInitParameterNames(）　　返回所有的全局初始话参数</li><li>String getMimeType(String filename)　　返回文件的文档类型，例如getMimeType(“abc.html”)将返回“text.html”</li><li>String getRealPath(String relativePath）　　返回Web应用程序内相对网址对应的绝对路径</li></ol><p><strong>page页面对象</strong><br>　　隐藏对象page是javax.servlet.jsp.HttpJspPage类的实例。page对象代表当前JSP页面，是当前JSP编译后的Servlet类的对象。page想当于Java类中的关键字this</p><p><strong>pageContext页面上下文对象</strong><br>　　隐藏对象pageContext为javax.servlet.jsp.PageContext类的实例。pageContext对象代表当前JSP页面编译后的内容。通过pageContext能够获取到JSP中的资源。pageContext常用方法如下： </p><ol><li>JspWriter getOut() 　　返回out对象</li><li>HttpSession getSession() 　　 返回Session对象(session)</li><li>Object getPage() 　　返回page对象</li><li>ServletRequest getRequest() 　　 返回request对象</li><li>ServletResponse getResponse() 　　 返回response对象</li><li>void setAttribute(String name,Object attribute) 　　　设置属性及属性值 ，在page范围内有效 </li><li>void setAttribute(String name,Object obj,int scope)　　 在指定范围内设置属性及属性值 ，int1=page,2=request,3=session,4=application</li><li>public Object getAttribute(String name) 　　取属性的值</li><li>Object getAttribute(String name,int scope) 　　在指定范围内取属性的值 </li><li>public Object findAttribute(String name) 　　寻找一属性,返回起属性值或NULL</li><li>void removeAttribute(String name) 　　删除某属性</li><li>void removeAttribute(String name,int scope) 　　 在指定范围删除某属性</li><li>int getAttributeScope(String name)　　 返回某属性的作用范围</li><li>Enumeration getAttributeNamesInScope(int scope) 　　返回指定范围内可用的属性名枚举</li><li>void release() 　　释放pageContext所占用的资源</li><li>void forward(String relativeUrlPath) 　　 使当前页面重导到另一页面</li><li>void include(String relativeUrlPath) 　　 在当前位置包含另一文件</li></ol><p><strong>Eexception异常对象</strong><br>　　隐藏对象exception为java.lang.Exception类的对象。exception封装了JSP中抛出的异常信息。要使用exception隐藏对象，需要设置&lt;%@page isErrorPage”true”%&gt;。隐藏对象exception通常被用来处理错误页面， 　　</p><p><strong><em>JSP之三大指令</em></strong><br><strong>page指令</strong></p><blockquote><p><strong>实例：</strong><code>&lt;%@ page language=”java” import=”java.util.*” pageEncoding=”UTF-8”%&gt;</code> </p></blockquote><p><strong>import</strong>:等同与import语句 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page import=”java.util.*” %&gt; </span><br><span class="line">&lt;%@ page import=”java.util., java.net.” %&gt;</span><br></pre></td></tr></table></figure><p>在一个JSP页面中可以给出多个page指令，而且import是可以重复出现的 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page import=”java.util.*” %&gt; </span><br><span class="line">&lt;%@ page import=”java.next.*” %&gt;</span><br></pre></td></tr></table></figure><p><strong>pageEncoding</strong>：指定当前页面的编码 </p><ul><li>如果pageEncoding没有指定，那么默认为contentType的值</li><li>如果pageEncoding和contentType都没有指定，那么默认值为iso-8859-1</li></ul><p><strong>contentType</strong>：等同与调用<code>response.setContentType(“text/html;charset=xxx”);</code> </p><ul><li>如果没有指定contentType属性，那么默认为pageEncoding的值</li><li>如果contentType和pageEncoding都没有指定，那么默认值为iso-8859-1</li></ul><p><strong>errorPage</strong>：如果当前页面出现异常，那么跳转到errorPage指定的jsp页面。 </p><blockquote><p>例如：<code>&lt;%@ page errorPage=”b.jsp” %&gt;</code></p></blockquote><p><strong>isErrorPage</strong>：上面示例中指定b.jsp为错误页面，但在b.jsp中不能使用内置对象exception，保有b.jsp中使用&lt;%@page isErrorPage=”true”%&gt;时，才能在b.jsp中使用错误页面。<br><strong>autoFlush</strong>：当autoFlush为true时，表示out流缓冲区满时会自动刷新。默认为true<br><strong>buffer</strong>：指定out流的缓冲区大小，默认为8KB<br><strong>isELIgnored</strong>：当前JSP页面是否忽略EL表达式，默认为false，表示不忽略，即支持EL表达式</p><p><strong>page指令不常用的属性：</strong><br><strong>language</strong>：当前JSP编译后的语言！默认为java，当前也只能选择java<br><strong>info</strong>：当前JSP的说明信息<br><strong>isThreadSafe</strong>：当前JSP是否执行只能单线程访问，默认为false，表示支持并发访问<br><strong>session</strong>：当前页面是否可以使用session，默认为false，表示支持session的使用。<br><strong>extends</strong>：指定JSP编译的servlet的父类！ </p><p><strong><em>include指令</em></strong><br>JSP可以通过include指令来包含其他文件。被包含的文件可以是JSP文件、HTML文件或文本文件。包含的文件就好像是该JSP文件的一部分，会被同时编译执行。<br>Include指令的语法格式如下：<br><code>&lt;%@ include file=”文件相对 url 地址” %&gt;</code></p><p><strong>taglib指令</strong><br>taglib指令是用来在当前jsp页面中导入第三方的标签库<br><code>&lt;%@ taglib uri=”http://java.sun.com/jsp/jstl/core” % prefix=”c” &gt;</code><br><strong>prefix</strong>：指定标签前缀，这个东西可以随意起名<br><strong>uri</strong>：指定第三方标签库的uri（唯一标识）<br>当然，需要先把第三方标签库所需jar包放到类路径中。</p><p><strong><em>JSP之七大动作</em></strong><br><strong>jsp:include</strong>：在页面被请求的时候引入一个文件。<br><strong>jsp:useBean</strong>：寻找或者实例化一个 JavaBean。<br><strong>jsp:setProperty</strong>：设置 JavaBean 的属性。<br><strong>jsp:getProperty</strong>：输出某个 JavaBean 的属性。<br><strong>jsp:forward</strong>：把请求转到一个新的页面。<br><strong>jsp:plugin</strong>：根据浏览器类型为 Java 插件生成 OBJECT 或 EMBED 标记 </p><h4 id="讲解JSP中的四种作用域"><a href="#讲解JSP中的四种作用域" class="headerlink" title="讲解JSP中的四种作用域"></a>讲解JSP中的四种作用域</h4><p>JSP中的四种作用域包括page、request、session和application，具体来说：</p><ul><li><strong>page</strong>代表与一个页面相关的对+象和属性。</li><li><strong>request</strong>代表与Web客户机发出的一个请求相关的对象和属性。一个请求可能跨越多个页面，涉及多个Web组件；需要在页面显示的临时数据可以置于此作用域。</li><li><strong>session</strong>代表与某个用户与服务器建立的一次会话相关的对象和属性。跟某个用户相关的数据应该放在用户自己的session中。</li><li><strong>application</strong>代表与整个Web应用程序相关的对象和属性，它实质上是跨越整个Web应用程序，包括多个页面、请求和会话的一个全局作用域。</li></ul><h4 id="如何实现JSP或Servlet的单线程模式"><a href="#如何实现JSP或Servlet的单线程模式" class="headerlink" title="如何实现JSP或Servlet的单线程模式"></a>如何实现JSP或Servlet的单线程模式</h4><p>对于JSP页面，可以通过page指令进行设置。 <code>&lt;%@page isThreadSafe=&quot;false&quot;%&gt;</code></p><p>对于Servlet，可以让自定义的Servlet实现SingleThreadModel标识接口。</p><blockquote><p>说明：如果将JSP或Servlet设置成单线程工作模式，会导致每个请求创建一个Servlet实例，这种实践将导致严重的性能问题（服务器的内存压力很大，还会导致频繁的垃圾回收），所以通常情况下并不会这么做。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 面试总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 面试题 </tag>
            
            <tag> Servlet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA新建没有class选项</title>
      <link href="/2019/08/26/%E9%87%87%E5%9D%91%E6%8C%87%E5%8D%97_IDEA_2/"/>
      <url>/2019/08/26/%E9%87%87%E5%9D%91%E6%8C%87%E5%8D%97_IDEA_2/</url>
      
        <content type="html"><![CDATA[<center>路径标识不对</center><a id="more"></a><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>今天用IDEA构建项目时,无法新建Java文件</p><h4 id="错误信息"><a href="#错误信息" class="headerlink" title="错误信息:"></a>错误信息:</h4><p><img src="https://i.loli.net/2019/08/26/E3McIntkrquzAUT.jpg" alt="java1.jpg"></p><h3 id="主要原因"><a href="#主要原因" class="headerlink" title="主要原因"></a>主要原因</h3><p>路径标识不对</p><blockquote><p><strong>这里有个知识点:</strong></p><p>如上图红圈所示，我们可以根据对项目的任意目录进行这五种目录类型标注，这个知识点非常非常重要，必须会。</p><ul><li>Sources： 一般用于标注类似 src 这种可编译目录。有时候我们不单单项目的 src 目录要可编译，还有其他一些特别的目录也许我们也要作为可编译的目录，就需要对该目录进行此标注。<strong>只有</strong> <strong>Sources</strong> <strong>这种可编译目录才可以新建</strong> <strong>Java</strong> <strong>类和包，这一点需要牢记</strong>。</li><li>Tests： 一般用于标注可编译的单元测试目录。在规范的 maven 项目结构中，顶级目录是 src，maven 的 src 我们是不会设置为 Sources 的，而是在其子目录 main 目录下的 java 目录，我们会设置为 Sources。而单元测试的目录是 src - test - java，这里的 java 目录我们就会设置为 Tests，表示该目录是作为可编译的单元测试目录。一般这个和后面几个我们都是在 maven 项目下进行配置的，但是我这里还是会先说说。从这一点我们也可以看出 IntelliJ IDEA 对 maven 项目的支持是比彻底的。</li><li>Resources： 一般用于标注资源文件目录。在 maven 项目下，资源目录是单独划分出来的，其目录为：src - main -resources，这里的 resources 目录我们就会设置为 Resources，表示该目录是作为资源目录。资源目录下的文件是会被编译到输出目录下的。</li><li>Test Resources： 一般用于标注单元测试的资源文件目录。在 maven 项目下，单元测试的资源目录是单独划分出来的，其目录为：src - test -resources，这里的 resources 目录我们就会设置为 Test Resources，表示该目录是作为单元测试的资源目录。资源目录下的文件是会被编译到输出目录下的。</li><li>Excluded： 一般用于标注排除目录。被排除的目录不会被 IntelliJ IDEA 创建索引，相当于被 IntelliJ IDEA 废弃，该目录下的代码文件是不具备代码检查和智能提示等常规代码功能。</li></ul></blockquote><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>通过上面的介绍，我们知道对于非 maven 项目我们只要会设置 src 即可。<br><img src="https://i.loli.net/2019/08/26/rQBsaz9XhtbKLxE.jpg" alt="java2.jpg"></p><h3 id="处理结果"><a href="#处理结果" class="headerlink" title="处理结果"></a>处理结果</h3><p><img src="https://i.loli.net/2019/08/26/XGW3S5LIcZFKn1A.jpg" alt="java3.jpg"></p><p><strong>鸣谢:</strong>博客园_子墨言良</p>]]></content>
      
      
      <categories>
          
          <category> 异常处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> IDEA </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA报Errorjava无效的源发行版12</title>
      <link href="/2019/08/21/%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97_IDEA_1/"/>
      <url>/2019/08/21/%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97_IDEA_1/</url>
      
        <content type="html"><![CDATA[<center>本机的JDK版本与项目的语言级别不同</center><a id="more"></a><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>今天编译java程序时出现<code>Error:java: 无效的源发行版: 12</code>错误</p><h4 id="错误信息"><a href="#错误信息" class="headerlink" title="错误信息:"></a>错误信息:</h4><p><img src="https://i.loli.net/2019/08/21/NBUes6IYLV5oMgp.jpg" alt="errMsg.jpg"></p><h3 id="主要原因"><a href="#主要原因" class="headerlink" title="主要原因"></a>主要原因</h3><p>本机的<code>JDK</code>版本与项目的语言级别不同造成的</p><p>本机JDK版本:</p><p><img src="https://i.loli.net/2019/08/21/WnoiLMs4DcEG7OT.jpg" alt="JdkVersion.jpg"></p><p>使用<code>Ctrl+Alt+Shift+s</code>打开<code>Project Structure</code>查看<code>Project Language Level</code>，发现是<code>12</code></p><p><img src="https://i.loli.net/2019/08/21/NtQ9bxd2A7smPEv.jpg" alt="oldIDEA.jpg"></p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>打开<code>Project Structure</code>界面，选择<code>Project</code>，改变<code>Project Language Level</code>如下图所示<br><img src="https://i.loli.net/2019/08/21/zCxJGv5D7rBiLH6.jpg" alt="NewIDEA.jpg"></p><h3 id="处理结果"><a href="#处理结果" class="headerlink" title="处理结果"></a>处理结果</h3><p><img src="https://i.loli.net/2019/08/21/jMmlVa2Dnyv5pqd.jpg" alt="解决.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 异常处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JDK </tag>
            
            <tag> 笔记 </tag>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>下了Tomcat，但是启动的时候不管是系统的控制台还是idea的控制台，显示的日志都有中文乱码</title>
      <link href="/2019/08/21/%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97_Tomcat_1/"/>
      <url>/2019/08/21/%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97_Tomcat_1/</url>
      
        <content type="html"><![CDATA[<center>Tomcat日志乱码问题</center><a id="more"></a><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>启动Tomcat的时候不管是系统的控制台还是idea的控制台，显示的日志都有中文乱码</p><h4 id="错误信息"><a href="#错误信息" class="headerlink" title="错误信息:"></a>错误信息:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">12-Jan-2019 11:15:48.911 淇℃伅 [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10</span><br><span class="line">12-Jan-2019 11:15:48.911 淇℃伅 [main] org.apache.catalina.startup.VersionLoggerListener.log OS.鐗堟湰:            10.0</span><br><span class="line">12-Jan-2019 11:15:48.911 淇℃伅 [main] org.apache.catalina.startup.VersionLoggerListener.log 缁�.閫�:          amd64</span><br><span class="line">12-Jan-2019 11:15:48.911 淇℃伅 [main] org.apache.catalina.startup.VersionLoggerListener.log Java 鐜鍙橀噺:             C:\Program Files\Java\jdk1.8.0_191\jre</span><br><span class="line">12-Jan-2019 11:15:48.911 淇℃伅 [main] org.apache.catalina.startup.VersionLoggerListener.log JVM 鐗堟湰:           1.8.0_191-b12</span><br><span class="line">12-Jan-2019 11:15:48.911 淇℃伅 [main] org.apache.catalina.startup.VersionLoggerListener.log JVM.渚涘簲鍟�:            Oracle Corporation</span><br><span class="line">12-Jan-2019 11:15:48.911 淇℃伅 [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         C:\Users\user\.IntelliJIdea2018.3\system\tomcat\Unnamed_demo</span><br><span class="line">12-Jan-2019 11:15:48.911 淇℃伅 [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         D:\tomcat\apache-tomcat-9.0.14</span><br></pre></td></tr></table></figure><h3 id="主要原因"><a href="#主要原因" class="headerlink" title="主要原因"></a>主要原因</h3><p>Tomcat的配置文件中编码参数不对</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java.util.logging.ConsoleHandler.encoding = UTF-8</span><br></pre></td></tr></table></figure><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>修改tomcat的conf下的logging.properties中的参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java.util.logging.ConsoleHandler.encoding = GBK</span><br></pre></td></tr></table></figure><p>将UTF-8改到GBK就行了保存后重启tomcat就正常了。</p><h3 id="处理结果"><a href="#处理结果" class="headerlink" title="处理结果:"></a>处理结果:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">21-Aug-2019 14:58:03.736 信息 [main] org.apache.catalina.startup.Catalina.load 服务器在[562]毫秒内初始化</span><br><span class="line">21-Aug-2019 14:58:03.773 信息 [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]</span><br><span class="line">21-Aug-2019 14:58:03.774 信息 [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/9.0.22]</span><br><span class="line">21-Aug-2019 14:58:03.791 信息 [main] org.apache.coyote.AbstractProtocol.start 开始协议处理句柄[&quot;http-nio-8080&quot;]</span><br><span class="line">21-Aug-2019 14:58:03.806 信息 [main] org.apache.coyote.AbstractProtocol.start 开始协议处理句柄[&quot;ajp-nio-8009&quot;]</span><br><span class="line">21-Aug-2019 14:58:03.810 信息 [main] org.apache.catalina.startup.Catalina.start Server startup in [74] milliseconds</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 异常处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> IDEA </tag>
            
            <tag> Tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven+spring 报错：Error configuring application listener of class org.springframework.web.cont</title>
      <link href="/2019/08/19/%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97_Java%E7%AF%87_1/"/>
      <url>/2019/08/19/%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97_Java%E7%AF%87_1/</url>
      
        <content type="html"><![CDATA[<center>错误信息：SEVERE: Error configuring application listener of class org.springframework.web.context.ContextLoaderListener</center><a id="more"></a><h3 id="错误信息"><a href="#错误信息" class="headerlink" title="错误信息:"></a>错误信息:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SEVERE: Error configuring application listener of class org.springframework.web.context.ContextLoaderListener</span><br></pre></td></tr></table></figure><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案:"></a>解决方案:</h3><ol><li>右键工程,打开工程属性对话框,到<strong>Deloyment Assembly</strong>页面,点击Add:</li></ol><p><img src="https://i.loli.net/2019/08/19/t6xosw3CuTrymVZ.png" alt="20131224084203859.png"></p><ol start="2"><li><p>选择<strong>java Build Path Entries</strong><br><img src="https://i.loli.net/2019/08/19/dtJMGwgiFCIae1y.png" alt="20131224084158734.png"></p></li><li><p>把成序用的Library加入进来<br><img src="https://i.loli.net/2019/08/19/zsEkR6JIC7oBZeL.png" alt="20131224084217687.png"></p></li></ol><p>4.重新运行Server</p><p><strong>鸣谢:</strong>CSDN_hunhun1122</p>]]></content>
      
      
      <categories>
          
          <category> 异常处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 笔记 </tag>
            
            <tag> eclipse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora食用指南</title>
      <link href="/2019/07/23/Typora%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97_%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/07/23/Typora%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97_%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<center>之前写markdow一直在用vsc<br>但是由于神奇的问题解决不掉<br>我弃坑了!<br>就这么干脆!<br>听说这个不错<br>学着用用<br>markdown里有的这里就不写了</center><a id="more"></a><p><strong>这里是下载地址~</strong></p><p><a href="https://www.typora.io/#download" target="_blank" rel="noopener">https://www.typora.io/#download</a></p><p><strong><em>开始</em></strong></p><p>神说:天大地大,快捷键最大.</p><h3 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h3><ul><li>加粗： <code>Ctrl/Cmd + B</code></li><li>标题： <code>Ctrl/Cmd + H</code></li><li>插入链接： <code>Ctrl/Cmd + K</code></li><li>插入代码： <code>Ctrl/Cmd + Shift + C</code></li><li>行内代码： <code>Ctrl/Cmd + Shift + K</code></li><li>插入图片： <code>Ctrl/Cmd + Shift + I</code></li><li>无序列表： <code>Ctrl/Cmd + Shift + L</code></li><li>撤销： <code>Ctrl/Cmd + Z</code></li><li>一级标题：快捷键为Crtl + 1，以此类推</li></ul><h3 id="块元素"><a href="#块元素" class="headerlink" title="块元素"></a>块元素</h3><h4 id="换行符"><a href="#换行符" class="headerlink" title="换行符"></a>换行符</h4><p>在markdown中，段落由多个空格分隔。在Typora中，只需回车即可创建新段落。</p><h4 id="标题级别"><a href="#标题级别" class="headerlink" title="标题级别"></a>标题级别</h4><blockquote><p># 一级标题， 快捷键为Crtl + 1<br>## 二级标题，快捷键为Crtl + 2<br>###### 六级标题，快捷键为Crtl + 6</p></blockquote><h4 id="表"><a href="#表" class="headerlink" title="表"></a>表</h4><p>输入<code>| 表头1 | 表头2 |</code>并回车。即可将创建一个包含两列的表，然后就像操作Word文档一样设置表格即可，没必要知道Markdown的复杂语法，因为这些语法会由Typora自动生成。效果如下：</p><table><thead><tr><th align="left">First Header</th><th align="left">Second Header</th></tr></thead><tbody><tr><td align="left"></td><td align="left"></td></tr></tbody></table><hr><h4 id="YAML-Front-Matter"><a href="#YAML-Front-Matter" class="headerlink" title="YAML Front Matter"></a>YAML Front Matter</h4><p>Typora支持<a href="http://jekyllrb.com/docs/frontmatter/" target="_blank" rel="noopener">YAML Front Matter</a>， 在文章开头输入<code>---</code>，然后按回车即可。</p><h4 id="目录（TOC）"><a href="#目录（TOC）" class="headerlink" title="目录（TOC）"></a>目录（TOC）</h4><p>输入<code>[toc]</code>然后回车，即可创建一个“目录”。TOC从文档中提取所有标题，其内容将自动更新。</p><h3 id="跨度元素"><a href="#跨度元素" class="headerlink" title="跨度元素"></a>跨度元素</h3><p>跨度元素即图片，网址，视频等，在Typora中输入后，会立即载入并呈现。</p><p><a href="https://www.simon96.online/2018/10/18/Typora入门（中文版）/" target="_blank" rel="noopener">https://www.simon96.online/2018/10/18/Typora入门（中文版）/</a>)</p><hr><p><strong>总结:</strong></p><ol><li>建议打开大纲视图（快捷键ctrl + shift + 1）。</li><li>插入表格需要顶格写，不然显示不出来。</li><li>以上语法不用刻意记，在Typora中的右键菜单都有， 常用功能基本上都有快捷键。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Typora食用指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Typora </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>百度云编程资源(过期无补)</title>
      <link href="/2019/07/18/%E7%99%BE%E5%BA%A6%E4%BA%91_%E7%99%BE%E5%BA%A6%E4%BA%91%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90(%E8%BF%87%E6%9C%9F%E6%97%A0%E8%A1%A5)/"/>
      <url>/2019/07/18/%E7%99%BE%E5%BA%A6%E4%BA%91_%E7%99%BE%E5%BA%A6%E4%BA%91%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90(%E8%BF%87%E6%9C%9F%E6%97%A0%E8%A1%A5)/</url>
      
        <content type="html"><![CDATA[<center><p>喵~<br><br>发一些学习的资源,需要自提,过期无补<br><br>我只是个么的感情的搬运工<br><br>不包邮<br><br>就是这样</p></center><a id="more"></a><p><strong>进入大数据 Spark SQL 的世界</strong></p><p>链接：<a href="https://pan.baidu.com/s/1_AINgCN8KaQEbnJRkWnKdw" target="_blank" rel="noopener">https://pan.baidu.com/s/1_AINgCN8KaQEbnJRkWnKdw</a> </p><p>提取码：7j85</p><p><strong>Java深入微服务原理改造房产销售平台</strong></p><p>链接：<a href="https://pan.baidu.com/s/1O7VE9AOB8AKaYYp0d1HOrw" target="_blank" rel="noopener">https://pan.baidu.com/s/1O7VE9AOB8AKaYYp0d1HOrw</a> </p><p>提取码：2f9i </p><p><strong>表白神器链接：</strong></p><p><a href="https://pan.baidu.com/s/1EXK0BYqX-gXuhZGOWWB8zg" target="_blank" rel="noopener">https://pan.baidu.com/s/1EXK0BYqX-gXuhZGOWWB8zg</a></p><p> 密码：m3ih</p><p><strong>超实用前端资料链接</strong>：</p><p><a href="https://pan.baidu.com/s/1dzMNAgTWpmCDezHptpg_ig" target="_blank" rel="noopener">https://pan.baidu.com/s/1dzMNAgTWpmCDezHptpg_ig</a>  </p><p>提取码：7hcj </p><p><strong>JS设计模式全解链接</strong>：</p><p><a href="https://pan.baidu.com/s/1G4jMHzWmVG_AioqN7I0rFQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1G4jMHzWmVG_AioqN7I0rFQ</a> </p><p>提取码：uti9 </p><p><strong>疑难问题解决方案链接：</strong></p><p><a href="https://pan.baidu.com/s/1cHivqaloYo0l4UL6ZHEP2w" target="_blank" rel="noopener">https://pan.baidu.com/s/1cHivqaloYo0l4UL6ZHEP2w</a> </p><p>提取码：2lof</p><p><strong>玩转算法</strong></p><p>链接：<a href="https://pan.baidu.com/s/1gTGwVegBWmMntr7TJZMbyw" target="_blank" rel="noopener">https://pan.baidu.com/s/1gTGwVegBWmMntr7TJZMbyw</a> </p><p>提取码：pywv </p><p><strong>大数据视频和资料：</strong>       </p><p>链接: <a href="https://pan.baidu.com/s/1bqUXYKf" target="_blank" rel="noopener">https://pan.baidu.com/s/1bqUXYKf</a> </p><p>密码: k38w</p><p><strong>React Native项目实战</strong></p><p>链接：<a href="https://pan.baidu.com/s/15-hC110OoVTQOiBczsb_WA" target="_blank" rel="noopener">https://pan.baidu.com/s/15-hC110OoVTQOiBczsb_WA</a> </p><p>提取码：8mk7 </p><p><strong>React 贯穿全栈开发APP</strong></p><p>链接：<a href="https://pan.baidu.com/s/1JgcdhfguEvYhlVFsgkzIEA" target="_blank" rel="noopener">https://pan.baidu.com/s/1JgcdhfguEvYhlVFsgkzIEA</a> </p><p>提取码：a3yf</p><p><strong>Java并发编程</strong></p><p>链接：<a href="https://pan.baidu.com/s/1VKAN7wTnpKo7PN3QXywa5A" target="_blank" rel="noopener">https://pan.baidu.com/s/1VKAN7wTnpKo7PN3QXywa5A</a> </p><p>提取码：hznr </p><p><strong>前端视频和资料：</strong></p><p> 链接: <a href="https://pan.baidu.com/s/1gfjxHL5" target="_blank" rel="noopener">https://pan.baidu.com/s/1gfjxHL5</a> </p><p>密码: hjua</p><p><strong>Python高级编程技巧</strong></p><p>链接：<a href="https://pan.baidu.com/s/1adz1uuxBOdelVeXAN0SC5g" target="_blank" rel="noopener">https://pan.baidu.com/s/1adz1uuxBOdelVeXAN0SC5g</a> </p><p>提取码：evxr </p><p><strong>bootstrap视频和资料：</strong>     </p><p>链接：<a href="https://pan.baidu.com/s/1luqC5W0GBsqBfgRG2LuOMQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1luqC5W0GBsqBfgRG2LuOMQ</a> </p><p>密码：48w3</p><p><strong>面试经验指导链接：</strong></p><p><a href="https://pan.baidu.com/s/1DSDLCWW5T_PQ8zsf5LMkCQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1DSDLCWW5T_PQ8zsf5LMkCQ</a> </p><p>提取码：r7qv </p><p><strong>基础入门安卓</strong></p><p>链接：<a href="https://pan.baidu.com/s/1VcuZ8im8p5lDSw1izaQBIw" target="_blank" rel="noopener">https://pan.baidu.com/s/1VcuZ8im8p5lDSw1izaQBIw</a> </p><p>提取码：a38m </p><p><strong>第一套软件测试教程</strong></p><p>链接：<a href="https://pan.baidu.com/s/1igq6HbJYK_11eG1XiSoIBQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1igq6HbJYK_11eG1XiSoIBQ</a> </p><p>提取码：7d6b  </p><p><strong>软件测试指导</strong></p><p>链接：<a href="https://pan.baidu.com/s/1uqSzKXVuAgg8JET0aoN3Nw" target="_blank" rel="noopener">https://pan.baidu.com/s/1uqSzKXVuAgg8JET0aoN3Nw</a> </p><p>提取码：t1qo</p><p><strong>高级架构师进阶</strong></p><p>链接：<a href="https://pan.baidu.com/s/19r5i1FdXW6glSy2ZQ71eFA" target="_blank" rel="noopener">https://pan.baidu.com/s/19r5i1FdXW6glSy2ZQ71eFA</a> </p><p>提取码：czb4 </p><p><strong>python视频和资料</strong>：                          </p><p>链接: <a href="https://pan.baidu.com/s/1jJQaagA" target="_blank" rel="noopener">https://pan.baidu.com/s/1jJQaagA</a> </p><p>密码: e1gm</p><p><strong>Java开发人工智能远程监控</strong></p><p>链接：<a href="https://pan.baidu.com/s/1x2uzAHscTLf8t-G_3LrXLw" target="_blank" rel="noopener">https://pan.baidu.com/s/1x2uzAHscTLf8t-G_3LrXLw</a> </p><p>提取码：b0hn</p><p><strong>SSH个人理财系统</strong></p><p>链接：<a href="https://pan.baidu.com/s/1-BybATsIfRR4TU7Z-PlAaQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1-BybATsIfRR4TU7Z-PlAaQ</a> </p><p>提取码：5a99</p><p><strong>Python全套（内有爬虫）</strong></p><p>链接：<a href="https://pan.baidu.com/s/1GdOxS1nqNv2t33C6dS6tmA" target="_blank" rel="noopener">https://pan.baidu.com/s/1GdOxS1nqNv2t33C6dS6tmA</a> </p><p>提取码：g19z </p><p><strong>CMR系统</strong></p><p>链接：<a href="https://pan.baidu.com/s/1NfKOLfudJqbE-gTd8SUuzQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1NfKOLfudJqbE-gTd8SUuzQ</a> </p><p>提取码：fjq3 </p><p><strong>Spring源码解析</strong></p><p>链接：<a href="https://pan.baidu.com/s/1zOHWBUyVsLfn4NGmN6etvw" target="_blank" rel="noopener">https://pan.baidu.com/s/1zOHWBUyVsLfn4NGmN6etvw</a> </p><p>提取码：i8gd </p><p><strong>Hadoop视频和资料：</strong>        </p><p> 链接：<a href="https://pan.baidu.com/s/1wjhXxD3-ZuoRHv0tRLsP8w" target="_blank" rel="noopener">https://pan.baidu.com/s/1wjhXxD3-ZuoRHv0tRLsP8w</a> </p><p>密码：y075</p><p><strong>软件方法论</strong></p><p>链接：<a href="https://pan.baidu.com/s/1JcqLQS4jIDNHwcZ8rlv95g" target="_blank" rel="noopener">https://pan.baidu.com/s/1JcqLQS4jIDNHwcZ8rlv95g</a> </p><p>提取码：9p8h</p><p><strong>基于Spring团购项目链接：</strong></p><p><a href="https://pan.baidu.com/s/12oqsuKtR46etIWYs2KpH8A" target="_blank" rel="noopener">https://pan.baidu.com/s/12oqsuKtR46etIWYs2KpH8A</a> </p><p>提取码：8yzq</p><p><strong>Linux指导</strong></p><p>链接：<a href="https://pan.baidu.com/s/1RfFQWLu_VmkSYHp4Aj2RVg" target="_blank" rel="noopener">https://pan.baidu.com/s/1RfFQWLu_VmkSYHp4Aj2RVg</a> </p><p>提取码：9t8i</p><p><strong>JavaEE实战</strong></p><p>链接：<a href="https://pan.baidu.com/s/1Fk8JM8gzNBamvbxLnJ-2ow" target="_blank" rel="noopener">https://pan.baidu.com/s/1Fk8JM8gzNBamvbxLnJ-2ow</a> </p><p>提取码：semf </p><p><strong>mysql视频和资料：</strong>             </p><p>链接：<a href="https://pan.baidu.com/s/14EoVSlWFwAEzsa8-XC61-A" target="_blank" rel="noopener">https://pan.baidu.com/s/14EoVSlWFwAEzsa8-XC61-A</a> </p><p>密码：6cde</p><p><strong>宅急送项目</strong></p><p>链接：<a href="https://pan.baidu.com/s/1UQbC8H0B5QqOimfOq2W2Kg" target="_blank" rel="noopener">https://pan.baidu.com/s/1UQbC8H0B5QqOimfOq2W2Kg</a> </p><p>提取码：oz3h</p><p><strong>Java开发二维码</strong></p><p>链接：<a href="https://pan.baidu.com/s/1MeERyivNIJOaFznLUATEBA" target="_blank" rel="noopener">https://pan.baidu.com/s/1MeERyivNIJOaFznLUATEBA</a> </p><p>提取码：yd6d</p><p><strong>开发云盘</strong></p><p>链接：<a href="https://pan.baidu.com/s/1yq5BbW-Hu19XCYyxnJZHHg" target="_blank" rel="noopener">https://pan.baidu.com/s/1yq5BbW-Hu19XCYyxnJZHHg</a> </p><p>提取码：di81 </p><p><strong>Java开发音频播放器</strong></p><p>链接：<a href="https://pan.baidu.com/s/1LD4WajbwkGajDRmYAdqX7A" target="_blank" rel="noopener">https://pan.baidu.com/s/1LD4WajbwkGajDRmYAdqX7A</a> </p><p>提取码：lxx5</p><p><strong>高并发程序设计</strong></p><p>链接：<a href="https://pan.baidu.com/s/1HpWceif04YiUVd_LvQCFiA" target="_blank" rel="noopener">https://pan.baidu.com/s/1HpWceif04YiUVd_LvQCFiA</a> </p><p>提取码：bj3u</p><p><strong>银行项目</strong></p><p>链接：<a href="https://pan.baidu.com/s/1KpEv23uOf0lPtFe_p3nenQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1KpEv23uOf0lPtFe_p3nenQ</a> </p><p>提取码：8z5i </p><p><strong>数据分析视频和资料：</strong>       </p><p> 链接：<a href="https://pan.baidu.com/s/19t389HP0bx2RJdK6GlTQOA" target="_blank" rel="noopener">https://pan.baidu.com/s/19t389HP0bx2RJdK6GlTQOA</a> </p><p>密码：gezo</p><p><strong>高并发商城</strong></p><p>链接：<a href="https://pan.baidu.com/s/1_TBNzl3uBxIFYfwzPZEPrw" target="_blank" rel="noopener">https://pan.baidu.com/s/1_TBNzl3uBxIFYfwzPZEPrw</a> </p><p>提取码：6cmm</p><p><strong>自动化测试Selenium</strong></p><p>链接：<a href="https://pan.baidu.com/s/1gW2FcR5mcgguVg4w05S2vQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1gW2FcR5mcgguVg4w05S2vQ</a> </p><p>提取码：ksxo </p><p><strong>让你的页面性能飞起来</strong></p><p>链接：<a href="https://pan.baidu.com/s/1Lx4mhEK3bygVGWzjMequCg" target="_blank" rel="noopener">https://pan.baidu.com/s/1Lx4mhEK3bygVGWzjMequCg</a> </p><p>提取码：1w12</p><p><strong>Netty开发聊天系统</strong></p><p>链接：<a href="https://pan.baidu.com/s/1IbkUVZ82HvRZLFfoP0eYlQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1IbkUVZ82HvRZLFfoP0eYlQ</a> </p><p>提取码：lbno</p><p><strong>报名系统</strong></p><p>链接：<a href="https://pan.baidu.com/s/1m1L4shEaGHi_aaRuwHlUeQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1m1L4shEaGHi_aaRuwHlUeQ</a> </p><p>提取码：36o3 </p><p><strong>go语言视频和资料：</strong>         </p><p>链接：<a href="https://pan.baidu.com/s/1bIqDCXld1oHxHTqfhx6Acw" target="_blank" rel="noopener">https://pan.baidu.com/s/1bIqDCXld1oHxHTqfhx6Acw</a> </p><p>密码：xp6v</p><p><strong>手机端开发视频和资料：</strong>      </p><p>链接：<a href="https://pan.baidu.com/s/1z8Q2bZ_ZYzLbjIHRqVjrvQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1z8Q2bZ_ZYzLbjIHRqVjrvQ</a> </p><p>密码：1xgt</p><p><strong>scale视频和资料：</strong>  </p><p>链接：<a href="https://pan.baidu.com/s/1IOX-gjWJtWam3XYZk9l6BQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1IOX-gjWJtWam3XYZk9l6BQ</a> </p><p>密码：euql</p><p><strong>微服务气象实战：</strong></p><p>链接：<a href="https://pan.baidu.com/s/1A-9DPRPK7D3d2KcocZwRig" target="_blank" rel="noopener">https://pan.baidu.com/s/1A-9DPRPK7D3d2KcocZwRig</a> </p><p>提取码：qz2f </p><p><strong>spark视频和资料：</strong>    </p><p>链接：<a href="https://pan.baidu.com/s/1IOX-gjWJtWam3XYZk9l6BQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1IOX-gjWJtWam3XYZk9l6BQ</a> </p><p>密码：euql</p><p><strong>响应式一招开发制胜</strong></p><p>链接：<a href="https://pan.baidu.com/s/1yLxWwW2Ql0fo0R-p8mt_qw" target="_blank" rel="noopener">https://pan.baidu.com/s/1yLxWwW2Ql0fo0R-p8mt_qw</a> </p><p>提取码：r52v </p><p><strong>vue.js高仿饿了么</strong></p><p>链接：<a href="https://pan.baidu.com/s/1uqBpqttmP_jCZoao57Gz9g" target="_blank" rel="noopener">https://pan.baidu.com/s/1uqBpqttmP_jCZoao57Gz9g</a> </p><p>提取码：km8w</p><p><strong>大型SpringMVC，Mybatis，Redis，Solr，Nginx，SSM分布式电商项目视频教程</strong></p><p>链接：<a href="https://pan.baidu.com/s/1m71jc-K-0xfJ3zC6Au_byQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1m71jc-K-0xfJ3zC6Au_byQ</a> </p><p>提取码：tjpx </p><p><strong>Spring Cloud</strong></p><p>链接：<a href="https://pan.baidu.com/s/1EkZwDVcqLY8OZ42NxHEuPA" target="_blank" rel="noopener">https://pan.baidu.com/s/1EkZwDVcqLY8OZ42NxHEuPA</a> </p><p>提取码：18nj</p><p><strong>第一套前端全套视频和源码：</strong>       </p><p>链接：<a href="https://pan.baidu.com/s/1-eTjKfe1Ozge0YccblhY4w" target="_blank" rel="noopener">https://pan.baidu.com/s/1-eTjKfe1Ozge0YccblhY4w</a> </p><p>密码：eyxs</p><p><strong>第二套前端全套视频和源码：</strong>           </p><p>链接：<a href="https://pan.baidu.com/s/1e6OC7fBWWQuzU6sGDj0Spw" target="_blank" rel="noopener">https://pan.baidu.com/s/1e6OC7fBWWQuzU6sGDj0Spw</a> </p><p>密码：p8qm</p><p><strong>第三套前端全套视频和源码：</strong>      </p><p>链接：<a href="https://pan.baidu.com/s/1rd6gB64fS17ylqi3A9IA-w" target="_blank" rel="noopener">https://pan.baidu.com/s/1rd6gB64fS17ylqi3A9IA-w</a> </p><p>密码：egy5</p><p><strong>PHP全套第一套视频和资料：</strong>    </p><p>链接：<a href="https://pan.baidu.com/s/13DCQxHpLos6VcB6gY5LZSw" target="_blank" rel="noopener">https://pan.baidu.com/s/13DCQxHpLos6VcB6gY5LZSw</a> </p><p>密码：tmqq</p><p><strong>PHP全套第二套视频和资料：</strong>             </p><p>链接：<a href="https://pan.baidu.com/s/18GF5u8Z4PploD2lYFgs_Ww" target="_blank" rel="noopener">https://pan.baidu.com/s/18GF5u8Z4PploD2lYFgs_Ww</a> </p><p>密码：l84u</p><p><strong>京东手机端制作视频和源码</strong>：             </p><p>链接：<a href="https://pan.baidu.com/s/1GcCgnuYoZoOUadA8IpiywA" target="_blank" rel="noopener">https://pan.baidu.com/s/1GcCgnuYoZoOUadA8IpiywA</a> </p><p>密码：o7z9</p><p><strong>基于Laravel，AngularJS全栈开发知乎</strong></p><p>链接：<a href="https://pan.baidu.com/s/1MKwxwY6GmHJIdT2d3s_F2Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1MKwxwY6GmHJIdT2d3s_F2Q</a> </p><p>提取码：uvv7 </p><p><strong>强力django+杀手级xadmin 打造上线标准的在线教育平台</strong></p><p>链接：<a href="https://pan.baidu.com/s/1enDpWa6jmRh5FR5cMvTFJQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1enDpWa6jmRh5FR5cMvTFJQ</a> </p><p>提取码：bfwy </p><p><strong>前端 Vue+Node+MongoDB高级全栈开发</strong></p><p>链接：<a href="https://pan.baidu.com/s/1EpuXIb7kpVc_7VrstTMWRg" target="_blank" rel="noopener">https://pan.baidu.com/s/1EpuXIb7kpVc_7VrstTMWRg</a> </p><p>提取码：8vcp </p><p><strong>电商秒杀活动视频和源码</strong>               </p><p>链接：<a href="https://pan.baidu.com/s/1RHHV8SOC7Q9BnPRTSVWYNg" target="_blank" rel="noopener">https://pan.baidu.com/s/1RHHV8SOC7Q9BnPRTSVWYNg</a> </p><p>密码：ze4h</p><p><strong>Nginx</strong></p><p>链接：<a href="https://pan.baidu.com/s/1fRjIbk-rsL0HBo1WWaM-OQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1fRjIbk-rsL0HBo1WWaM-OQ</a> </p><p>提取码：5z3a </p><p><strong>前端到后台ThinkPHP开发整站</strong></p><p>链接：<a href="https://pan.baidu.com/s/1FZa8O03NLEOdSeqqb_HgEw" target="_blank" rel="noopener">https://pan.baidu.com/s/1FZa8O03NLEOdSeqqb_HgEw</a> </p><p>提取码：3km2</p><p><strong>快速上手Linux 玩转典型应用</strong></p><p>链接：<a href="https://pan.baidu.com/s/1dPZA47vku2eYQY_PhfCOtg" target="_blank" rel="noopener">https://pan.baidu.com/s/1dPZA47vku2eYQY_PhfCOtg</a> </p><p>提取码：2rdm</p><p><strong>Vue核心技术 vue实战精讲</strong></p><p> 链接：<a href="https://pan.baidu.com/s/1sHStCWy4XJWflft6H_qAKA" target="_blank" rel="noopener">https://pan.baidu.com/s/1sHStCWy4XJWflft6H_qAKA</a> </p><p>提取码：0ybr </p><p><strong>天猫商城购物车实战视频资料：</strong> </p><p>链接：<a href="https://pan.baidu.com/s/1UxtMqsszcAKpZ_2a41raSQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1UxtMqsszcAKpZ_2a41raSQ</a> </p><p>密码：c1rd</p><p><strong>移动端混合APP视频和资料：</strong>             </p><p>链接：<a href="https://pan.baidu.com/s/1bwDYjR8UMk5pgpvPcxWBfA" target="_blank" rel="noopener">https://pan.baidu.com/s/1bwDYjR8UMk5pgpvPcxWBfA</a> </p><p>密码：tkyj</p><p><strong>未知：</strong><br>链接：<a href="https://pan.baidu.com/s/1YqRWtnWJZAFNNCf_Z2SLtA" target="_blank" rel="noopener">https://pan.baidu.com/s/1YqRWtnWJZAFNNCf_Z2SLtA</a> 密码：ccj9<br>链接：<a href="https://pan.baidu.com/s/1I-OJSE-VXbX9dm8aN0QP4w" target="_blank" rel="noopener">https://pan.baidu.com/s/1I-OJSE-VXbX9dm8aN0QP4w</a> 密码：o1vv<br>链接：<a href="https://pan.baidu.com/s/1VFJ7TTwApFUZsQQnogjr-A" target="_blank" rel="noopener">https://pan.baidu.com/s/1VFJ7TTwApFUZsQQnogjr-A</a> 密码：phtf<br>链接：<a href="https://pan.baidu.com/s/14ysuXBUbIw0LLgGoZanclA" target="_blank" rel="noopener">https://pan.baidu.com/s/14ysuXBUbIw0LLgGoZanclA</a> 密码：ar4v<br>链接：<a href="https://pan.baidu.com/s/1H4nUEtw3-WKVN78b6TuklA" target="_blank" rel="noopener">https://pan.baidu.com/s/1H4nUEtw3-WKVN78b6TuklA</a> 密码：87gc<br>链接：<a href="https://pan.baidu.com/s/1ZpLoacAYhk4v8_PzyGzxIg" target="_blank" rel="noopener">https://pan.baidu.com/s/1ZpLoacAYhk4v8_PzyGzxIg</a> 密码：yzsb<br>链接：<a href="https://pan.baidu.com/s/1t3DjD7Fa7Vv66wyTND2ddQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1t3DjD7Fa7Vv66wyTND2ddQ</a> 密码：3q1o<br>链接：<a href="https://pan.baidu.com/s/1_qXE5PpkEA3h2BX9dz64Bw" target="_blank" rel="noopener">https://pan.baidu.com/s/1_qXE5PpkEA3h2BX9dz64Bw</a> 密码：jat1<br>链接：<a href="https://pan.baidu.com/s/1JGv7l0dZzq2F9uX7Pr-1kQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1JGv7l0dZzq2F9uX7Pr-1kQ</a> 密码：or26<br>链接：<a href="https://pan.baidu.com/s/18cZZ22va495qjlAAU4jFzA" target="_blank" rel="noopener">https://pan.baidu.com/s/18cZZ22va495qjlAAU4jFzA</a> 密码：w6ri<br>链接：<a href="https://pan.baidu.com/s/1TfV2dfrLnUAYlCVG8ppOlA" target="_blank" rel="noopener">https://pan.baidu.com/s/1TfV2dfrLnUAYlCVG8ppOlA</a> 密码：hpz8<br>链接：<a href="https://pan.baidu.com/s/1nHpOCPTinMDOhi07YFRR4w" target="_blank" rel="noopener">https://pan.baidu.com/s/1nHpOCPTinMDOhi07YFRR4w</a> 密码：xrz0<br>链接：<a href="https://pan.baidu.com/s/1i4xffBJjF-dwFC-QhrZA0g" target="_blank" rel="noopener">https://pan.baidu.com/s/1i4xffBJjF-dwFC-QhrZA0g</a> 密码：mwtw<br>链接：<a href="https://pan.baidu.com/s/1m0EmptzKd7WDpYQ_i5fa4Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1m0EmptzKd7WDpYQ_i5fa4Q</a> 密码：yukp<br>链接：<a href="https://pan.baidu.com/s/1VkFTRv4DfKShN4VrlZyxdA" target="_blank" rel="noopener">https://pan.baidu.com/s/1VkFTRv4DfKShN4VrlZyxdA</a> 密码：runc<br>链接：<a href="https://pan.baidu.com/s/1qKyQEzRABYDXAOK7Mx8XDQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1qKyQEzRABYDXAOK7Mx8XDQ</a> 密码：evf5<br>链接：<a href="https://pan.baidu.com/s/1Ya2NhTvoSNWthhCAvHUnSw" target="_blank" rel="noopener">https://pan.baidu.com/s/1Ya2NhTvoSNWthhCAvHUnSw</a> 密码：82od<br>链接：<a href="https://pan.baidu.com/s/1SgZnAA_OhOZEjlB4Tr5GRA" target="_blank" rel="noopener">https://pan.baidu.com/s/1SgZnAA_OhOZEjlB4Tr5GRA</a> 密码：lbng<br>链接：<a href="https://pan.baidu.com/s/1G1CX_GerVYMYWI3y7bbJRQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1G1CX_GerVYMYWI3y7bbJRQ</a> 密码：yvbn<br>链接：<a href="https://pan.baidu.com/s/1o67q1933TIv0oX3p1_-D9g" target="_blank" rel="noopener">https://pan.baidu.com/s/1o67q1933TIv0oX3p1_-D9g</a> 密码：j5sp<br>链接：<a href="https://pan.baidu.com/s/1iQD04fXlCqrSG1Ezna_iqg" target="_blank" rel="noopener">https://pan.baidu.com/s/1iQD04fXlCqrSG1Ezna_iqg</a> 密码：fjtv<br>链接：<a href="https://pan.baidu.com/s/1Nwau0LZyWxAWp6Yqmsz0fw" target="_blank" rel="noopener">https://pan.baidu.com/s/1Nwau0LZyWxAWp6Yqmsz0fw</a> 密码：pw1l<br>链接：<a href="https://pan.baidu.com/s/1bpJwXzysEgiOfLmULBMBOQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1bpJwXzysEgiOfLmULBMBOQ</a> 密码：vm11<br>链接：<a href="https://pan.baidu.com/s/1YBoNDKUmmRg-ycTMKxeMNg" target="_blank" rel="noopener">https://pan.baidu.com/s/1YBoNDKUmmRg-ycTMKxeMNg</a> 密码：kr6t<br>链接：<a href="https://pan.baidu.com/s/1-LO1aDSdC0Kxy0c7ZNU_Bg" target="_blank" rel="noopener">https://pan.baidu.com/s/1-LO1aDSdC0Kxy0c7ZNU_Bg</a> 密码：2wlf<br>链接：<a href="https://pan.baidu.com/s/1tjmhDwGAn3Mdsof0Iu-efA" target="_blank" rel="noopener">https://pan.baidu.com/s/1tjmhDwGAn3Mdsof0Iu-efA</a> 密码：k3sx<br>链接：<a href="https://pan.baidu.com/s/1n3DuWFFIyyRzGI2RxR7jsw" target="_blank" rel="noopener">https://pan.baidu.com/s/1n3DuWFFIyyRzGI2RxR7jsw</a> 密码：q8zt<br>链接：<a href="https://pan.baidu.com/s/12b_V2LxoBoEP7EWK4Kc_Ew" target="_blank" rel="noopener">https://pan.baidu.com/s/12b_V2LxoBoEP7EWK4Kc_Ew</a> 密码：20sd<br>链接：<a href="https://pan.baidu.com/s/1xGTxVPr-tijhyZPup54Euw" target="_blank" rel="noopener">https://pan.baidu.com/s/1xGTxVPr-tijhyZPup54Euw</a> 密码：4em4<br>链接：<a href="https://pan.baidu.com/s/1Xr3S8Q4DKPoYQkNaW6oOuA" target="_blank" rel="noopener">https://pan.baidu.com/s/1Xr3S8Q4DKPoYQkNaW6oOuA</a> 密码：aw9z<br>链接：<a href="https://pan.baidu.com/s/1ilvozGK8oB_-j5bhlvcB7w" target="_blank" rel="noopener">https://pan.baidu.com/s/1ilvozGK8oB_-j5bhlvcB7w</a> 密码：l4v2<br>链接：<a href="https://pan.baidu.com/s/1uBY0ym-8jrNTn9ues_a-aw" target="_blank" rel="noopener">https://pan.baidu.com/s/1uBY0ym-8jrNTn9ues_a-aw</a> 密码：lbpc<br>链接：<a href="https://pan.baidu.com/s/1wCNWOG-xaLb1yAvsIdK5Og" target="_blank" rel="noopener">https://pan.baidu.com/s/1wCNWOG-xaLb1yAvsIdK5Og</a> 密码：3ayb<br>链接：<a href="https://pan.baidu.com/s/1tZdSrIIYH4bnZrMBOBqGHg" target="_blank" rel="noopener">https://pan.baidu.com/s/1tZdSrIIYH4bnZrMBOBqGHg</a> 密码：0su2</p>]]></content>
      
      
      <categories>
          
          <category> 资源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 资源 </tag>
            
            <tag> 前端 </tag>
            
            <tag> 后端 </tag>
            
            <tag> 练手项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深入浅出mysql读书笔记_基础篇</title>
      <link href="/2019/06/10/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAMySql%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0_%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
      <url>/2019/06/10/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAMySql%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0_%E5%9F%BA%E7%A1%80%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/06/10/5cfe16e056f9274770.png" alt="mysql封面.png"></p><center><p>听说是本好书鸭</p></center><a id="more"></a><h1 id="深入浅出MySQL"><a href="#深入浅出MySQL" class="headerlink" title="深入浅出MySQL"></a>深入浅出MySQL</h1><h2 id="第一章-安装与配置"><a href="#第一章-安装与配置" class="headerlink" title="第一章 安装与配置"></a>第一章 安装与配置</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>&emsp;&emsp;一般选择typical,常用组件都会被安装,默认安装到C盘.</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>&emsp;&emsp;在开始目录下找到mysql,运行 MySQL Server Instance<br>Configuration Wizard.</p><p>详细配置(图文)(Detail Configuration)</p><p><img src="https://i.loli.net/2019/06/10/5cfe193c21a7b88362.png" alt="第一步.png"></p><p><img src="https://i.loli.net/2019/06/10/5cfe193c23b4c48697.png" alt="第二步.png"></p><blockquote><p>不同的数据库引擎的的区别  </p><ul><li>多功能数据库(Multifunction Database)<br>对事务性(InnoDB)和非事务性(MyISAM)的存储引擎的存取都很快  </li><li>事务性数据库(Transactional DataBase Only)  <pre><code>优化了事务性存储引擎,但非事务性也能用</code></pre></li><li>非事务性数据库(Non-Transactional DataBase Only)  <pre><code>优化了fe非事务性存储引擎,但事务性不能用!  </code></pre></li><li><strong>注意:选择非事务性数据库是,事务性不能用</strong>  </li></ul></blockquote><p>存储引擎<br>可以理解为不同的表类型</p><p><img src="https://i.loli.net/2019/06/10/5cfe21feb033374757.jpg" alt="第三步.jpg"></p><p><img src="https://i.loli.net/2019/06/10/5cfe21fedcb5213321.jpg" alt="第四步.jpg"></p><p><img src="https://i.loli.net/2019/06/10/5cfe21fed4b4650327.jpg" alt="第五步.jpg"></p><p><img src="https://i.loli.net/2019/06/10/5cfe21fee97ff67092.jpg" alt="第六步.jpg"></p><p><img src="https://i.loli.net/2019/06/10/5cfe21ff5fa5d56382.png" alt="第七步.png"></p><p><img src="https://i.loli.net/2019/06/10/5cfe21feb356788599.jpg" alt="第八步.jpg"></p><h3 id="启动和关闭mysql服务"><a href="#启动和关闭mysql服务" class="headerlink" title="启动和关闭mysql服务"></a>启动和关闭mysql服务</h3><blockquote><p>mysql服务和mysql数据库  </p><ul><li>mysql服务<br>&emsp;&emsp;一系列后台服务  </li><li>mysql数据库<br>&emsp;&emsp;一系列的数据目录和数据文件  </li><li>mysql数据库必须在mysql服务启动后才可以进行访问.</li></ul></blockquote><ul><li><p>windows<br>启动:   </p><ol><li>控制面板-&gt;管理工具-&gt;服务-&gt;开启</li><li>在cmd中<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start mysql</span><br></pre></td></tr></table></figure></li></ol><p>关闭:  </p><ol><li>控制面板-&gt;管理工具-&gt;服务-&gt;关闭</li><li>在cmd中<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop mysql</span><br></pre></td></tr></table></figure></li></ol></li><li><p>linux<br>在root账户下<br>启动:  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql start</span><br></pre></td></tr></table></figure><p>重启:  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql restart</span><br></pre></td></tr></table></figure><p>关闭:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql stop</span><br></pre></td></tr></table></figure></li></ul><h2 id="第二章-SQL基础"><a href="#第二章-SQL基础" class="headerlink" title="第二章 SQL基础"></a>第二章 SQL基础</h2><p>SQL Structure Query Language    结构化查询语言 </p><h3 id="sql分类"><a href="#sql分类" class="headerlink" title="sql分类"></a>sql分类</h3><p>sql主要可以分为<strong>3</strong>类:</p><blockquote><ol><li><p>DDL(Data Definition Languages)语句:<br>数据定义语言,这些语句定义了不同的数据段,数据库,表,列,索引等数据库对象定义.  </p><blockquote><p>常用关键词:create,drop,alter等  </p></blockquote></li><li><p>DML(Data Manipulation Language)语句:<br>数据库操作语句,用于添加,删除,更新和查询数据库记录,并检查数据完整性.</p><blockquote><p>常用关键词:insert,delete,update,select等</p></blockquote></li><li><p>DCL(Data Control Language)语句:<br>数据控制语句,用于控制不同的数据段直接的许可和访问级别的语句.这些语句定义了数据库,表,字段,用户的访问权限和安全级别.</p><blockquote><p>主要关键词:grant,revoke等</p></blockquote></li></ol></blockquote><h4 id="DDL语句"><a href="#DDL语句" class="headerlink" title="DDL语句"></a>DDL语句</h4><p>简单来说就是对数据库内部的对象进行创建,删除,修改的操作语言.</p><blockquote><p>与DML语言最大的区别:<br>&emsp;&emsp;DML只对表内部数据进行操作,不涉及表定义,结构的修改,更不会涉及其他对象.DDL更多的是被数据库管理员(DBA)使用,一般很少被开发人员使用.  </p></blockquote><h5 id="1-创建数据库"><a href="#1-创建数据库" class="headerlink" title="1. 创建数据库"></a>1. <strong>创建数据库</strong></h5><h5 id="连接mysql数据库"><a href="#连接mysql数据库" class="headerlink" title="连接mysql数据库:"></a><strong>连接mysql数据库</strong>:</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u[user] -p[password]</span><br></pre></td></tr></table></figure><p>mysql是客户端命令,-u后面跟连接的数据库用户,-p后面跟密码,也可以不直接写出密码,之后会让你输入的</p><h5 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a><strong>创建数据库</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE [dbname];</span><br></pre></td></tr></table></figure><p>创建成功后会显示:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Query OK,1 row affected (0.00 sec)</span><br></pre></td></tr></table></figure><blockquote><ul><li>Query OK  表示命令执行成功(所有的DDL和DML,不包括select,执行成功都显示这个)</li><li>1 row affected 表示影响到了数据库的一行记录</li><li>0.00 sec 表示执行的时间</li></ul></blockquote><p>如果数据库已经存在,则显示:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR 1007 (HY000):Can&apos;t Create database &apos;[dbname]&apos;;</span><br></pre></td></tr></table></figure><h5 id="那如何查看系统中有哪些数据库呢"><a href="#那如何查看系统中有哪些数据库呢" class="headerlink" title="那如何查看系统中有哪些数据库呢?"></a>那如何<strong>查看系统中有哪些数据库</strong>呢?</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure><blockquote><p>数据库创建时,创建的表及其功能:  </p><ul><li>information_schema:<br>主要存储了系统中的一些数据库对象信息,比如:用户表信息,列信息,权限信息,字符集信息,分区信息等.</li></ul><ul><li>cluster:<br>存储了系统的集群信息.</li><li>mysql:<br>存储了用户的权限信息.</li><li>test:<br>系统自动创建的测试数据库,任何用户都可以使用.</li></ul></blockquote><h5 id="选择要操作的数据库"><a href="#选择要操作的数据库" class="headerlink" title="选择要操作的数据库:"></a><strong>选择要操作的数据库</strong>:</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USE [dbname];</span><br></pre></td></tr></table></figure><p>成功切换后会返回:Database changed</p><h5 id="查看数据库中所有表"><a href="#查看数据库中所有表" class="headerlink" title="查看数据库中所有表:"></a><strong>查看数据库中所有表</strong>:</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show tables</span><br></pre></td></tr></table></figure><p>有表则显示表,没有则显示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Empty set (0.00 sec)</span><br></pre></td></tr></table></figure><h5 id="2-删除数据库"><a href="#2-删除数据库" class="headerlink" title="2. 删除数据库"></a>2. <strong>删除数据库</strong></h5><p>命令如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database [dbname];</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意</strong>:这里操作成功后显示的是”<strong>0 row affected</strong>“,原因是MySQL里面drop的结果都是0 row affected.</p></blockquote><blockquote><p><strong>注意</strong>:数据库删除后,里面的数据也会跟着全部删除,所以在删除前要备份好数据.</p></blockquote><h5 id="3-创建表"><a href="#3-创建表" class="headerlink" title="3. 创建表"></a>3. <strong>创建表</strong></h5><p>命令如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE [tablename] (</span><br><span class="line">    column1_name column1_type constraints,</span><br><span class="line">    column2_name column2_type constraints,</span><br><span class="line">    column_last_name column_last_type constraints</span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><ul><li><strong>注意</strong>:  MySQL的表名是以目录的形式存在,所以支持任何目录名支持的字符.</li></ul></blockquote><blockquote><p>column_name是列名.<br>column_type是列的数据类型<br>constraints是约束条件</p></blockquote><p>例:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">'emp'</span> (</span><br><span class="line">    <span class="string">'ename'</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="string">'hiredate'</span> <span class="built_in">date</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span></span><br><span class="line">    <span class="keyword">KEY</span> <span class="string">'idx_emp_ename'</span> (<span class="string">'ename'</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=gbk</span><br></pre></td></tr></table></figure><h5 id="查看表定义"><a href="#查看表定义" class="headerlink" title="查看表定义"></a><strong>查看表定义</strong></h5><p>方法一:(简单,以表的形式显示)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DESC [tablename];</span><br></pre></td></tr></table></figure><p>方法二:(详细,显示创建语句)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW CREATE TABLE [tablename];</span><br></pre></td></tr></table></figure><h5 id="4-删除表"><a href="#4-删除表" class="headerlink" title="4. 删除表"></a>4. <strong>删除表</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE [tablename];</span><br></pre></td></tr></table></figure><h5 id="5-修改表"><a href="#5-修改表" class="headerlink" title="5. 修改表"></a>5. <strong>修改表</strong></h5><ol><li><p><strong>修改表类型</strong></p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE tablename MODIFY [COLUMN] column_definition [FIRST|AFTER col_name]</span><br></pre></td></tr></table></figure> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert table emp modify ename varchar(20);</span><br></pre></td></tr></table></figure></li><li><p><strong>增加表字段</strong></p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE tablename ADD [COLUMN] column_definition [FIRST|AFTER col_name]</span><br></pre></td></tr></table></figure> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert table emp add column age int(3);</span><br></pre></td></tr></table></figure></li><li><p><strong>删除表字段</strong></p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE tablename DROP [COLUMN] col_name</span><br></pre></td></tr></table></figure> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert table emp drop column age;</span><br></pre></td></tr></table></figure></li><li><p><strong>字段改名</strong></p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALERT TABLE tablename CHANGE [COULMN] old_col_name column_definition [FIRST|AFTER col_name]</span><br></pre></td></tr></table></figure> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert table emp change age age1 int(4);</span><br></pre></td></tr></table></figure><blockquote><p>注意:change和modify都可以修改表的定义,不同的是change后面需要写两次列名,不方便.但是change的优点是可以的修改列名称,modify则不能</p></blockquote></li></ol><ol start="5"><li><p><strong>修改字段排列顺序</strong><br> 前面修改和新增后面都跟了一个可选项:<em>first|after column_name</em>,这个选项用来修改字段在表中的位置,默认ADD增加的新字段在表的最后位置,而CHANGE/MODIFY默认不会修改字段位置.</p><blockquote><p><strong>注意:</strong>CHANGE/FIRST|AFTER COLUMN 这些关键词都属于MySQL在标准SQL上的扩展,在其他数据库上不一定适用.</p></blockquote></li><li><p><strong>更改表明</strong></p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALERT TABLE tablename RENAME [TO] new_tablename</span><br></pre></td></tr></table></figure> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert table emp rename emp1;</span><br></pre></td></tr></table></figure></li></ol><h4 id="DML语句"><a href="#DML语句" class="headerlink" title="DML语句"></a>DML语句</h4><p>​    用于对数据库中表记录的操作,包含表记录的插入(insert),更新(update),删除(delete),查询(select).</p><h5 id="插入记录"><a href="#插入记录" class="headerlink" title="插入记录"></a>插入记录</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO tablename(field1,field2,....fieldn) VALUES (vlaues1,values2,...valuesn);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into emp(ename,hiredate,sal) values (&apos;zzz&apos;,&apos;2001-01-01&apos;);</span><br></pre></td></tr></table></figure><p><strong>不指定字段名</strong>(但values后的顺序应该和字段的排序一致)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO tablename  VALUES (vlaues1,values2,...valuesn);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into emp values (&apos;zzz&apos;,&apos;2001-01-01&apos;);</span><br></pre></td></tr></table></figure><p><strong>省略部分值</strong></p><p>含可空字段,非空但含有默认值字段,自增字段,可以不在insert后的字段列表里出现,values后面只写对应字段的value.</p><p>如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into emp (ename,sal) values (&apos;dony&apos;,1000);</span><br></pre></td></tr></table></figure><p><strong>插入多条</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO tablename(field1,field2,....fieldn) </span><br><span class="line">VALUES</span><br><span class="line">(vlaues1,values2,...valuesn),</span><br><span class="line">(vlaues1,values2,...valuesn),</span><br><span class="line">...</span><br><span class="line">(vlaues1,values2,...valuesn);</span><br></pre></td></tr></table></figure><h5 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h5><p>通过update更新数据.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE tablename SET field1=value1,field2=value2....fieldn=valuen [WHERE CONDITION]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update emp set sal=4000 where ename=&apos;lisa&apos;;</span><br></pre></td></tr></table></figure><p><strong>更新多个表的数据</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE t1,t2...tn set t1.field1=expr1,tn.fieldn=exprn [WHERE CONDITION]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uodate emp a,dept b set a.sal=a.sal*b.deptno,b.deptname=a.ename where a.deptno = b.deptno;</span><br></pre></td></tr></table></figure><h5 id="删除记录"><a href="#删除记录" class="headerlink" title="删除记录"></a>删除记录</h5><p>用delete删除记录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM tablename [WHERE CONDITION]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from emp where ename=&apos;dony&apos;;</span><br></pre></td></tr></table></figure><p><strong>删除多个表记录</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE t1,t2...tn FROM t1,t2...tn[WHERE CONDITION]</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意:</strong>如果from后面的表名用别名,则delete后面也要用相应的别名,否则会提示语法错误.</p></blockquote><blockquote><p><strong>注意:</strong>无论是多表还是单表,不加WHERE条件都会把所有记录都删掉,操作时小心.</p></blockquote><h5 id="查询记录"><a href="#查询记录" class="headerlink" title="查询记录"></a>查询记录</h5><p><strong>基本语法</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM tablename [WHERE CONDITION]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from emp;</span><br></pre></td></tr></table></figure><p>其中”*”表示要将所有的记录都选出来,也可以用逗号分隔的所有字段来代替.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select ename,sal from emp;</span><br></pre></td></tr></table></figure><h6 id="查询不重复的记录"><a href="#查询不重复的记录" class="headerlink" title="查询不重复的记录"></a>查询不重复的记录</h6><p>通过distinct实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select distinct deptno fromemp;</span><br></pre></td></tr></table></figure><h6 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h6><p>通过where关键词实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from emp where deptno = 1;</span><br></pre></td></tr></table></figure><blockquote><p>除了=,还可以使用&gt;,&lt;,&gt;=,&lt;=,!=等比较运算符,还可以用and,or实现多条件联合查询</p></blockquote><p>例如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from emp where sal=2000 and deptno=1;</span><br></pre></td></tr></table></figure><h6 id="排序和限制"><a href="#排序和限制" class="headerlink" title="排序和限制"></a>排序和限制</h6><p>通过order by实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM tablename [WHERE CONDITION] [ORDER BY field (DESC|ASC),field1 (DESC|ASC)...fieldn(DESC|ASC)]</span><br></pre></td></tr></table></figure><blockquote><p>DESC和ASC是排序关键词,DESC表示按字段排序,ASC表示升序,如果不写默认升序排列.ORDER BY后可以跟多个字段,并且每个字段可以有不同的排序顺序.</p></blockquote><h6 id="部分显示"><a href="#部分显示" class="headerlink" title="部分显示"></a>部分显示</h6><p>通过limit实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT ...... [LIMIT offset_start,row_count]</span><br></pre></td></tr></table></figure><blockquote><p>offset_start    记录起始偏移量,默认为0</p><p>row_count    显示行数</p></blockquote><blockquote><p><strong>注意:</strong>limit是MySQL扩展SQL92后的语法,在其他数据库上并不能通用.</p></blockquote><h6 id="聚合"><a href="#聚合" class="headerlink" title="聚合"></a>聚合</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT [field1,field2...fieldn] fun_name</span><br><span class="line">FROMtablename</span><br><span class="line">[WHERE where_contition]</span><br><span class="line">[GROUP BY field1,field2...field</span><br><span class="line">[WITH ROLLUP]]</span><br><span class="line">[HAVING where_contition]</span><br></pre></td></tr></table></figure><blockquote><p>参数说明:</p><ul><li>fun_name 表示要做的聚合操作,也就是聚合函数,常用的有sum(求和),count(*)(记录数),max(最大值),MIN(最小值).</li><li>GROUP BY 关键字表示要进行分类聚合的字段,比如要按照部门分类统计员工数量,部门就应该写在group by后面.</li><li>WITH ROLLUP 是可选语法,表示是否对分类聚合后的结果进行再汇总</li><li>HAVING 关键字表示对分类后的结果在进行条件的过滤.</li></ul><p><strong>注意:</strong>having和where的区别在于having是对聚合后的结果进行过滤,而where是在聚合前就对记录进行过滤,如果逻辑允许,我们尽可能用where先过滤记录,这样因为结果集减小,将对聚合效率大大提高,再根据逻辑看是否用having进行再过滤.</p></blockquote><p>例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#要统计公司的总人数</span><br><span class="line">select count(1) from emp;</span><br><span class="line"></span><br><span class="line">#在此基础上,要统计各部门人数</span><br><span class="line">select dept,count(1) from emp group by deptno;</span><br><span class="line"></span><br><span class="line">#更细一点,既要统计各部门人数,又要统计总人数</span><br><span class="line">select deptno,count(1) from emp group by deptno with rollup;</span><br><span class="line"></span><br><span class="line">#统计人数大于1人的部门</span><br><span class="line">select deptno,count(1) from emp group by deptno having count(1)&gt;1;</span><br><span class="line"></span><br><span class="line">#统计员工的薪水总额,最高和最低薪水</span><br><span class="line">select sum(sal),max(sal),min(sal) from emp;</span><br></pre></td></tr></table></figure><h6 id="表连接"><a href="#表连接" class="headerlink" title="表连接"></a>表连接</h6><p><strong>需求:</strong>需要显示多个表中的字段</p><p><strong>分类:</strong></p><ol><li><p>内连接</p></li><li><p>外连接</p><p>两者区别:内链接仅选出俩张表互相匹配的记录,外连接会选出其他不匹配的记录.(常用内连接)</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#查询所有雇员的名字和所在部门的名字</span><br><span class="line">select ename,deptname from emp,dept where emp.deptno=dept.deptno;</span><br></pre></td></tr></table></figure><p>外连接又分为:</p><ul><li>左外连接:包含所有左边表中所有的记录,甚至右边表中没有和它匹配的记录.</li><li>右外连接:包含所有右边表中所有的记录,甚至左边表中没有和它匹配的记录.</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#左外连接</span><br><span class="line">select ename,deptname from emp left join dept on emp.deptno = dept.deptno;</span><br><span class="line">#右外连接</span><br><span class="line">select ename,deptname from dept right join emp on dept.deptno = emp.deptno;</span><br><span class="line">#两个的结果一样(两者可以互相转换)</span><br></pre></td></tr></table></figure><h6 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h6><p><strong>需求:</strong>该查询的条件是,另一个查询的结果.</p><p><strong>关键字:</strong>in ,not in ,= ,!= ,exists ,not exists等</p><p> 如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select * from emp where deptno in (select deptno from dept);</span><br><span class="line"></span><br><span class="line">#如果查询记录唯一,可以用=代替in</span><br><span class="line">select * from emp where deptno = (select deptno from dept);</span><br></pre></td></tr></table></figure><blockquote><p><strong>注:</strong></p><ul><li><p>表连接很多情况下用于优化子查询</p></li><li><p>MySQL4.1之前版本不支持子查询,需要用表连接来实现子查询.</p></li></ul></blockquote><h6 id="记录联合"><a href="#记录联合" class="headerlink" title="记录联合"></a>记录联合</h6><p><strong>需求:</strong>将两个查询结果合并到一个表显示.</p><p><strong>关键词:</strong>union ,union all</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM t1</span><br><span class="line">UNION ALL</span><br><span class="line">SELECT * FROM t2</span><br><span class="line">....</span><br><span class="line">UNION |UNION ALL</span><br><span class="line">SELECT * FROM tn;</span><br></pre></td></tr></table></figure><blockquote><p>union 和 union all的主要区别:</p><p>union all是吧结果集合并在一起</p><p>union 是将union all 后的结果进行一次distinct,去除重复记录后的结果.</p></blockquote><h4 id="DCL语句"><a href="#DCL语句" class="headerlink" title="DCL语句"></a>DCL语句</h4><blockquote><p><strong>作用:</strong>主要是DBA用来管理系统中的对象权限时使用.</p></blockquote><h2 id="第三章-MySQL支持的数据类型"><a href="#第三章-MySQL支持的数据类型" class="headerlink" title="第三章 MySQL支持的数据类型"></a>第三章 MySQL支持的数据类型</h2><h3 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h3><table><thead><tr><th align="center">整数类型</th><th align="center">字节</th><th align="center">最小值</th><th align="center">最大值</th></tr></thead><tbody><tr><td align="center">TINYINT</td><td align="center">1</td><td align="center">有符号 -128<br>无符号0</td><td align="center">有符号 127<br>无符号 255</td></tr><tr><td align="center">SMALLINT</td><td align="center">2</td><td align="center">有符号 -32768<br>无符号 0</td><td align="center">有符号 32767<br>无符号 65535</td></tr><tr><td align="center">MEDIUMINT</td><td align="center">3</td><td align="center">有符号 -8388608<br>无符号 0</td><td align="center">有符号 8388607<br>无符号 1677215</td></tr><tr><td align="center">INT,INTEGER</td><td align="center">4</td><td align="center">有符号 -2147483648<br>无符号 0</td><td align="center">有符号 2147483647<br>无符号 4294967295</td></tr><tr><td align="center">BIGINT</td><td align="center">8</td><td align="center">有符号 -9223372036854775808<br>无符号 0</td><td align="center">有符号 9223372036854775807<br>无符号 18446744073709551615</td></tr><tr><td align="center"><strong>浮点数类型</strong></td><td align="center"><strong>字节</strong></td><td align="center"><strong>最小值</strong></td><td align="center"><strong>最大值</strong></td></tr><tr><td align="center">FLOAT</td><td align="center">4</td><td align="center">土1.175494351E-38</td><td align="center">土3.402823466E+38</td></tr><tr><td align="center">DOUBLE</td><td align="center">8</td><td align="center">土2.225.738585072014E-308</td><td align="center">土1.7976931348623157E+308</td></tr><tr><td align="center"><strong>定点数类型</strong></td><td align="center"><strong>字节</strong></td><td align="center"><strong>描述</strong></td><td align="center"></td></tr><tr><td align="center">DEC(M,D)<br>DECIMAL(M,D)</td><td align="center">M+2</td><td align="center">最大值取值范围与DOUBLE相同,给定DECIMAL的有效取值范围由M和D决定</td><td align="center"></td></tr><tr><td align="center"><strong>位类型</strong></td><td align="center"><strong>字节</strong></td><td align="center"><strong>最小值</strong></td><td align="center"><strong>最大值</strong></td></tr><tr><td align="center">BIT(M)</td><td align="center">1~8</td><td align="center">BIT(1)</td><td align="center">BIT(64)</td></tr></tbody></table><blockquote><p>整数类型分为:</p><ul><li><p>tinyint</p></li><li><p>smallint</p></li><li><p>mediumint</p></li><li><p>int</p></li><li><p>bigint</p><p>如果超出类型范围就会发生”Out of range”的错误.</p></li></ul></blockquote><p>在MySQL中,整型数据还支持在类型名称后的小括号内指定显示宽度,如果不显示宽度默认为int(11),一般还配合zerofill使用(用0填充)</p><p>例:</p><blockquote><p>int(5)</p><p>表示数值宽度小于5时,在数字前面填满宽度.</p><p>…..int(5) zerpfill;</p><p>用0填满</p></blockquote><blockquote><p>所有整数类型都有一个可选属性UNSIGNED(无符号),如果字段里保存非负数或者需要较大上线的数值,可选此项,如果一个列被指定为zerofill,则MySQL自动为该列添加UNSIGNED属性.</p><p>整数类型还有一个属性:AUTO_INCREMENT.在需要产生唯一标识符或者顺序值时,可以利用该属性,该属性只用于整型.值一般从1开始,每行加1,在插入null时,系统会默认在该列中存入一行比上一行大一的值,一个表最多只能有一个AUTO_INCREMENT列,在设计表时,该列应该定义为NOT NULL,并且定义为PRIMARY KEY或UNIQUE键.</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create table AI(ID INT AUTO_INCREMENT NOT NULL,PRIMARY KEY);</span><br><span class="line">create table AI(ID INT AUTO_INCREMENT NOT NULL,UNIQUE(ID));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> mysql </tag>
            
            <tag> 深入浅出mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo食用指南(七)_报错填坑</title>
      <link href="/2019/06/05/hexo%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97(%E4%B8%83)_%E6%8A%A5%E9%94%99%E5%A1%AB%E5%9D%91/"/>
      <url>/2019/06/05/hexo%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97(%E4%B8%83)_%E6%8A%A5%E9%94%99%E5%A1%AB%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<center>我走过坑.....不,是黑洞.</center><a id="more"></a><h1 id="报错填坑"><a href="#报错填坑" class="headerlink" title="报错填坑"></a>报错填坑</h1><h2 id="出现-hexo-g-d-报错"><a href="#出现-hexo-g-d-报错" class="headerlink" title="出现 hexo g -d 报错"></a>出现 hexo g -d 报错</h2><p>在将博客推送到Github上的时候在git bash 下运行hexo g -d命令出现错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> fatal: HttpRequestException encountered.</span><br><span class="line">   ▒▒▒▒▒▒▒▒ʱ▒▒▒▒</span><br><span class="line">bash: /dev/tty: No such device or address</span><br><span class="line">error: failed to execute prompt script (exit code 1)</span><br><span class="line">fatal: could not read Username for &apos;https://github.com&apos;: No error</span><br><span class="line">FATAL Something&apos;s wrong. Maybe you can find the solution here: http://hexo.io/do                                                                     </span><br><span class="line">cs/troubleshooting.html</span><br><span class="line">Error: fatal: HttpRequestException encountered.</span><br><span class="line">           ʱ   </span><br><span class="line">bash: /dev/tty: No such device or address</span><br><span class="line">error: failed to execute prompt script (exit code 1)</span><br><span class="line">fatal: could not read Username for &apos;https://github.com&apos;: No error</span><br><span class="line">    at ChildProcess.&lt;anonymous&gt; (F:\blog\huahua462.github.io\node_modules\hexo-u                                                                    </span><br><span class="line"> til\lib\spawn.js:37:17)</span><br><span class="line">    at emitTwo (events.js:126:13)</span><br><span class="line">    at ChildProcess.emit (events.js:214:7)</span><br><span class="line">    at ChildProcess.cp.emit (F:\blog\huahua462.github.io\node_modules\cross-spaw                                                                     </span><br><span class="line">n\lib\enoent.js:40:29)</span><br><span class="line">    at maybeClose (internal/child_process.js:925:16)</span><br><span class="line">    at Process.ChildProcess._handle.onexit (internal/child_process.js:209:5)</span><br></pre></td></tr></table></figure><p>解决方案:<br>&emsp;首先在“你GitHub注册用户名.github.io”本地文件夹下有一个名为“_config.yml”的配置文件，这个称为站点配置文件，使用NotePad++打开并拉到文件最后，将：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git </span><br><span class="line">  repo: https://github.com/你GitHub注册用户名/你GitHub注册用户名.github.io.git </span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git </span><br><span class="line">  repo: git@github.com:你GitHub注册用户名/你GitHub注册用户名.github.io.git </span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>即可；</p><hr><h2 id="出现-error-deployer-not-found-git-或者-error-deployer-not-found-github-的错误"><a href="#出现-error-deployer-not-found-git-或者-error-deployer-not-found-github-的错误" class="headerlink" title="出现 error deployer not found:git 或者 error deployer not found:github 的错误"></a>出现 error deployer not found:git 或者 error deployer not found:github 的错误</h2><p>解决办法：执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><hr><h2 id="出现类似-FATAL-can-not-read-a-block-mapping-entry-a-multiline-key-may-not-be-an-implicit-key-at-line-70-column-1-…-错误"><a href="#出现类似-FATAL-can-not-read-a-block-mapping-entry-a-multiline-key-may-not-be-an-implicit-key-at-line-70-column-1-…-错误" class="headerlink" title="出现类似 FATAL can not read a block mapping entry; a multiline key may not be an implicit key at line 70, column 1: … 错误"></a>出现类似 FATAL can not read a block mapping entry; a multiline key may not be an implicit key at line 70, column 1: … 错误</h2><p> 解决办法：_config.yml中配置项的冒号后面要用空格隔开，再跟内容</p><hr><h2 id="中文乱码问题"><a href="#中文乱码问题" class="headerlink" title="中文乱码问题"></a>中文乱码问题</h2><p>解决办法：将文件的内容编码改为UTF8格式</p><hr><h2 id="‘hexo-sever’能够成功运行，但是localhost-4000无法访问"><a href="#‘hexo-sever’能够成功运行，但是localhost-4000无法访问" class="headerlink" title="‘hexo sever’能够成功运行，但是localhost:4000无法访问"></a>‘hexo sever’能够成功运行，但是localhost:4000无法访问</h2><p>解决办法：执行hexo s -p 5000，改用其他端口启动</p><hr>]]></content>
      
      
      <categories>
          
          <category> hexo食用指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo食用指南(六)_网站配置</title>
      <link href="/2019/06/05/hexo%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97(%E5%85%AD)_%E7%BD%91%E7%AB%99%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/06/05/hexo%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97(%E5%85%AD)_%E7%BD%91%E7%AB%99%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<center>给网站起个名儿吧!</center><a id="more"></a># 配一下相关信息* 网站配置文件的存储位置：hexo_blog/_config.yml。* 配置文件中，冒号后面一定要加空格。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line"># 网站信息</span><br><span class="line">#标题</span><br><span class="line">title: 但行好事,莫问前程.</span><br><span class="line">#副标题</span><br><span class="line">subtitle: 记录学习的技能和遇到的问题</span><br><span class="line">#网站描述</span><br><span class="line">description: 上课睡觉觉的个人博客</span><br><span class="line">#作者昵称</span><br><span class="line">author: 上课睡觉觉</span><br><span class="line">#网站语言，默认英语，设置简体汉语</span><br><span class="line">language: zh-CN</span><br><span class="line"></span><br><span class="line">#时区，默认电脑时区</span><br><span class="line">#timezone: </span><br><span class="line">timezone: Asia/Shanghai</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 网址设置</span><br><span class="line">#如果网站是放在子目录中，将url设置成&apos;http://yoursite.com/child&apos;，将root设置成&apos;/child/&apos;</span><br><span class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">#网址</span><br><span class="line">url: http://yoursite.com</span><br><span class="line">#网站根目录。如果网站是放在子目录中，将root设置成&apos;子目录名&apos;</span><br><span class="line">root: /</span><br><span class="line">#文章链接地址格式 。即文章存放的目录。</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 目录设置</span><br><span class="line">#资源文件夹，放在里面的文件会上传到github中</span><br><span class="line">source_dir: source</span><br><span class="line">#公共文件夹，存放生成的静态文件</span><br><span class="line">public_dir: public</span><br><span class="line">#标签文件夹，默认是tags。实际存放在source/tags中。</span><br><span class="line">tag_dir: tags</span><br><span class="line">rss_dir: rss</span><br><span class="line">#档案文件夹，默认是archives。</span><br><span class="line">archive_dir: archives</span><br><span class="line">#分类文件夹，默认是categories。实际存放在source/categories中。</span><br><span class="line">category_dir: categories</span><br><span class="line">#代码文件夹，默认是downloads/code</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">#国际化文件夹，默认跟language相同</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">#不需要渲染的文件夹或文件夹,放在[]中</span><br><span class="line"># 这两个文件是百度和google的站长验证文件，不能渲染，否则会改变内容，不能验证过</span><br><span class="line">skip_render: [baidu_verify_R9MZjdMkXT.html, google0f8fac7da2b48ef8.html, README.md, 模板.md]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 写作选项</span><br><span class="line"># 新建博文（帖子）的默认名称</span><br><span class="line"># File name of new posts</span><br><span class="line">new_post_name: :title.md </span><br><span class="line">#默认布局模板是post，而不是draft和page</span><br><span class="line">default_layout: post</span><br><span class="line">#是否将标题转换成标题形式（首字母大写）</span><br><span class="line">titlecase: false # Transform title into titlecase</span><br><span class="line">#在新标签页面中打开网页</span><br><span class="line">external_link: true # Open external links in new tab</span><br><span class="line">filename_case: 0</span><br><span class="line">#是否渲染草稿</span><br><span class="line">render_drafts: false</span><br><span class="line">#启动 Asset 文件夹</span><br><span class="line">post_asset_folder: false</span><br><span class="line">#把链接改为与根目录的相对位址</span><br><span class="line">relative_link: false</span><br><span class="line">#显示未来的文章</span><br><span class="line">future: true</span><br><span class="line">#代码块的设置</span><br><span class="line">highlight:</span><br><span class="line">  enable: true          #  使用代码高亮</span><br><span class="line">  line_number: true # 显示行号</span><br><span class="line">  auto_detect: true  # 自动检测语言</span><br><span class="line">  tab_replace:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 分类和标签</span><br><span class="line"># 默认分类</span><br><span class="line">default_category: uncategorized</span><br><span class="line">#分类别名</span><br><span class="line">category_map:</span><br><span class="line">#标签别名</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 日期和时间格式</span><br><span class="line">#Hexo 使用 Moment.js 来解析和显示时间。</span><br><span class="line">## You can customize the date format as defined in</span><br><span class="line">## http://momentjs.com/docs/#/displaying/format/</span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 分页配置</span><br><span class="line"># ---------------下面选项需要对应插件的支持---------------</span><br><span class="line"># npm install hexo-generator-index --save</span><br><span class="line"># npm install hexo-generator-archive --save</span><br><span class="line"># npm install hexo-generator-category --save</span><br><span class="line"># npm install hexo-generator-tag --save</span><br><span class="line">## Set per_page to 0 to disable pagination</span><br><span class="line">#每页显示的文章量 </span><br><span class="line">#per_page: 20</span><br><span class="line">#首页的分页设置</span><br><span class="line">index_generator:</span><br><span class="line">  per_page: 5</span><br><span class="line">#归档页的分页设置</span><br><span class="line">archive_generator:</span><br><span class="line">  per_page: 30</span><br><span class="line">  yearly: true</span><br><span class="line">  monthly: true</span><br><span class="line">#标签页的分页设置</span><br><span class="line">tag_generator:</span><br><span class="line">  per_page: 20</span><br><span class="line"></span><br><span class="line">#分页路径，在public中可以看到</span><br><span class="line">#pagination_dir: page</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Extensions 拓展插件配置</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">plugins: </span><br><span class="line">baidusitemap: </span><br><span class="line">  path: baidusitemap.xml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 配置RSS</span><br><span class="line">feed: </span><br><span class="line">  #feed 类型 (atom/rss2)</span><br><span class="line">  type: atom   </span><br><span class="line">  #rss 路径</span><br><span class="line">  path: atom.xml  </span><br><span class="line">  #在 rss 中最多生成的文章数(0显示所有)</span><br><span class="line">  limit: 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 自定义站点内容搜索</span><br><span class="line"># 需要先安装插件：</span><br><span class="line"># npm install hexo-generator-search --save</span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  # 如只想索引文章，可设置为post</span><br><span class="line">  field: all </span><br><span class="line"></span><br><span class="line"># 主题配置</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">#theme: false #禁用主题</span><br><span class="line">#theme: landscape</span><br><span class="line">theme: next</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 部署配置</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  #repo: https://github.com/xuezhisd/xuezhisd.github.io.git</span><br><span class="line">  repo: </span><br><span class="line">    # 部署到github</span><br><span class="line">    github: git@github.com:xuezhisd/xuezhisd.github.io.git,master</span><br><span class="line">    # 部署到coding.net。取消注释，可同时部署</span><br><span class="line">    #coding: git@git.coding.net:xuezhisd/blog.git,coding-pages</span><br><span class="line">  #type: baidu_url_submitter</span><br></pre></td></tr></table></figure><p>主题的配置文件<br>默认主题是landscape<br>hexo官方主题页面。从中选择喜欢的主题，下载并放到themes文件中。<br>我使用的主题是NexT。</p>]]></content>
      
      
      <categories>
          
          <category> hexo食用指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo食用指南(五)_nexT美化</title>
      <link href="/2019/06/05/hexo%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97(%E4%BA%94)_nexT%E7%BE%8E%E5%8C%96/"/>
      <url>/2019/06/05/hexo%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97(%E4%BA%94)_nexT%E7%BE%8E%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<center>我也要美美的博客!!!!</center><a id="more"></a><h1 id="next美化"><a href="#next美化" class="headerlink" title="next美化"></a>next美化</h1><h2 id="HexoNext主题如何设置社交侧边栏"><a href="#HexoNext主题如何设置社交侧边栏" class="headerlink" title="HexoNext主题如何设置社交侧边栏"></a>HexoNext主题如何设置社交侧边栏</h2><p>首先在主题配置文件_config.yml里找到social</p><p>一开始，social和下面的那些东西都是有#号的，想启用哪个就启用哪个，</p><p>|| 后面的就是在图标库里对应的图标名</p><p>以前我一设置侧边栏图标网站就崩溃不能上了，有一个主要的原因：</p><p>&emsp;<strong>social前面的#号必须去掉，注意，是social！！！</strong>  </p><p>至于那些yourname就是你在哪个社交软件的名称，也可以加上去别的社交账号.</p><h2 id="添加背景图"><a href="#添加背景图" class="headerlink" title="添加背景图"></a>添加背景图</h2><p>在 themes/*/source/css/_custom/custom.styl 中添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">body&#123;</span><br><span class="line">    background:url(/images/bg.jpg);</span><br><span class="line">    background-size:cover;</span><br><span class="line">    background-repeat:no-repeat;</span><br><span class="line">    background-attachment:fixed;</span><br><span class="line">    background-position:center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="网站标题栏背景颜色"><a href="#网站标题栏背景颜色" class="headerlink" title="网站标题栏背景颜色"></a>网站标题栏背景颜色</h2><p>打开 themes/*/source/css/_custom/custom.styl ,在里面写下如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.site-meta &#123;</span><br><span class="line">  background: $blue; //修改为自己喜欢的颜色</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现点击出现桃心效果"><a href="#实现点击出现桃心效果" class="headerlink" title="实现点击出现桃心效果"></a>实现点击出现桃心效果</h2><p>在/themes/*/source/js/src下新建文件click.js，接着把以下粘贴到clicklove.js文件中。</p><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &apos;&apos;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure><p>在\themes*\layout_layout.swig文件末尾添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/clicklove.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="在右上角或者左上角实现fork-me-on-github"><a href="#在右上角或者左上角实现fork-me-on-github" class="headerlink" title="在右上角或者左上角实现fork me on github"></a>在右上角或者左上角实现fork me on github</h2><p>选择样式<a href="https://blog.github.com/2008-12-19-github-ribbons/" target="_blank" rel="noopener">GitHub Ribbons</a>,</p><p>修改图片跳转链接,将&lt;a href=”<a href="https://github.com/you&quot;&gt;中的链接换为自己Github链接：" target="_blank" rel="noopener">https://github.com/you&quot;&gt;中的链接换为自己Github链接：</a></p><p>打开 themes/next/layout/_layout.swig 文件，把代码复制到<div class="headband"></div>下面。</p><h2 id="主页文章添加边框阴影效果"><a href="#主页文章添加边框阴影效果" class="headerlink" title="主页文章添加边框阴影效果"></a>主页文章添加边框阴影效果</h2><p>打开 themes/*/source/css/_custom/custom.styl ,向里面加代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 主页文章添加阴影效果</span><br><span class="line">.post &#123;</span><br><span class="line">   margin-top: 0px;</span><br><span class="line">   margin-bottom: 60px;</span><br><span class="line">   padding: 25px;</span><br><span class="line">   -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);</span><br><span class="line">   -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="显示当前浏览进度"><a href="#显示当前浏览进度" class="headerlink" title="显示当前浏览进度"></a>显示当前浏览进度</h2><p>修改themes/*/_config.yml，把 false 改为 true：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Back to top in sidebar</span><br><span class="line">b2t: true</span><br><span class="line"></span><br><span class="line"># Scroll percent label in b2t button</span><br><span class="line">scrollpercent: true</span><br></pre></td></tr></table></figure><h2 id="标签云"><a href="#标签云" class="headerlink" title="标签云"></a>标签云</h2><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p>进入到 hexo 的根目录，在 package.json 中添加依赖: “hexo-tag-cloud”: “2.0.*” 操作如下：</p><p>使用命令行进行安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-cloud@^2.0.* --save</span><br></pre></td></tr></table></figure><h3 id="配置插件"><a href="#配置插件" class="headerlink" title="配置插件"></a>配置插件</h3><p>插件的配置需要对应的环境，可以在主题文件夹里找一下，有没有对应的渲染文件，然后根据渲染文件的类型，选择对应的插件配置方法。</p><p>swig 用户 (Next主题在列)<br>在主题文件夹找到文件 theme/next/layout/_macro/sidebar.swig, 然后添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if site.tags.length &gt; 1 %&#125;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot; src=&quot;/js/tagcloud.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot; src=&quot;/js/tagcanvas.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;div class=&quot;widget-wrap&quot;&gt;</span><br><span class="line">    &lt;h3 class=&quot;widget-title&quot;&gt;Tag Cloud&lt;/h3&gt;</span><br><span class="line">    &lt;div id=&quot;myCanvasContainer&quot; class=&quot;widget tagcloud&quot;&gt;</span><br><span class="line">        &lt;canvas width=&quot;250&quot; height=&quot;250&quot; id=&quot;resCanvas&quot; style=&quot;width=100%&quot;&gt;</span><br><span class="line">            &#123;&#123; list_tags() &#125;&#125;</span><br><span class="line">        &lt;/canvas&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>如图:<br><img src="https://i.loli.net/2019/06/06/5cf884209152a85270.png" alt="QQ图片20190606111000.png"></p><p>对于ejs的用户 (默认主题landscape在列)<br>在主题文件夹找到文件hexo/themes/landscape/layout/_widget/tagcloud.ejs,将这个文件修改如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (site.tags.length) &#123; %&gt;</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot; src=&quot;/js/tagcloud.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot; src=&quot;/js/tagcanvas.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;div class=&quot;widget-wrap&quot;&gt;</span><br><span class="line">        &lt;h3 class=&quot;widget-title&quot;&gt;Tag Cloud&lt;/h3&gt;</span><br><span class="line">        &lt;div id=&quot;myCanvasContainer&quot; class=&quot;widget tagcloud&quot;&gt;</span><br><span class="line">            &lt;canvas width=&quot;250&quot; height=&quot;250&quot; id=&quot;resCanvas&quot; style=&quot;width=100%&quot;&gt;</span><br><span class="line">                &lt;%- tagcloud() %&gt;</span><br><span class="line">            &lt;/canvas&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><h3 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h3><p>在博客根目录，找到 _config.yml配置文件然后在最后添加如下的配置项，可以自定义标签云的字体和颜色，还有突出高亮:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># hexo-tag-cloud</span><br><span class="line">tag_cloud:</span><br><span class="line">    textFont: Trebuchet MS, Helvetica</span><br><span class="line">    textColor: &apos;#333&apos;</span><br><span class="line">    textHeight: 25</span><br><span class="line">    outlineColor: &apos;#E2E1D1&apos;</span><br><span class="line">    maxSpeed: 0.1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo食用指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo食用指南(四)_优化</title>
      <link href="/2019/06/05/hexo%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97(%E5%9B%9B)_%E4%BC%98%E5%8C%96/"/>
      <url>/2019/06/05/hexo%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97(%E5%9B%9B)_%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<center><p>博客不好看…..怎么办怎么办?</p></center><a id="more"></a><h1 id="hexo优化"><a href="#hexo优化" class="headerlink" title="hexo优化"></a>hexo优化</h1><h2 id="文章的置顶功能的实现"><a href="#文章的置顶功能的实现" class="headerlink" title="文章的置顶功能的实现"></a>文章的置顶功能的实现</h2><h3 id="实现置顶"><a href="#实现置顶" class="headerlink" title="实现置顶"></a>实现置顶</h3><p>用以下命令安装插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm uninstall hexo-generator-index --save</span><br><span class="line">$ npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure><p>然后在需要置顶的文章的Front-matter中加上top: true即可。比如下面这篇文章：</p><pre><code>---  title: hexo+GitHub博客搭建实战  date: 2017-09-08 12:00:25categories: 博客搭建系列top: true---</code></pre><p>到目前为止，置顶功能已经可以实现了。</p><p>不过置顶的文章显示在最上面之后，如果没有明确的置顶标志，是不是感觉有点怪怪的呢？</p><h3 id="设置置顶标志"><a href="#设置置顶标志" class="headerlink" title="设置置顶标志"></a>设置置顶标志</h3><p>打开：/blog/themes/next/layout/_macro 目录下的post.swig文件，定位到&lt;div class=”post-meta”&gt;标签下，插入如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if post.top %&#125;</span><br><span class="line">  &lt;i class=&quot;fa fa-thumb-tack&quot;&gt;&lt;/i&gt;</span><br><span class="line">  &lt;font color=7D26CD&gt;置顶&lt;/font&gt;</span><br><span class="line">  &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h2 id="文章摘要设置"><a href="#文章摘要设置" class="headerlink" title="文章摘要设置"></a>文章摘要设置</h2><p>打开主题配置文件 _config.yml 文件，找到如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Automatically Excerpt. Not recommend.</span><br><span class="line"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: false</span><br><span class="line">  length: 150</span><br></pre></td></tr></table></figure><p>把这里的false改为true就可以了在首页启动显示文章预览了，length是显示预览的长度。</p><p>这里我们可以通过在文章使用<!-- more -->标志来精确控制文章的摘要预览，比如这篇文章就是在这个段落的末尾添加了该标志，所以本文在首页的预览就会显示到这个段落为止。<br><strong>强烈推荐</strong>使用该<!-- more -->标志来控制文章的摘要预览，因为这种方式可以让摘要也按照css文件中的样式来渲染。如果使用了自动摘要的功能，你会发现文章摘要是一大团没有样式的文本，很是难看。</p><h2 id="文章加密访问"><a href="#文章加密访问" class="headerlink" title="文章加密访问"></a>文章加密访问</h2><p>打开 themes/*/layout/_partials/head.swig文件,在 之前插入代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    (function()&#123;</span><br><span class="line">        if(&apos;&#123;&#123; page.password &#125;&#125;&apos;)&#123;</span><br><span class="line">            if (prompt(&apos;请输入密码&apos;) !== &apos;&#123;&#123; page.password &#125;&#125;&apos;)&#123;</span><br><span class="line">                alert(&apos;密码错误&apos;);</span><br><span class="line">                history.back();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>写文章时加上password: *：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 2018</span><br><span class="line">date: 2018-10-25 16:10:03</span><br><span class="line">password: 123456</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="静态资源压缩"><a href="#静态资源压缩" class="headerlink" title="静态资源压缩"></a>静态资源压缩</h2><p>在站点目录下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install gulp -g</span><br></pre></td></tr></table></figure><p>安装gulp插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp-minify-css --save</span><br><span class="line">npm install gulp-uglify --save</span><br><span class="line">npm install gulp-htmlmin --save</span><br><span class="line">npm install gulp-htmlclean --save</span><br><span class="line">npm install gulp-imagemin --save</span><br></pre></td></tr></table></figure><p>在 Hexo 站点下新建 gulpfile.js文件，文件内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">var gulp = require(&apos;gulp&apos;);</span><br><span class="line"></span><br><span class="line">//Plugins模块获取</span><br><span class="line">var minifycss = require(&apos;gulp-minify-css&apos;);</span><br><span class="line">var uglify = require(&apos;gulp-uglify&apos;);</span><br><span class="line">var htmlmin = require(&apos;gulp-htmlmin&apos;);</span><br><span class="line">var htmlclean = require(&apos;gulp-htmlclean&apos;);</span><br><span class="line">//压缩css</span><br><span class="line">gulp.task(&apos;minify-css&apos;, function () &#123;</span><br><span class="line">return gulp.src(&apos;./public/**/*.css&apos;)</span><br><span class="line">.pipe(minifycss())</span><br><span class="line">.pipe(gulp.dest(&apos;./public&apos;));</span><br><span class="line">&#125;);</span><br><span class="line">//压缩html</span><br><span class="line">gulp.task(&apos;minify-html&apos;, function () &#123;</span><br><span class="line">return gulp.src(&apos;./public/**/*.html&apos;)</span><br><span class="line">.pipe(htmlclean())</span><br><span class="line">.pipe(htmlmin(&#123;</span><br><span class="line">removeComments: true,</span><br><span class="line">minifyJS: true,</span><br><span class="line">minifyCSS: true,</span><br><span class="line">minifyURLs: true,</span><br><span class="line">&#125;))</span><br><span class="line"></span><br><span class="line">.pipe(gulp.dest(&apos;./public&apos;))</span><br><span class="line">&#125;);</span><br><span class="line">//压缩js 不压缩min.js</span><br><span class="line">gulp.task(&apos;minify-js&apos;, function () &#123;</span><br><span class="line">return gulp.src([&apos;./public/**/*.js&apos;, &apos;!./public/**/*.min.js&apos;])</span><br><span class="line">.pipe(uglify())</span><br><span class="line">.pipe(gulp.dest(&apos;./public&apos;));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">//4.0以前的写法 </span><br><span class="line">//gulp.task(&apos;default&apos;, [</span><br><span class="line">  //  &apos;minify-html&apos;, &apos;minify-css&apos;, &apos;minify-js&apos;</span><br><span class="line">//]);</span><br><span class="line">//4.0以后的写法</span><br><span class="line">// 执行 gulp 命令时执行的任务</span><br><span class="line">gulp.task(&apos;default&apos;, gulp.parallel(&apos;minify-html&apos;, &apos;minify-css&apos;, &apos;minify-js&apos;, function() &#123;</span><br><span class="line">  // Do something after a, b, and c are finished.</span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure><p>只需要每次在执行 generate 命令后执行 gulp 就可以实现对静态资源的压缩，压缩完成后执行 deploy 命令同步到服务器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">gulp</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>好像有点问题，不过不影响使用</p><h2 id="创建分类页"><a href="#创建分类页" class="headerlink" title="创建分类页"></a>创建分类页</h2><p>在终端窗口下，定位到 Hexo 站点目录下，新建：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &lt;站点目录&gt;  </span><br><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://blog.csdn.net/java_1996/article/details/86499625" target="_blank" rel="noopener">https://blog.csdn.net/java_1996/article/details/86499625</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo食用指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo食用指南(三)_本地博客的转移</title>
      <link href="/2019/06/05/hexo%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97(%E4%B8%89)_%E6%9C%AC%E5%9C%B0%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BD%AC%E7%A7%BB/"/>
      <url>/2019/06/05/hexo%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97(%E4%B8%89)_%E6%9C%AC%E5%9C%B0%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BD%AC%E7%A7%BB/</url>
      
        <content type="html"><![CDATA[<center>C盘放不下怎么办.....QAQ</center><a id="more"></a># 本地博客的转移<p>怎么转移本地的博客呢?</p><h2 id="1-赋值配置文件"><a href="#1-赋值配置文件" class="headerlink" title="1.赋值配置文件"></a>1.赋值配置文件</h2><p>将原来的配置文件进行备份，只需要将文件夹 source、themes和配置文件_config.yml备份即可。</p><h2 id="2-安装Node-js"><a href="#2-安装Node-js" class="headerlink" title="2.安装Node.js"></a>2.安装Node.js</h2><p>&emsp;这个……</p><p>&emsp;&emsp;百度一下,你就知道</p><h2 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3. 安装hexo"></a>3. 安装hexo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure><h2 id="4-新建文件夹，cd进入"><a href="#4-新建文件夹，cd进入" class="headerlink" title="4. 新建文件夹，cd进入"></a>4. 新建文件夹，cd进入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>使用hexo s查看是否能使用</p><h2 id="5-将备份的文件覆盖到现在的文件夹"><a href="#5-将备份的文件覆盖到现在的文件夹" class="headerlink" title="5. 将备份的文件覆盖到现在的文件夹"></a>5. 将备份的文件覆盖到现在的文件夹</h2><p>现在使用hexo s查看是否已经成功。</p><p>此时，所有工作已经完成。</p>]]></content>
      
      
      <categories>
          
          <category> hexo食用指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo食用指南(二)_分类和标签</title>
      <link href="/2019/06/05/hexo%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97(%E4%BA%8C)_%E5%88%86%E7%B1%BB%E5%92%8C%E6%A0%87%E7%AD%BE/"/>
      <url>/2019/06/05/hexo%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97(%E4%BA%8C)_%E5%88%86%E7%B1%BB%E5%92%8C%E6%A0%87%E7%AD%BE/</url>
      
        <content type="html"><![CDATA[<center><p>看完”markdown食用指南”(也可能没看),不知道各位会不会写博文了呢? </p><p>有人说,我写了好多但是该怎么分类呢?  </p><p>接下来我就写写如何分类和贴标签~</p></center><a id="more"></a><br><br># 分类和标签<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="创建”分类”选项"><a href="#创建”分类”选项" class="headerlink" title="创建”分类”选项"></a>创建”分类”选项</h3><h4 id="生成“分类”页并添加tpye属性"><a href="#生成“分类”页并添加tpye属性" class="headerlink" title="生成“分类”页并添加tpye属性"></a>生成“分类”页并添加tpye属性</h4><p>打开命令行，进入<strong>博客</strong>(之前提到的blog)所在文件夹。执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>成果后会提示:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Created: ~/Documents/blog/source/categories/index.md</span><br></pre></td></tr></table></figure><p>根据上面的路径，找到index.md这个文件，打开后默认内容是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章分类</span><br><span class="line">date: 2017-05-27 13:47:40</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>添加type: “categories”到内容中，添加后是这样的:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章分类</span><br><span class="line">date: 2017-05-27 13:47:40</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>保存并关闭文件。</p><h4 id="给文章添加“categories”属性"><a href="#给文章添加“categories”属性" class="headerlink" title="给文章添加“categories”属性"></a>给文章添加“categories”属性</h4><p>打开需要添加分类的文章，为其添加categories属性。下方的categories: hexo食用指南表示添加这篇文章到“hexo食用指南”这个分类。注意：hexo一篇文章只能属于一个分类，也就是说如果在“- hexo食用指南”下方添加“-xxx”，hexo不会产生两个分类，而是把分类嵌套（即该文章属于 “- hexo食用指南”下的 “-xxx ”分类）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo食用指南(二)</span><br><span class="line">date: 2017-05-26 12:12:57</span><br><span class="line">categories: </span><br><span class="line">- hexo食用指南</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>至此，成功给文章添加分类，点击首页的“分类”可以看到该分类下的所有文章。当然，只有添加了categories: xxx的文章才会被收录到首页的“分类”中。</p><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><h3 id="创建“标签”选项"><a href="#创建“标签”选项" class="headerlink" title="创建“标签”选项"></a>创建“标签”选项</h3><h4 id="生成“标签”页并添加tpye属性"><a href="#生成“标签”页并添加tpye属性" class="headerlink" title="生成“标签”页并添加tpye属性"></a>生成“标签”页并添加tpye属性</h4><p>打开命令行，进入<strong>博客</strong>(之前提到的blog)所在文件夹。执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>成果后会提示:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Created: ~/Documents/blog/source/tags/index.md</span><br></pre></td></tr></table></figure><p>根据上面的路径，找到index.md这个文件，打开后默认内容是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2017-05-27 14:22:08</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>添加type: “tags”到内容中，添加后是这样的:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章分类</span><br><span class="line">date: 2017-05-27 13:47:40</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>保存并关闭文件。</p><h4 id="给文章添加“tags”属性"><a href="#给文章添加“tags”属性" class="headerlink" title="给文章添加“tags”属性"></a>给文章添加“tags”属性</h4><p>打开需要添加标签的文章，为其添加tags属性。<br>下方的tags:  </p><ul><li>hexo</li><li>教程<br>就是这篇文章的标签了</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo食用指南(二)</span><br><span class="line">date: 2017-05-26 12:12:57</span><br><span class="line">categories: </span><br><span class="line">- hexo食用指南</span><br><span class="line">tags:</span><br><span class="line">- hexo</span><br><span class="line">- 教程 </span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>至此，成功给文章添加分类，点击首页的“标签”可以看到该标签下的所有文章。当然，只有添加了tags: xxx的文章才会被收录到首页的“标签”中。</p><p>细心的朋友可能已经发现，这两个的设置几乎一模一样！是的，没错，思路都是一样的。所以我们可以打开scaffolds/post.md文件，在tages:上面加入categories:,保存后，之后执行hexo new 文章名命令生成的文件，页面里就有categories:项了</p><p>scaffolds目录下，是新建页面的模板，执行新建命令时，是根据这里的模板页来完成的，所以可以在这里根据你自己的需求添加一些默认值。</p>]]></content>
      
      
      <categories>
          
          <category> hexo食用指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown食用指南</title>
      <link href="/2019/06/05/markdown_markdown%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97/"/>
      <url>/2019/06/05/markdown_markdown%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<center><p>看完”hexo食用指南(一)”的朋友一定满头问号.</p><p>.md文件是个什么鬼东西?怎么打开?怎么写?</p><p>本片就教大家怎么写.md文件</p><p>(PS:会写的就可跳过这篇啦!)</p></center><a id="more"></a><h1 id="Markdown的今世前生以及食用指南"><a href="#Markdown的今世前生以及食用指南" class="headerlink" title="Markdown的今世前生以及食用指南"></a>Markdown的今世前生以及食用指南</h1><h2 id="什么是Markdown"><a href="#什么是Markdown" class="headerlink" title="什么是Markdown?"></a>什么是Markdown?</h2><p>Markdwon 是一种轻量级 标记语言，它以纯文本形式（易读、易写、易更改）编写文档，并最终以HTLM格式发布。Markdown也可以理解为将以 MARKDOWN语法编写的语言转换成HTML内容的工具。</p><p>Emmmm,好官方</p><p>简单的来说就是,操作简单的word!(大概可以这么理解吧~)</p><hr><h2 id="那它有什么优缺点呢"><a href="#那它有什么优缺点呢" class="headerlink" title="那它有什么优缺点呢?"></a>那它有什么优缺点呢?</h2><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>1.它是易读（看起来舒服😌）、易写（语法简单）、易更改（纯文本）。处处体现着极简主义的影子。</p><p>2.兼容HTML,可以转换为HTML格式发布。</p><p>3.跨平台使用。</p><p>4.越来越多的网站支持Markdown.</p><p>5.更方便清晰的组织你的电子邮件。（Markdown-here,Airmail）。</p><p>6.摆脱Word,txt！！！</p><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><p>1、需要记一些语法（当然，是很简单。五分钟学会）。</p><p>2、有些平台不支持Markdown编辑模式。</p><hr><h2 id="那么Markdown是谁创造的呢"><a href="#那么Markdown是谁创造的呢" class="headerlink" title="那么Markdown是谁创造的呢?"></a>那么Markdown是谁创造的呢?</h2><p>它是由 <em>Aaron Swartz</em> 和 <em>John Gruber</em> 共同设计的.</p><p><em>Aaron Swartz</em> 就是那位（2013年1月11日）自杀，有着开挂一般人生经历的程序员。</p><p>维基百科对他的介绍是：软件工程师、作家、政治组织者、互联网活动家、维基百科人。</p><p>他有着足以让你跪拜的人生经历:</p><pre><code>14岁参与RSS 1.0规格标准制订。2004年入读斯坦福大学，之后退学。2005年创建 Infogami,之后与Reddit合并成为其合伙人。2010年创立示进会（Demand Preogress）,积极参与禁止网络盗版法案（SOPA）活动，最终该提案被撤回。2011年7月19日,因被控从MIT和JSTOR下载480万篇学术论文并以免费形式上传于网络被捕。2013年1月自杀身亡。</code></pre><p>(膜拜前辈,可惜…)</p><hr><p><strong>书归正传</strong></p><h2 id="接下来我们讲讲Markdown的规则"><a href="#接下来我们讲讲Markdown的规则" class="headerlink" title="接下来我们讲讲Markdown的规则:"></a>接下来我们讲讲Markdown的规则:</h2><hr><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>markdown以#来设置标题,并且支持6级标题,#与标题之间用空格隔开,如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><p>写好之后就是这个样子:</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><hr><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><h4 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h4><p>要加粗的文字左右分别用两个*号包起来,如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">**加粗**</span><br></pre></td></tr></table></figure><p>结果:<br><strong>加粗</strong></p><h4 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h4><p>要倾斜的文字左右分别用一个*号包起来,如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*倾斜*</span><br></pre></td></tr></table></figure><p>结果:<em>倾斜</em></p><h4 id="斜体加粗"><a href="#斜体加粗" class="headerlink" title="斜体加粗"></a>斜体加粗</h4><p>要倾斜和加粗的文字左右分别用三个*号包起来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">***斜体加粗***</span><br></pre></td></tr></table></figure><p>结果:<strong><em>斜体加粗</em></strong></p><h4 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h4><p>要加删除线的文字左右分别用两个~~号包起来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~斜体加粗~~</span><br></pre></td></tr></table></figure><p>结果:<del>斜体加粗</del></p><hr><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;<br>n个…</p><p>貌似可以一直加下去，但没神马卵用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;这是引用的内容</span><br><span class="line">&gt;&gt;这是引用的内容</span><br><span class="line">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容</span><br></pre></td></tr></table></figure><p>显示出来:</p><blockquote><p>这是引用的内容</p><blockquote><p>这是引用的内容</p><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>这是引用的内容</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><p>Emmmmm,层层叠叠</p><hr><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><p>三个或者三个以上的 - 或者 * 都可以。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">----</span><br><span class="line">***</span><br><span class="line">*****</span><br></pre></td></tr></table></figure><p>这是分割线:</p><hr><hr><hr><hr><p>————–我是区别分割线的分割线—————————————————–</p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>语法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">![图片alt](图片地址 &apos;&apos;图片title&apos;&apos;)</span><br><span class="line"></span><br><span class="line">图片alt就是显示在图片下面的文字，相当于对图片内容的解释。</span><br><span class="line">图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加</span><br></pre></td></tr></table></figure><p>显示出来……有点大<br><img src="/image/headPic.png" alt="图片" title="看什么看,讨厌(ノω&lt;。)ノ))☆.。"></p><hr><h3 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h3><p>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用&lt;&gt;包起来， Markdown 就会自动把它转成链接。也可以直接写，也是可以显示成链接形式的 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;http://www.bilibili.com&gt;</span><br></pre></td></tr></table></figure><p>效果:</p><p><a href="http://www.bilibili.com" target="_blank" rel="noopener">http://www.bilibili.com</a></p><h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><p>语法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[超链接名](超链接地址 &quot;超链接title&quot;)</span><br><span class="line">title可加可不加</span><br></pre></td></tr></table></figure><p>举个栗子:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[百度一下](http://www.baidu.com)</span><br></pre></td></tr></table></figure><p>效果:</p><p><a href="http://www.baidu.com" target="_blank" rel="noopener">百度一下</a></p><hr><h3 id="超链列表"><a href="#超链列表" class="headerlink" title="超链列表"></a>超链列表</h3><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><p>语法：<br>无序列表用 - + * 任何一种都可以</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- 列表内容</span><br><span class="line">+ 列表内容</span><br><span class="line">* 列表内容</span><br><span class="line"></span><br><span class="line">注意：- + * 跟内容之间都要有一个空格</span><br></pre></td></tr></table></figure><p>效果如下:</p><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><p>语法：<br>数字加点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 列表内容</span><br><span class="line">2. 列表内容</span><br><span class="line">3. 列表内容</span><br><span class="line"></span><br><span class="line">注意：序号跟内容之间要有空格</span><br></pre></td></tr></table></figure><p>效果如下:</p><ol><li>列表内容</li><li>列表内容</li><li>列表内容</li></ol><h4 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h4><p><strong>上一级和下一级之间敲三个空格即可</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">* 一级无序列表内容</span><br><span class="line">   * 二级无序列表内容</span><br><span class="line">   * 二级无序列表内容</span><br><span class="line">   * 二级无序列表内容</span><br><span class="line">*一级无序列表内容</span><br><span class="line">   1. 二级有序列表内容</span><br><span class="line">   2. 二级有序列表内容</span><br><span class="line">   3. 二级有序列表内容</span><br></pre></td></tr></table></figure><p>效果如下:</p><ul><li>一级无序列表内容<ul><li>二级无序列表内容</li><li>二级无序列表内容</li><li>二级无序列表内容</li></ul></li><li>一级无序列表内容<ol><li>二级有序列表内容</li><li>二级有序列表内容</li><li>二级有序列表内容</li></ol></li></ul><hr><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">表头|表头|表头</span><br><span class="line">-|:-:|-:</span><br><span class="line">内容|内容|内容</span><br><span class="line">内容|内容|内容</span><br><span class="line"></span><br><span class="line">第二行分割表头和内容。</span><br><span class="line">- 有一个就行，为了对齐，多加了几个</span><br><span class="line">文字默认居左</span><br><span class="line">-两边加：表示文字居中</span><br><span class="line">-右边加：表示文字居右</span><br><span class="line">注：原生的语法两边都要用 | 包起来。此处省略</span><br></pre></td></tr></table></figure><p>例如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">姓名|技能|排行</span><br><span class="line">-|:-:|-:</span><br><span class="line">刘备|哭|大哥</span><br><span class="line">关羽|打|二哥</span><br><span class="line">张飞|骂|三弟</span><br></pre></td></tr></table></figure><p>效果如下:</p><table><thead><tr><th>姓名</th><th align="center">技能</th><th align="right">排行</th></tr></thead><tbody><tr><td>刘备</td><td align="center">哭</td><td align="right">大哥</td></tr><tr><td>关羽</td><td align="center">打</td><td align="right">二哥</td></tr><tr><td>张飞</td><td align="center">骂</td><td align="right">三弟</td></tr></tbody></table><blockquote><p><strong>注:表格和正文之间要空两行,否则表格会显示异常</strong></p></blockquote><hr><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>语法：</p><h4 id="单行代码："><a href="#单行代码：" class="headerlink" title="单行代码："></a>单行代码：</h4><p>代码之间分别用一个反引号包起来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`单行代码`</span><br></pre></td></tr></table></figure><p>效果:</p><p><code>单行代码</code></p><h4 id="代码块："><a href="#代码块：" class="headerlink" title="代码块："></a>代码块：</h4><p>代码之间分别用三个反引号包起来，且两边的反引号单独占一行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(```)</span><br><span class="line">     function fun()&#123;</span><br><span class="line">         echo &quot;这是一句非常牛逼的代码&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    fun();</span><br><span class="line">(```)</span><br><span class="line">    没有括号</span><br></pre></td></tr></table></figure><p>效果:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function fun()&#123;</span><br><span class="line">        echo &quot;这是一句非常牛逼的代码&quot;;</span><br><span class="line">   &#125;</span><br><span class="line">   fun();</span><br></pre></td></tr></table></figure><hr><h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><p>这是个坑,虽然markdown本身支持流程图,但是hexo好像并不愿意,所以我们需要先安装一个插件</p><p><code>npm install --save hexo-filter-flowchart</code></p><p>安装好之后就可以食用了!</p><p>首先我们需要了解一些基础的东西:</p><p><strong>操作模块语法:</strong></p><table><thead><tr><th align="center">操作模块</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">start</td><td align="center">开始</td></tr><tr><td align="center">end</td><td align="center">结束</td></tr><tr><td align="center">opration</td><td align="center">普通操作块</td></tr><tr><td align="center">condition</td><td align="center">判断块</td></tr><tr><td align="center">subroutine</td><td align="center">子任务块</td></tr><tr><td align="center">inputoutput</td><td align="center">输入输出块</td></tr></tbody></table><p><strong>判断和位置控制</strong></p><p><strong>流程控制</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">st-&gt;op1-&gt;e</span><br></pre></td></tr></table></figure><p>-&gt; 作为控制流程的操作符，就是指向下一步要操作的。</p><p>每一条都算是一条流程</p><p>你也可以断开写，怎么方便怎么来，如：下面两个是一样的。</p><p>分着写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">st-&gt;op1</span><br><span class="line">op1-&gt;e</span><br></pre></td></tr></table></figure><p>合着写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">st-&gt;op1-&gt;e</span><br></pre></td></tr></table></figure><p><strong>判断</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cond(yes)-&gt;io-&gt;e</span><br></pre></td></tr></table></figure><p>yes的时候到io，再到e</p><p><strong>位置指定</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cond(no)-&gt;sub1(right)-&gt;op1</span><br></pre></td></tr></table></figure><p>no的时候到到 sub1，再从sub1的右侧到op1<br>还可以这样 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cond1(no,right)</span><br></pre></td></tr></table></figure><p><strong>框架</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&apos;&apos;&apos;flow</span><br><span class="line">    内容</span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line">注:为了显示```换成&apos;&apos;&apos;,用的时候换回去</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&apos;&apos;&apos;flow</span><br><span class="line">//定义部分</span><br><span class="line">st 是变量名， start 是指操作模块名，冒号后面就是内容了。需要注意的是，冒号后要加空格才能识别</span><br><span class="line"></span><br><span class="line">st=&gt;start: 开始</span><br><span class="line">e=&gt;end: 结束</span><br><span class="line">op=&gt;operation: 我的操作</span><br><span class="line">cond=&gt;condition: 确认？</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br><span class="line">&apos;&apos;&apos;</span><br></pre></td></tr></table></figure><p>效果:</p><div id="flowchart-0" class="flow-chart"></div><hr><h3 id="假如你还会HTML"><a href="#假如你还会HTML" class="headerlink" title="假如你还会HTML"></a>假如你还会HTML</h3><p>markdown支持内嵌html代码,你可以通过html代码来修饰你的文章~</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;center&gt;居中&lt;/center&gt;  </span><br><span class="line"></span><br><span class="line">没有空格  </span><br><span class="line">&amp;ensp;半角空格  </span><br><span class="line">&amp;ensp;&amp;ensp;半角空格两个  </span><br><span class="line">&amp;emsp;全角空格  </span><br><span class="line">&amp;emsp;&amp;emsp;全角空格两个，以后就是用这个做为缩进</span><br><span class="line">&lt;/br&gt;  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;font face=&quot;华文行楷&quot;&gt;华文行楷&lt;/font&gt;  </span><br><span class="line">&lt;center&gt;&lt;font face=&quot;华文行楷&quot;&gt;华文行楷居中&lt;/font&gt;&lt;/center&gt;  </span><br><span class="line">&lt;font Size=1&gt;我是几号字来着1&lt;/font&gt;</span><br></pre></td></tr></table></figure><p>效果:</p><center>居中</center>  <p>没有空格<br>&ensp;半角空格<br>&ensp;&ensp;半角空格两个<br>&emsp;全角空格<br>&emsp;&emsp;全角空格两个，以后就是用这个做为缩进<br><br></p><p><font face="黑体">我是华文彩云</font></p><p><font color="#0099ff" size="3" face="黑体">color=#0099ff size=72 face=”黑体”</font></p><center><font face="华文行楷">华文行楷居中</font></center>  <font size="1">我是几号字来着1</font>  <hr><h3 id="常用技巧"><a href="#常用技巧" class="headerlink" title="常用技巧"></a>常用技巧</h3><h4 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h4><p>方法1: 连续两个以上空格+回车<br>方法2：使用html语言换行标签：</p><h4 id="特殊符号"><a href="#特殊符号" class="headerlink" title="特殊符号"></a>特殊符号</h4><p>1）对于 Markdown 中的语法符号，前面加反斜线\即可显示符号本身。</p><h4 id="锚点-不能用"><a href="#锚点-不能用" class="headerlink" title="锚点(不能用)"></a>锚点(不能用)</h4><p>锚点其实就是页内超链接。比如我这里写下一个锚点，点击回到目录，就能跳转到目录。 在目录中点击这一节，就能跳过来。<br>语法说明： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">目录&#123;#index&#125;</span><br><span class="line"></span><br><span class="line">在你准备跳转到的指定标题后插入锚点&#123;#标记&#125;，然后在文档的其它地方写上连接到锚点的链接。</span><br><span class="line"></span><br><span class="line">跳转到[目录](#index)</span><br><span class="line"></span><br><span class="line">由于&#123;#是保留字段,所以不能用</span><br></pre></td></tr></table></figure><h4 id="注脚-不能用"><a href="#注脚-不能用" class="headerlink" title="注脚(不能用)"></a>注脚(不能用)</h4><p>在需要添加注脚的文字后加上脚注名字[^注脚名字],称为加注。 然后在文本的任意位置(一般在最后)添加脚注，脚注前必须有对应的脚注名字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">文章作者[^1]</span><br><span class="line">[^1]:上课睡觉觉</span><br></pre></td></tr></table></figure><h4 id="背景色"><a href="#背景色" class="headerlink" title="背景色"></a>背景色</h4><p>Markdown本身不支持背景色设置，需要采用内置html的方式实现：借助 table, tr, td 等表格标签的 bgcolor 属性来实现背景色的功能。<br>举例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=orange&gt;背景色是：orange&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</span><br></pre></td></tr></table></figure><table><tr><td bgcolor="orange">背景色是：orange</td></tr></table><script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">//定义部分st 是变量名， start 是指操作模块名，冒号后面就是内容了。需要注意的是，冒号后要加空格才能识别st=>start: 开始e=>end: 结束op=>operation: 我的操作cond=>condition: 确认？st->op->condcond(yes)->econd(no)->op</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script>]]></content>
      
      
      <categories>
          
          <category> markdown食用指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> markdown </tag>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo食用指南(一)_新建文章</title>
      <link href="/2019/06/05/hexo%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97(%E4%B8%80)_%E6%96%B0%E5%BB%BA%E6%96%87%E7%AB%A0/"/>
      <url>/2019/06/05/hexo%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97(%E4%B8%80)_%E6%96%B0%E5%BB%BA%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<center>怎么写一个博客</center><a id="more"></a><h1 id="怎么写第一篇博客"><a href="#怎么写第一篇博客" class="headerlink" title="怎么写第一篇博客?"></a>怎么写第一篇博客?</h1><h3 id="创建文章"><a href="#创建文章" class="headerlink" title="创建文章"></a>创建文章</h3><p>在你的blog文件夹下运行命令行窗口(在文件夹下shift+鼠标右键yi可以找到啦!)</p><p>输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"文章名称"</span></span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo n <span class="string">"文章名称"</span></span><br></pre></td></tr></table></figure><p>这样你的第一篇文章就创建好了!</p><hr><h3 id="在哪儿看呢"><a href="#在哪儿看呢" class="headerlink" title="在哪儿看呢~"></a>在哪儿看呢~</h3><p>打开blog目录下的<em>source</em>文件夹下的<em>_posts</em>就可以看到了!</p><p>博客文章是以<em>md</em>结尾的文件,即markdown文本</p><p>以后在这个目录下创建.md文件就可以了</p><p>打开你会发现这样的内容:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo食用指南</span><br><span class="line">date: 2019-06-05 10:25:13</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>第一行是你的文章名</p><p>第二行创建时间</p><p>这就是你的博文啦,开始你的创作吧!</p><p>(建议接下来去看”markdown使用指南”)</p>]]></content>
      
      
      <categories>
          
          <category> hexo食用指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="/2019/06/04/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/06/04/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<center><p>   首先感谢<strong>CodeSheep</strong>大佬录制的教程</p><p>   这个教程帮我几乎零基础搭建好了一个简单的博客,十分感谢</p></center>   <a id="more"></a><h1 id="怎么搭建一个hexo博客"><a href="#怎么搭建一个hexo博客" class="headerlink" title="怎么搭建一个hexo博客"></a>怎么搭建一个hexo博客</h1><p>   这里我就不写文字教程了~</p><p>   大佬的教程在参考文献里~</p><p>   在评论区有很多大佬写的文字教程,还有好看的博课,可以去看看</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p> <a href="http://www.bilibili.com/video/av44544186" target="_blank" rel="noopener">www.bilibili.com/video/av44544186</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo食用指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
